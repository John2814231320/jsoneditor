{
    "$defs": {
        "ActiveIndice": {
            "maximum": 63,
            "minimum": 0,
            "title": "ActiveIndice",
            "type": "integer"
        },
        "AdaptiveHarqRetransmission": {
            "title": "AdaptiveHarqRetransmission",
            "type": "boolean"
        },
        "Aggregate": {
            "title": "Aggregate",
            "type": "boolean"
        },
        "AirTimeOffset": {
            "additionalProperties": false,
            "description": "Offset between secondary BCN (BTS Clock Number) value and Air interface time. Default value will be used if null.\nMaps to SBbbAirTimeOffset",
            "properties": {
                "bcn_n1_offset": {
                    "description": "N1 part of BCN timing offset which counts 10 ms frames",
                    "maximum": 32768,
                    "minimum": -32769,
                    "title": "Bcn N1 Offset",
                    "type": "integer"
                },
                "bcn_n2_offset": {
                    "description": "N2 part of BCN timing offset which counts clock cycles within 10 ms frame",
                    "maximum": 12287999,
                    "minimum": 0,
                    "title": "Bcn N2 Offset",
                    "type": "integer"
                }
            },
            "required": [
                "bcn_n1_offset",
                "bcn_n2_offset"
            ],
            "title": "AirTimeOffset",
            "type": "object"
        },
        "AllocSlot": {
            "description": "Ordered sequence of values where every value represents one slot and could be either 0 or 1. Every value indicates\nif in given slot there is/isn't transmission: 0 - no transmission, 1 - transmission. This sequence is looped so\nit is repeated if there is more slots than defined values (e.g. [1] indicates that there is SRS or PUCCH\ntransmission in every slot). Maps to AllocSlot in 5GMAX.",
            "items": {
                "$ref": "#/$defs/AllocatedSubframe"
            },
            "minItems": 1,
            "title": "AllocSlot",
            "type": "array"
        },
        "AllocUser": {
            "description": "User allocation 1/0 per subframe. Elements are looped until full frame of elements is reached. Then this frame\n is looped through the test",
            "items": {
                "$ref": "#/$defs/AllocatedSubframe"
            },
            "maxItems": 10,
            "minItems": 1,
            "title": "AllocUser",
            "type": "array"
        },
        "AllocatedSubframe": {
            "enum": [
                0,
                1
            ],
            "title": "AllocatedSubframe",
            "type": "integer"
        },
        "AllocatedSymbols": {
            "enum": [
                0,
                1
            ],
            "title": "AllocatedSymbols",
            "type": "integer"
        },
        "AllocationSlot": {
            "maximum": 1,
            "minimum": -1,
            "title": "AllocationSlot",
            "type": "integer"
        },
        "AlternativeBwp": {
            "additionalProperties": false,
            "properties": {
                "bwp_size": {
                    "anyOf": [
                        {
                            "maximum": 273,
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "BWP number of prbs, null indicates remaining maximum carrier bandwidth prbs from bwp_start. Maps to NumPRBs in 5GMax.",
                    "title": "Bwp Size"
                },
                "bwp_start": {
                    "description": "BWP start prb, relative to common resource block 0. Maps to OffsetPRBs in 5GMax.",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Bwp Start",
                    "type": "integer"
                }
            },
            "required": [
                "bwp_start",
                "bwp_size"
            ],
            "title": "AlternativeBwp",
            "type": "object"
        },
        "AlternativeBwps": {
            "description": "In addition to default whole carrier bandwidth, user can configure bandwidth part defined in 3GPP 38.213 section 12.\nMaps to RRC.DLBWP in 5GMax and due to DlBwpIdx value ranges, maximum additional 3 bandwidth parts can be configured.",
            "items": {
                "$ref": "#/$defs/AlternativeBwp"
            },
            "maxItems": 3,
            "minItems": 0,
            "title": "AlternativeBwps",
            "type": "array"
        },
        "AnBit": {
            "items": {},
            "title": "AnBit",
            "type": "array"
        },
        "AnBits": {
            "description": "List of bits sets - bit set is represented by list of integers. Each bit set could be empty or contain up to 2\n Ack/Nack bits. List elements (bit sets) should be interpreted as: [[PCell bits] [SCell0 bits], ..., [SCell5 bits]]",
            "items": {
                "$ref": "#/$defs/AnBit"
            },
            "maxItems": 7,
            "title": "AnBits",
            "type": "array"
        },
        "AnBitsTddItem": {
            "items": {},
            "title": "AnBitsTddItem",
            "type": "array"
        },
        "AntennaArray": {
            "additionalProperties": false,
            "description": "Antenna array configuration",
            "properties": {
                "antenna_dimensional_parameters": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AntennaDimensionalParameters"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maps to AntSlantType in 5GMax."
                },
                "array_type": {
                    "$ref": "#/$defs/ArrayType"
                }
            },
            "required": [
                "antenna_dimensional_parameters",
                "array_type"
            ],
            "title": "AntennaArray",
            "type": "object"
        },
        "AntennaDimensionalParameters": {
            "additionalProperties": false,
            "description": "Antenna dimensional parameters",
            "properties": {
                "element_spacing": {
                    "$ref": "#/$defs/ElementSpacing"
                },
                "slant_type": {
                    "description": "The slant types of antenna array. One character denotes the polarization of the associated element. \\ stands for backslash (one character) in JSON",
                    "items": {
                        "$ref": "#/$defs/SlantTypeItem"
                    },
                    "minItems": 1,
                    "title": "Slant Type",
                    "type": "array"
                }
            },
            "required": [
                "element_spacing",
                "slant_type"
            ],
            "title": "AntennaDimensionalParameters",
            "type": "object"
        },
        "AntennaPort": {
            "maximum": 11,
            "minimum": 0,
            "title": "AntennaPort",
            "type": "integer"
        },
        "AntennaPreComb": {
            "additionalProperties": false,
            "description": "Uplink antenna precombine parameters.",
            "properties": {
                "method": {
                    "$ref": "#/$defs/Method"
                },
                "rx_flow_num_full_ebb": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RxFlowNumFullEbb"
                        }
                    ],
                    "description": "Output flow number of full EBB algorithm. Mapped to ParUnit.RX.UlAntPreComb.RxFlowNumFullEBB for Loki and Thor MMIMO cases"
                }
            },
            "required": [
                "method",
                "rx_flow_num_full_ebb"
            ],
            "title": "AntennaPreComb",
            "type": "object"
        },
        "AntennaSnapshotConfigurationReq": {
            "additionalProperties": false,
            "description": "Contents of the AntennaSnapshotConfigurationReq message",
            "properties": {
                "buffer_cycle": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/BufferCycle"
                        }
                    ],
                    "description": "Loki only. Value selected by WebEM user, if not set WebEM shall set it to 1024 frames. Maps to EAntennaSnapshotBufferCycle in AntennaSnapshotConfigurationReq message."
                },
                "capture_frame_offset": {
                    "description": "Loki only. Value selected by WebEM user, if not set WebEM shall set it to 0. Maps to captureFrameOffset in AntennaSnapshotConfigurationReq message.",
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "Capture Frame Offset",
                    "type": "integer"
                },
                "capture_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CaptureType"
                        }
                    ],
                    "description": "Loki only. Specifies if capture is done in BBU only or in BBU and RU. Maps to EAntennaSnapshotCaptureType in AntennaSnapshotConfigurationReq message."
                },
                "dl_cell_ids": {
                    "description": "List of LTE DL cell IDs, corresponding to ln_cell_id values from cell configuration (LTE only). Maps to dlCellId in AntennaSnapshotConfigurationReq message.",
                    "items": {
                        "$ref": "#/$defs/LnCellId"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Dl Cell Ids",
                    "type": "array"
                },
                "dl_subcell_ids": {
                    "description": "List of 5G DL subcell IDs, corresponding to subcell_id values from cell configuration (5G only). Maps to dlSubcellId in AntennaSnapshotConfigurationReq message.",
                    "items": {
                        "$ref": "#/$defs/SubcellIdModel"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Dl Subcell Ids",
                    "type": "array"
                },
                "l1_event_enabled": {
                    "description": "Maps to antSnapshotL1EventEnabled in AntennaSnapshotConfigurationReq message.",
                    "title": "L1 Event Enabled",
                    "type": "boolean"
                },
                "nb_ul_subcarriers": {
                    "items": {
                        "$ref": "#/$defs/NbUlSubcarrier"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Nb Ul Subcarriers",
                    "type": "array"
                },
                "reason": {
                    "$ref": "#/$defs/Reason"
                },
                "ul_cell_ids": {
                    "description": "List of LTE UL cell IDs or Uplink narrowbands ln_cell_id. If regular LTE, maps to ulCellId in AntennaSnapshotConfigurationReq, If NBIoT, maps to low 16-bits of ulCellId in AntennaSnapshotConfigurationReq message.",
                    "items": {
                        "$ref": "#/$defs/LnCellId"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Ul Cell Ids",
                    "type": "array"
                },
                "ul_subcell_ids": {
                    "description": "List of 5G UL subcell IDs, corresponding to subcell_id values from cell configuration (5G only). Maps to ulSubcellId in AntennaSnapshotConfigurationReq message.",
                    "items": {
                        "$ref": "#/$defs/SubcellIdModel"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Ul Subcell Ids",
                    "type": "array"
                }
            },
            "required": [
                "ul_cell_ids",
                "dl_cell_ids",
                "ul_subcell_ids",
                "dl_subcell_ids",
                "l1_event_enabled",
                "reason",
                "capture_type",
                "buffer_cycle",
                "capture_frame_offset",
                "nb_ul_subcarriers"
            ],
            "title": "AntennaSnapshotConfigurationReq",
            "type": "object"
        },
        "AntennaSnapshotReq": {
            "additionalProperties": false,
            "description": "Contents of the AntennaSnapshotReq message",
            "properties": {
                "capture_mode": {
                    "$ref": "#/$defs/CaptureMode"
                },
                "file_format": {
                    "$ref": "#/$defs/FileFormat"
                },
                "request_type": {
                    "$ref": "#/$defs/RequestType"
                },
                "response_ack": {
                    "description": "Send response ACK? Maps to responseAck in AntennaSnapshotReq message.",
                    "title": "Response Ack",
                    "type": "boolean"
                },
                "sfn": {
                    "description": "SFN of the last IQ sample to capture. Range 0..0x3FF, 0xFFFF for immediate. Maps to sfn in AntennaSnapshotReq message.",
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "Sfn",
                    "type": "integer"
                },
                "slot": {
                    "description": "Slot number of the last IQ sample to capture. Maps to slot in AntennaSnapshotReq message.",
                    "minimum": 0,
                    "title": "Slot",
                    "type": "integer"
                }
            },
            "required": [
                "sfn",
                "slot",
                "request_type",
                "capture_mode",
                "file_format",
                "response_ack"
            ],
            "title": "AntennaSnapshotReq",
            "type": "object"
        },
        "AntennaStreamItem": {
            "maximum": 255,
            "minimum": 0,
            "title": "AntennaStreamItem",
            "type": "integer"
        },
        "Architecture": {
            "additionalProperties": false,
            "properties": {
                "variant": {
                    "$ref": "#/$defs/Variant"
                }
            },
            "required": [
                "variant"
            ],
            "title": "Architecture",
            "type": "object"
        },
        "ArrayType": {
            "description": "Antenna array type. Maps to ArrayType in 5GMax.",
            "enum": [
                "ULA",
                "URA"
            ],
            "title": "ArrayType",
            "type": "string"
        },
        "AxcPosition": {
            "description": "Maps to axcPosition of CellSetupRequest. CPRI: length must match with number_of_antennas\ntimes number_of_carrier_parts. ECPRI: list should be empty",
            "items": {
                "$ref": "#/$defs/AxcPositionItem"
            },
            "maxItems": 16,
            "minItems": 0,
            "title": "AxcPosition",
            "type": "array"
        },
        "AxcPositionItem": {
            "minimum": 0,
            "title": "AxcPositionItem",
            "type": "integer"
        },
        "BbReconfiguration": {
            "additionalProperties": false,
            "properties": {
                "l1_subpool": {
                    "items": {
                        "$ref": "#/$defs/L1SubpoolItem"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "L1 Subpool",
                    "type": "array"
                },
                "sfn": {
                    "description": "Absolute system frame number from which reconfiguration should be applied.",
                    "title": "Sfn",
                    "type": "integer"
                }
            },
            "required": [
                "sfn",
                "l1_subpool"
            ],
            "title": "BbReconfiguration",
            "type": "object"
        },
        "BbResourceReconfiguration": {
            "additionalProperties": false,
            "properties": {
                "bb_reconfiguration": {
                    "$ref": "#/$defs/BbReconfiguration"
                },
                "domain": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/trx5g__l1_sct_definition__sct_configuration__bb_resource_reconfiguration__Domain"
                        }
                    ],
                    "description": "Domain selecion for PRB pooling message. Reflects usage of UlPool or DlPool messages."
                },
                "pool_id": {
                    "description": "Existing pool identifier from pool_configuration, for which reconfiguration messages are intended.",
                    "title": "Pool Id",
                    "type": "integer"
                },
                "send_at_slot": {
                    "description": "Absolute slot number at which message will be sent to target.",
                    "title": "Send At Slot",
                    "type": "integer"
                }
            },
            "required": [
                "send_at_slot",
                "domain",
                "pool_id",
                "bb_reconfiguration"
            ],
            "title": "BbResourceReconfiguration",
            "type": "object"
        },
        "Beamforming": {
            "additionalProperties": false,
            "description": "Beamforming specific configuration.",
            "properties": {
                "activate_fallback_to_special_subframe_5": {
                    "description": "Indicates whether the cell is configured with CPRI 8 pipe RRU (the calibration fallback to SSF5 is enabled/disabled accordingly). Maps to actFallback2Ssf5 in PhyDlCellSetupReq message.",
                    "title": "Activate Fallback To Special Subframe 5",
                    "type": "boolean"
                },
                "max_valid_time_of_measurement": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/MaxValidTimeOfMeasurement"
                        }
                    ],
                    "description": "Indicates the maximum time during which the measurement channel information is valid. Maps to timeChInfoValid in DlCellSetupReq message."
                },
                "number_of_antennas": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfAntennas1"
                        }
                    ],
                    "description": "Number of antennas used in cell for beamforming. When massive MIMO is enabled, the number of antennas is extended up to 64. Maps to numOfBfAntennas in DlCellSetupReq message."
                },
                "sector_beamforming_amplitudes_and_angles_for_antenna": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/BeamformingAmplitudesAndAngles"
                            },
                            "maxItems": 32,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Defines the downlink sector beamforming weight for sector beamforming solution for 8TX ecpri",
                    "title": "Sector Beamforming Amplitudes And Angles For Antenna"
                },
                "sector_beamforming_weight_for_antenna": {
                    "description": "Defines the downlink sector beamforming weight for sector beamforming solution",
                    "items": {
                        "$ref": "#/$defs/BeamformingWeight"
                    },
                    "maxItems": 32,
                    "title": "Sector Beamforming Weight For Antenna",
                    "type": "array"
                },
                "sector_beamforming_weight_for_antenna_vertical": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/BeamformingWeight"
                            },
                            "maxItems": 4,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Defines the downlink vertical sector beamforming weight for sector beamforming solution. It is used only on non-beamforming mode channels and signals",
                    "title": "Sector Beamforming Weight For Antenna Vertical"
                }
            },
            "required": [
                "number_of_antennas",
                "sector_beamforming_weight_for_antenna",
                "sector_beamforming_weight_for_antenna_vertical",
                "sector_beamforming_amplitudes_and_angles_for_antenna",
                "max_valid_time_of_measurement",
                "activate_fallback_to_special_subframe_5"
            ],
            "title": "Beamforming",
            "type": "object"
        },
        "BeamformingAmplitudesAndAngles": {
            "additionalProperties": false,
            "description": "Beamforming weight configuration in amplitude, angles pairs.",
            "properties": {
                "amplitude": {
                    "description": "Amplitude to calculate real and imag parts",
                    "title": "Amplitude",
                    "type": "number"
                },
                "angle": {
                    "description": "Angle to calculate real and imag parts",
                    "title": "Angle",
                    "type": "number"
                }
            },
            "required": [
                "amplitude",
                "angle"
            ],
            "title": "BeamformingAmplitudesAndAngles",
            "type": "object"
        },
        "BeamformingPatternsSetConf": {
            "additionalProperties": false,
            "description": "Definition beamforming patterns set configurations.",
            "properties": {
                "count": {
                    "description": "Number of consecutive beamforming weight vectors. Allowed values from 1 to N-record. If not provided, value 1 shall be used.",
                    "minimum": 1,
                    "title": "Count",
                    "type": "integer"
                },
                "file": {
                    "description": "Name of file that contains beamforming weight vectors.",
                    "title": "File",
                    "type": "string"
                },
                "record": {
                    "description": "Index of weight vector. Allowed values from 0 to N-1 where N is the total number of weight vectors in the file. If not provided, value 0 shall be used.",
                    "minimum": 0,
                    "title": "Record",
                    "type": "integer"
                },
                "tilt_offset": {
                    "description": "Parameter used to specify vertical tilt of a beam. Value is the offset from HW-specific vertical tilt of a beam in degrees. Weight vectors selected basing on record, pid and count shall be transformed in a way that produced beams are vertically tilted by tilt_offset. Allowed tilt offset range [-13, +13] defined in L1L_SW_4587.",
                    "maximum": 13,
                    "minimum": -13,
                    "title": "Tilt Offset",
                    "type": "integer"
                }
            },
            "required": [
                "file",
                "record",
                "count",
                "tilt_offset"
            ],
            "title": "BeamformingPatternsSetConf",
            "type": "object"
        },
        "BeamformingWeight": {
            "additionalProperties": false,
            "description": "Beamforming weight configuration.",
            "properties": {
                "imag": {
                    "description": "Imaginary part of complex beamforming weight. It is expressed by Q15 HEX. i.e. 0xDF17",
                    "title": "Imag",
                    "type": "string"
                },
                "real": {
                    "description": "Real part of complex beamforming weight. It is expressed by Q15 HEX. i.e. 0xDF17",
                    "title": "Real",
                    "type": "string"
                }
            },
            "required": [
                "real",
                "imag"
            ],
            "title": "BeamformingWeight",
            "type": "object"
        },
        "BeamformingWeightVectorConfig": {
            "additionalProperties": false,
            "properties": {
                "method": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Method1"
                        }
                    ],
                    "description": "Beamforming Weight Vector Algorithm. Maps to pSRSBwvConfig.method in UlCell_SetupReq and to ParUnit{1}.DigitalBeamforming.Method in 5GMAX."
                },
                "number_of_prbs_per_wideband": {
                    "anyOf": [
                        {
                            "maximum": 272,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Used to set the number of prb per wideband when prb blanking is enabled.",
                    "title": "Number Of Prbs Per Wideband"
                },
                "power_threshold": {
                    "description": "Beamforming Weight Vector Port Power Select Threshold. Maps to pSRSBwvConfig.srsPortPowerThreshold in UlCell_SetupReq",
                    "maximum": 400,
                    "minimum": -1500,
                    "title": "Power Threshold",
                    "type": "integer"
                },
                "sinr_threshold": {
                    "description": "SRS SINR threshold for Short Term beamweight vector calculation. Maps to pSRSBwvConfig.srsSinrThreshold in UlCell_SetupReq.",
                    "maximum": 400,
                    "minimum": -400,
                    "title": "Sinr Threshold",
                    "type": "integer"
                },
                "subband_size": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SubbandSize"
                        }
                    ],
                    "description": "Size of the subband (in PRBs) for the calculation of the beam-weight-vectors. Maps to pSRSBwvConfig.bwvSubbandSize in UlCell_SetupReq and to ParUnit{1}.DigitalBeamforming.PRBGroupSize in 5GMAX"
                },
                "toc_mode": {
                    "$ref": "#/$defs/TocMode"
                }
            },
            "required": [
                "method",
                "subband_size",
                "toc_mode",
                "power_threshold",
                "number_of_prbs_per_wideband",
                "sinr_threshold"
            ],
            "title": "BeamformingWeightVectorConfig",
            "type": "object"
        },
        "BeamformingWeightsTransmissionConfiguration": {
            "additionalProperties": false,
            "description": "Defines how beamforming weights will be sent in the FCP extension 11 type A through PRB bundles.",
            "properties": {
                "axc_id_negative_polarity": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CeAxcId"
                        }
                    ],
                    "description": "Axc ID used in sending FCP message extension 11 type A for negative (-) polarity. Must be of type RT_BWV (3rd and 6th bit set to 1)."
                },
                "axc_id_positive_polarity": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CeAxcId"
                        }
                    ],
                    "description": "Axc ID used in sending FCP message extension 11 type A for positive (+) polarity. Must be of type RT_BWV (3rd and 6th bit set to 1)."
                },
                "max_number_of_prb_bundles_per_slot": {
                    "description": "Maximum number of PRB bundles in FCP extension 11 type A that should be sent in a single slot.This number cannot be higher than 154, as this will exceed the allowed size of a FCP message in single symbol. The maximum size for a single FCP message is 1 500 bytes That means that at most, 11 PRB bundles can be sent in a single message. Considering the fact that those messages are sent per symbol, there can be at most 14 * 11 PRB bundles in a single slot.",
                    "maximum": 154,
                    "minimum": 1,
                    "title": "Max Number Of Prb Bundles Per Slot",
                    "type": "integer"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "max_number_of_prb_bundles_per_slot",
                "axc_id_positive_polarity",
                "axc_id_negative_polarity",
                "timing_advance"
            ],
            "title": "BeamformingWeightsTransmissionConfiguration",
            "type": "object"
        },
        "BestBeamPowerOffset": {
            "description": "Best beam power offset for rank3/rank4 PDSCH or 4-port CSI-RS, by step of 0.1 dB for each slot (cyclically repeated\n in whole test). Maps to BestBeamPowerOffsetVal (-best_beam_power_offset/10) in 5GMax and\n  PdschSendReq.bestBeamPowerOffset or CsiRsSendReq.csiBestBeamPowerOffset.",
            "items": {
                "$ref": "#/$defs/BestBeamPowerOffsetItem"
            },
            "minItems": 1,
            "title": "BestBeamPowerOffset",
            "type": "array"
        },
        "BestBeamPowerOffsetItem": {
            "maximum": 150,
            "minimum": 0,
            "title": "BestBeamPowerOffsetItem",
            "type": "integer"
        },
        "BfMeasurement": {
            "description": "This is TDD BF specific parameter, indicates whether the beamforming measurement is needed and short-term\n beamforming coefficients should be reset.",
            "enum": [
                "NotRequired",
                "Required",
                "STRequired",
                "CovMRequired",
                "TestMode",
                "LTMassiveMIMO"
            ],
            "title": "BfMeasurement",
            "type": "string"
        },
        "BfSubbandIndex": {
            "additionalProperties": false,
            "properties": {
                "csirs": {
                    "anyOf": [
                        {
                            "maximum": 254,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Subband Id for CSI-RS Real-Time beams calculation.",
                    "title": "Csirs"
                },
                "eirp": {
                    "anyOf": [
                        {
                            "maximum": 254,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Subband Id for EIRP report.",
                    "title": "Eirp"
                }
            },
            "required": [
                "csirs",
                "eirp"
            ],
            "title": "BfSubbandIndex",
            "type": "object"
        },
        "BlankedPrb": {
            "additionalProperties": false,
            "properties": {
                "blanked_lower_edge_prbs_mask": {
                    "description": "Blanking PRBs bitmask; maps to `blankedLowerEdgePrbs` of `PHY_pdcchSendReq`",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "title": "Blanked Lower Edge Prbs Mask",
                    "type": "array"
                },
                "blanked_upper_edge_prbs_mask": {
                    "description": "Blanking PRBs bitmask; maps to `blankedUpperEdgePrbs` of `PHY_pdcchSendReq`",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "title": "Blanked Upper Edge Prbs Mask",
                    "type": "array"
                },
                "subframe": {
                    "description": "Subframe for which blanking PRB bitmask is defined",
                    "minimum": 0,
                    "title": "Subframe",
                    "type": "integer"
                }
            },
            "required": [
                "subframe",
                "blanked_upper_edge_prbs_mask",
                "blanked_lower_edge_prbs_mask"
            ],
            "title": "BlankedPrb",
            "type": "object"
        },
        "BlankedPrbs": {
            "description": "Blanked PRB's parameters",
            "items": {
                "$ref": "#/$defs/BlankedPrb"
            },
            "minItems": 1,
            "title": "BlankedPrbs",
            "type": "array"
        },
        "BlerTarget": {
            "description": "UL data BLER target value, used for selection of valid pneRbThresholds set. Maps to blerTarget in\nPuschReceiveReqGrant message. Maps to TargetBLER in 5GMAX.",
            "enum": [
                "blerTarget_0_point_1",
                "blerTarget_0_point_01"
            ],
            "title": "BlerTarget",
            "type": "string"
        },
        "BsArchitecture": {
            "additionalProperties": false,
            "properties": {
                "fxp_modules": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Optional list of FXP modules to enable during simulation",
                    "title": "Fxp Modules"
                },
                "model": {
                    "$ref": "#/$defs/Model"
                },
                "target_board": {
                    "$ref": "#/$defs/TargetBoard"
                },
                "variant": {
                    "anyOf": [
                        {
                            "pattern": "^2\\d{1}R\\d{1}$",
                            "type": "string"
                        },
                        {
                            "pattern": "^2\\d{1}R\\d{1}l1sw$",
                            "type": "string"
                        },
                        {
                            "pattern": "^2\\d{1}A|B$",
                            "type": "string"
                        },
                        {
                            "pattern": "Default",
                            "type": "string"
                        },
                        {
                            "pattern": "5G_LOKI_AP",
                            "type": "string"
                        }
                    ],
                    "description": "Customer specific settings corresponding to the selected TargetBoard.",
                    "title": "Variant"
                }
            },
            "required": [
                "target_board",
                "variant",
                "model",
                "fxp_modules"
            ],
            "title": "BsArchitecture",
            "type": "object"
        },
        "BufferCycle": {
            "description": "Loki only. Value selected by WebEM user, if not set WebEM shall set it to 1024 frames.\n Maps to EAntennaSnapshotBufferCycle in AntennaSnapshotConfigurationReq message.",
            "enum": [
                "Frames_2",
                "Frames_4",
                "Frames_8",
                "Frames_16",
                "Frames_32",
                "Frames_64",
                "Frames_128",
                "Frames_256",
                "Frames_512",
                "Frames_1024"
            ],
            "title": "BufferCycle",
            "type": "string"
        },
        "BundleSizeOpenLoop": {
            "description": "PRB bundling size for open-loop MIMO schemes. Maps to PrbBundleSizeOl in 5GMax.",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                66,
                128,
                256,
                273
            ],
            "title": "BundleSizeOpenLoop",
            "type": "integer"
        },
        "CandidateSubcellId": {
            "description": "Candidate subcell ID. Used in supercell mode, ignored otherwise. The range is 0-6 for TDD with 0 as invalid value\n and 0-5 for FDD with 255 as invalid. For more information please see PhyData specification",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                255
            ],
            "title": "CandidateSubcellId",
            "type": "integer"
        },
        "CaptureDataSource": {
            "description": "Source of captured data (Fronthaul / Frequency Domain)",
            "enum": [
                "FD",
                "FH"
            ],
            "title": "CaptureDataSource",
            "type": "string"
        },
        "CaptureDirection": {
            "enum": [
                "UL",
                "DL"
            ],
            "title": "CaptureDirection",
            "type": "string"
        },
        "CaptureMode": {
            "description": "Capture mode. Maps to captureMode in AntennaSnapshotReq message.",
            "enum": [
                "StopContinuousCapture",
                "StartSingleCapture"
            ],
            "title": "CaptureMode",
            "type": "string"
        },
        "CapturePartialCell": {
            "additionalProperties": false,
            "description": "Indicates whether partial capture is enabled or not, currently this field is NR DL specific. If the value is null,\nthen it is disabled.",
            "properties": {
                "capture_nr_dl_start_subcell_index": {
                    "description": "Indicates from which NR DL subcell index (= position in TRX cell[] array) to start the capture. E.g. to capture starting from the first cell, then capture_nr_start_subcell_index should be set to 0",
                    "minimum": 0,
                    "title": "Capture Nr Dl Start Subcell Index",
                    "type": "integer"
                },
                "capture_nr_dl_subcell_length": {
                    "description": "Indicates how many NR DL subcells to capture starting from capture_nr_dl_start_subcell_index. If capture_nr_dl_subcell_length = 0, then nothing will be captured.",
                    "minimum": 0,
                    "title": "Capture Nr Dl Subcell Length",
                    "type": "integer"
                }
            },
            "required": [
                "capture_nr_dl_start_subcell_index",
                "capture_nr_dl_subcell_length"
            ],
            "title": "CapturePartialCell",
            "type": "object"
        },
        "CaptureType": {
            "description": "Loki only. Specifies if capture is done in BBU only or in BBU and RU.\n Maps to EAntennaSnapshotCaptureType in AntennaSnapshotConfigurationReq message.",
            "enum": [
                "BBU",
                "BBURU"
            ],
            "title": "CaptureType",
            "type": "string"
        },
        "CatM": {
            "additionalProperties": false,
            "description": "Cat-M PDCCH configuration for cell. This field should be set to null if Cat-M PDCCH is disabled.",
            "properties": {
                "epdcch_pow_boost_pc_db": {
                    "description": "The ratio of EPDCCH EPRE to CSI-RS EPRE. Maps to ParCell{}.MAC.DLMAP{}.EPDCCHpowBoostPcDb in 5GMAX.",
                    "maximum": 15,
                    "minimum": -8,
                    "title": "Epdcch Pow Boost Pc Db",
                    "type": "integer"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in SMPdcchDciInfo message."
                }
            },
            "required": [
                "tx_power",
                "epdcch_pow_boost_pc_db"
            ],
            "title": "CatM",
            "type": "object"
        },
        "CatM1": {
            "additionalProperties": false,
            "properties": {
                "ce": {
                    "$ref": "#/$defs/CeMode"
                },
                "frequency_hopping_nb_interv": {
                    "$ref": "#/$defs/FrequencyHoppingNbInterv"
                },
                "number_of_repetitions": {
                    "description": "Number of user's repetitions. Defines the number of times the user is sent by the device in order to improve to chances to send data properly. Maps to ParCell.MAC.DLMAP.PDCCH.NumRep in 5GMax.",
                    "title": "Number Of Repetitions",
                    "type": "integer"
                }
            },
            "required": [
                "number_of_repetitions",
                "ce",
                "frequency_hopping_nb_interv"
            ],
            "title": "CatM1",
            "type": "object"
        },
        "CatM2": {
            "additionalProperties": false,
            "description": "Cat-M parameters.",
            "properties": {
                "ce": {
                    "$ref": "#/$defs/CeMode"
                },
                "frequency_hopping_nb_interv": {
                    "$ref": "#/$defs/FrequencyHoppingNbInterv"
                },
                "max_bandwidth": {
                    "$ref": "#/$defs/MaxBandwidth"
                },
                "number_of_repetitions": {
                    "description": "Number of user's repetitions. Defines the number of times the user is sent by the device in order to improve to chances to send data properly. Maps to ParCell.MAC.DLMAP.PDSCH.NumRep in 5GMax.",
                    "title": "Number Of Repetitions",
                    "type": "integer"
                }
            },
            "required": [
                "number_of_repetitions",
                "ce",
                "max_bandwidth",
                "frequency_hopping_nb_interv"
            ],
            "title": "CatM2",
            "type": "object"
        },
        "CeAxcId": {
            "maximum": 65535,
            "minimum": 0,
            "title": "CeAxcId",
            "type": "integer"
        },
        "CeAxcIds": {
            "description": "Set of ceAxC IDs to be used for transmission on eCPRI Fronthaul. For DU: if null, TRX will generate them.\nFor RU: 7th bit is used as polarisation, 8-10 bits are used as cc_ids. Whole definition: L1L_SW_161.",
            "items": {
                "$ref": "#/$defs/CeAxcId"
            },
            "maxItems": 20,
            "minItems": 1,
            "title": "CeAxcIds",
            "type": "array"
        },
        "CeAxcIndice": {
            "maximum": 15,
            "minimum": 0,
            "title": "CeAxcIndice",
            "type": "integer"
        },
        "CeAxcIndices": {
            "description": "Set of ceAxC indices to be used for transmission on eCPRI Fronthaul.",
            "items": {
                "$ref": "#/$defs/CeAxcIndice"
            },
            "maxItems": 16,
            "minItems": 1,
            "title": "CeAxcIndices",
            "type": "array"
        },
        "CeMode": {
            "description": "Coverage extension(enhancement) mode.",
            "enum": [
                "Legacy",
                "CEModeA",
                "CEModeB"
            ],
            "title": "CeMode",
            "type": "string"
        },
        "CellAnt": {
            "additionalProperties": false,
            "properties": {
                "totalPower": {
                    "$ref": "#/$defs/Tolerance"
                }
            },
            "required": [
                "totalPower"
            ],
            "title": "CellAnt",
            "type": "object"
        },
        "CellExtension": {
            "description": "Flag of extended FR2 cell range. Maps to UlCell_SetupReq.cellExtension. Maps to `ParUnit{}.PRACH.PrachCellExtension`\nIN 5GMAX. IF EQUAL TO 23, 69 OR 110, THEN PARUNIT{}.PRACH.SEARCHWINOFFSETSAMPLESSHORTFORMAT = 0,\nPARUNIT{}.PRACH.SEARCHWINOFFSETTSSF = [16, 14, 14, 0],\nPARUNIT{}.PRACH.MAXCELLSIZEOPT=0 AND PARUNIT{}.PRACH.GUARDSAMPLESSHORTFORMAT = 0 will be set in 5GMAX.",
            "enum": [
                10,
                23,
                69,
                110
            ],
            "title": "CellExtension",
            "type": "integer"
        },
        "CellPrb": {
            "additionalProperties": false,
            "properties": {
                "interfPower_slot0": {
                    "$ref": "#/$defs/Tolerance"
                },
                "interfPower_slot1": {
                    "$ref": "#/$defs/Tolerance"
                },
                "signalPower_slot0": {
                    "$ref": "#/$defs/Tolerance"
                },
                "signalPower_slot1": {
                    "$ref": "#/$defs/Tolerance"
                }
            },
            "required": [
                "interfPower_slot0",
                "interfPower_slot1",
                "signalPower_slot0",
                "signalPower_slot1"
            ],
            "title": "CellPrb",
            "type": "object"
        },
        "CellSlotConfig": {
            "additionalProperties": false,
            "description": "Cell slot configuration",
            "properties": {
                "amount_of_slots": {
                    "description": "Number of cell slots. The maximum number of cell slots depends on other cell features. The current maximum value of 48 is set to support supercells (LTE_UP_29426 specification). If supercell is not present and amount_of_slots exceeds 32, the values validator will raise an error",
                    "maximum": 48,
                    "minimum": 1,
                    "title": "Amount Of Slots",
                    "type": "integer"
                },
                "lowest_slot": {
                    "description": "The lowest cell slot",
                    "maximum": 191,
                    "minimum": 0,
                    "title": "Lowest Slot",
                    "type": "integer"
                }
            },
            "required": [
                "amount_of_slots",
                "lowest_slot"
            ],
            "title": "CellSlotConfig",
            "type": "object"
        },
        "CellSlotConfiguration": {
            "additionalProperties": false,
            "properties": {
                "cell_slots_amount": {
                    "description": "Required amount of cell slots",
                    "minimum": 0,
                    "title": "Cell Slots Amount",
                    "type": "integer"
                },
                "lowest_slot_id": {
                    "description": "Required lowest cell slot ID",
                    "minimum": 0,
                    "title": "Lowest Slot Id",
                    "type": "integer"
                },
                "unused_slots_amount": {
                    "description": "Amount of cell slots not in use. Maps to unusedSlotsAmount in subpool configuration in L1Config_SwConfigurationReq.",
                    "minimum": 0,
                    "title": "Unused Slots Amount",
                    "type": "integer"
                }
            },
            "required": [
                "lowest_slot_id",
                "cell_slots_amount",
                "unused_slots_amount"
            ],
            "title": "CellSlotConfiguration",
            "type": "object"
        },
        "CellTolerance": {
            "additionalProperties": false,
            "properties": {
                "remoteInterferencePower": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "PUSCH cell remote interference power tolerance [dBm]"
                }
            },
            "required": [
                "remoteInterferencePower"
            ],
            "title": "CellTolerance",
            "type": "object"
        },
        "ChannelType": {
            "description": "Models of signal noise in channel transmissions. For conformance testing requirements, see 3GPP 38.141.\nMapped to ParCH.Def.ChannelType",
            "enum": [
                "AWGN",
                "TDLC300",
                "TDLA30",
                "SCM_3GPP_3D_CDL_D"
            ],
            "title": "ChannelType",
            "type": "string"
        },
        "ChannelTypeModel": {
            "enum": [
                "AWGN",
                "PrachTest",
                "PED_B_3path",
                "VEH_B_3path",
                "VEH_A_2path",
                "VEH_A_1path",
                "SinglePath",
                "IND_A",
                "IND_B",
                "IOP_A",
                "IOP_B",
                "PED_A",
                "PED_B",
                "PED_B_Bandpass",
                "VEH_A",
                "VEH_B",
                "TU",
                "BU",
                "RA",
                "HT",
                "Hilly_Jakes",
                "Hilly_Bandpass",
                "Hilly_Gauss",
                "TU_Bandpass",
                "TU_Gauss",
                "BU_sqz_Jakes",
                "BU_sqz_Bandpass",
                "BU_sqz_Gauss",
                "VEH_A_Bandpass",
                "VEH_A_Gauss",
                "VEH_B_3path_Bandpass",
                "ETU_Bandpass",
                "ETU_Gauss",
                "EVA_Bandpass",
                "EVA_Gauss",
                "RayleighOnePathJakes",
                "RayleighOnePathFlat",
                "case1_3GPP",
                "case2_3GPP",
                "case3_3GPP",
                "case4_3GPP",
                "SUI_1",
                "EPA",
                "EVA",
                "ETU",
                "3GPP_MBMS",
                "Demo_2path_static",
                "Demo_3path_static",
                "Demo_3path_fading",
                "SCM_ITU_InHLoS",
                "SCM_ITU_InHNLoS",
                "SCM_ITU_UMiLoS",
                "SCM_ITU_UMiNLoS",
                "SCM_ITU_UMiO2I",
                "SCM_ITU_UMiLoS_K20dB",
                "SCM_ITU_UMaLoS",
                "SCM_ITU_UMaNLoS",
                "SCM_ITU_SMaLoS",
                "SCM_ITU_SMaNLoS",
                "SCM_ITU_RMaLoS",
                "SCM_ITU_RMaNLoS",
                "SCME_3GPP_UMaNLoS1",
                "SCME_3GPP_UMaNLoS2",
                "SCME_3GPP_UMiNLoS",
                "SCME_3GPP_SMaNLoS",
                "SCM_PED_B",
                "SCM_VEH_A",
                "SCM_1path_AS5deg",
                "SCM_1path_AS15deg",
                "SCM_Demo_2path",
                "SCM_3GPP_3D_UMi_LoS",
                "SCM_3GPP_3D_UMi_NLoS",
                "SCM_3GPP_3D_UMi_LoS_OtoI",
                "SCM_3GPP_3D_UMi_NLoS_OtoI",
                "SCM_3GPP_3D_UMa_LoS",
                "SCM_3GPP_3D_UMa_NLoS",
                "SCM_3GPP_3D_UMa_LoS_OtoI",
                "SCM_3GPP_3D_UMa_NLoS_OtoI",
                "SCM_3GPP_3D_CDL_D"
            ],
            "title": "ChannelTypeModel",
            "type": "string"
        },
        "Closedloop3gppCodebook": {
            "description": "Type of codebook for closed loop transmission. Value XportTypeICodebook means Type I Single-Panel codebook for\n X ports. Maps to closedLoop3gppCodebook in PdschSendReq message.",
            "enum": [
                "TwoportTypeICodebook",
                "FourportTypeICodebook",
                "EightportTypeICodebook",
                "IdentityCodebook",
                "INVALID"
            ],
            "title": "Closedloop3gppCodebook",
            "type": "string"
        },
        "CodebookIndice": {
            "maximum": 15,
            "minimum": 0,
            "title": "CodebookIndice",
            "type": "integer"
        },
        "CodebookSubset": {
            "description": "Codebook subset. Maps to ParUnit.TX.CodebookSubset in 5GMax.",
            "enum": [
                "FullyAndPartialAndNonCoherent",
                "PartialAndNonCoherent",
                "NonCoherent"
            ],
            "title": "CodebookSubset",
            "type": "string"
        },
        "CombinationMode": {
            "description": "Indicates PUSCH combination mode to be set for given cell. Available values: 'IRC', 'MRC'",
            "enum": [
                "IRC",
                "MRC"
            ],
            "title": "CombinationMode",
            "type": "string"
        },
        "Comp": {
            "additionalProperties": false,
            "properties": {
                "combined_comp": {
                    "description": "Flag enables PHY_UlCompReq/Resp messages. Applied only for LOKI.",
                    "title": "Combined Comp",
                    "type": "boolean"
                },
                "compMode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CompMode"
                        }
                    ],
                    "description": "One of available CoMP modes (IQ_Combining, Cran_IQ_Combining, Flex_CoMP). Flex_CoMP is the TRX equivalent of PhyCell's EUlCoMPMode.PostFFTdata_Combining, the remaining names are the same between TRX and EUlCoMPMode."
                },
                "neighbors": {
                    "description": "List of CoMP neighbor cells",
                    "items": {
                        "$ref": "#/$defs/Neighbor"
                    },
                    "title": "Neighbors",
                    "type": "array"
                },
                "satisfiedFftDataFwdReqs": {
                    "description": "Expected number of satisfied UlFftDataFwdReqs per TTI, used in FlexCoMP mode",
                    "items": {
                        "$ref": "#/$defs/SatisfiedFftDataFwdReq"
                    },
                    "maxItems": 10,
                    "title": "Satisfiedfftdatafwdreqs",
                    "type": "array"
                },
                "ulCoMpSinrThreshold": {
                    "description": "Value in decibel scale used in CoMP antenna selection algorithm. The signals are combined when SINR difference between serving cell (master cell) and neighbor cell is lower than the threshold",
                    "maximum": 30,
                    "minimum": -20,
                    "title": "Ulcompsinrthreshold",
                    "type": "integer"
                }
            },
            "required": [
                "neighbors",
                "ulCoMpSinrThreshold",
                "compMode",
                "satisfiedFftDataFwdReqs",
                "combined_comp"
            ],
            "title": "Comp",
            "type": "object"
        },
        "CompMode": {
            "description": "One of available CoMP modes (IQ_Combining, Cran_IQ_Combining, Flex_CoMP). Flex_CoMP is the TRX equivalent of\nPhyCell's EUlCoMPMode.PostFFTdata_Combining, the remaining names are the same between TRX and EUlCoMPMode.",
            "enum": [
                "IQ_Combining",
                "Cran_IQ_Combining",
                "Flex_CoMP"
            ],
            "title": "CompMode",
            "type": "string"
        },
        "ComplexNumber": {
            "description": "Array contains consisting of a real and an imaginary number",
            "items": {
                "type": "number"
            },
            "maxItems": 2,
            "minItems": 2,
            "title": "ComplexNumber",
            "type": "array"
        },
        "ComplexNumberType": {
            "description": "Complex number representation - an array that contains a real and an imaginary number (float).",
            "items": {
                "type": "number"
            },
            "maxItems": 2,
            "minItems": 2,
            "title": "ComplexNumberType",
            "type": "array"
        },
        "CompressionMethod": {
            "description": "Specifies I/Q compression method. Mapped to ParUnit.[ RX|TX ].Compression.IQComp.Method",
            "enum": [
                "Mu_law",
                "Mu_law_ProductAligned"
            ],
            "title": "CompressionMethod",
            "type": "string"
        },
        "ConfigIndex": {
            "description": "PRACH configuration index",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                63
            ],
            "title": "ConfigIndex",
            "type": "integer"
        },
        "ConfigurablePayloadItem": {
            "maximum": 1,
            "minimum": 0,
            "title": "ConfigurablePayloadItem",
            "type": "integer"
        },
        "ConfigurationRow": {
            "description": "Configuration table row number in 38.211, table 7.4.1.5.3-1. Maps to csiRsConfig in CsiRsSendReq message.'\nMaps to CsiRsConfig in 5GMax.",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18
            ],
            "title": "ConfigurationRow",
            "type": "integer"
        },
        "ConfigurationType": {
            "description": "DM-RS configuration type. 3GPP 38.211 7.4.1.1.2. Maps to dlDmrsConfigType in PdschSendReq message. Maps to\n DmrsConfigType in 5GMax.",
            "enum": [
                "Type1",
                "Type2"
            ],
            "title": "ConfigurationType",
            "type": "string"
        },
        "ConformanceTestMode": {
            "title": "ConformanceTestMode",
            "type": "boolean"
        },
        "ConformanceTesting": {
            "additionalProperties": false,
            "description": "Set of parameters related to configuring Test Equipment for UL conformance tests. If configured,\nUlCellSetupReq.digitalOutputEnabled will be set to true.",
            "properties": {
                "baseband_selector": {
                    "description": "Specifies the index of the baseband used. Maps to UlCellSetupReq.bbSelector.",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Baseband Selector",
                    "type": "integer"
                },
                "digital_output_rate": {
                    "$ref": "#/$defs/DigitalOutputRate"
                },
                "digital_output_type": {
                    "$ref": "#/$defs/DigitalOutputType"
                }
            },
            "required": [
                "digital_output_type",
                "digital_output_rate",
                "baseband_selector"
            ],
            "title": "ConformanceTesting",
            "type": "object"
        },
        "Coreset": {
            "additionalProperties": false,
            "properties": {
                "coreset_freq_domain": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/AllocatedSubframe"
                            },
                            "maxItems": 45,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "CoresetFreqDomain bitmap as defined in 38.213 section 10.1. Mostly used for specifying non-contiguous coreset, start_prb and number_of_prbs should be used in case of contiguous coreset. Maps to FreqBitMap in 5GMax.",
                    "title": "Coreset Freq Domain"
                },
                "coreset_index": {
                    "description": "Indicates the control resource set of pdcch resource blocks, user dci can point to a valid cell coreset defined by this field. Maps to IdxCORESET in 5GMax.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Coreset Index",
                    "type": "integer"
                },
                "dmrs_reference_point": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DmrsReferencePoint"
                        }
                    ],
                    "description": "Indicates reference point for mapping physical resources of DMRS in 38.211 section 7.4.1.3.2. 'coreset_start_rb' means first PRB of the CORESET. 'point_a' means subcarrier 0 in common resource block 0. Maps to dmrsReferencePoint in PdcchSendReq message."
                },
                "dmrs_scrambling_id": {
                    "anyOf": [
                        {
                            "maximum": 65535,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "PDCCH DMRS Scrambling ID, using physical cell ID if not set. Maps to PdcchDmrsScrambID in 5GMax.",
                    "title": "Dmrs Scrambling Id"
                },
                "interleaver_rows": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/InterleaverRows"
                        }
                    ],
                    "description": "Indicates R parameter as defined in 38.211 section 7.3.2.2. Value 0 means cce_reg_mapping_type is non_interleaved. For coreset0, R is 2. Maps to interleaverRows in PdcchSendReq message. Maps to CceRegMapType in 5GMax."
                },
                "number_of_prbs": {
                    "anyOf": [
                        {
                            "maximum": 384,
                            "minimum": 3,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates pdcch PRBs as defined in 38.213 section 10.1. CoresetFreqDomain bitmap is split into start_prb_number and number_of_prbs (PdcchSendReq). Each bit in CoresetFreqDomain bitmap corresponds to the 1 REG(6 PRBs). Maps to FreqBitMap in 5GMax. res_alloc_index is used to calculate number_of_prb when dmrs_reference_point == 'coreset_start_rb' and number_of_prb is null.",
                    "title": "Number Of Prbs"
                },
                "number_of_symbols": {
                    "anyOf": [
                        {
                            "maximum": 3,
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The number of PDCCH symbols in a slot. Maps to numOfSymbols in PdcchSendReq message. Maps to OfdmSymb in 5GMax. res_alloc_index is used to calculate number_of_symbols when dmrs_reference_point == 'coreset_start_rb' and number_of_symbols is null.",
                    "title": "Number Of Symbols"
                },
                "occasion_index": {
                    "anyOf": [
                        {
                            "maximum": 15,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Type0-PDCCH occasion index as defined in 3GPP 38.213 section 13. If dmrs_reference_point = 'coreset_start_rb', res_alloc_index and ssb_block_index are defined then occasion_index is used to determine the first symbol index.",
                    "title": "Occasion Index"
                },
                "polarization_selection": {
                    "$ref": "#/$defs/PolarizationSelection"
                },
                "precoder_granularity": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PrecoderGranularity"
                        }
                    ],
                    "description": "Indicates whether value of reg_bundle_size parameter is used as precoder granularity or number of contiguous RBs within CORESET is used as precoder granularity. Maps to precoderGranularity in PdcchSendReq message. Maps to PrecoderGranuIdx in 5GMax."
                },
                "precoding_option_4x4": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PrecodingOption4x4"
                        }
                    ],
                    "description": "Indicates precoding matrix generation method for 4 antenna ports transmission. Maps to pdcchPrecodingOption4x4 in PdcchSendReq message."
                },
                "reg_bundle_size": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RegBundleSize"
                        }
                    ],
                    "description": "Indicates L parameter as defined in 38.211 section 7.3.2.2. L=6 for non-interleaved CCE-to-REG mapping. For interleaved CCE-to-REG mapping, L={2,6} if coreset symbol number is 1, here L={number_of_symbols,6} if coreset symbol number is {2,3}. For coreset0, L is 6. Maps to regBundleSize in PdcchSendReq message. Maps to RegBundleSizeIdx in 5GMax."
                },
                "res_alloc_index": {
                    "anyOf": [
                        {
                            "maximum": 15,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Type0-PDCCH resource allocation index as defined in 3GPP 38.213 section 13. If dmrs_reference_point = 'coreset_start_rb', resource allocation index should be used instead of number_of_prbs and number_of_symbols (res_alloc_index is used to calculate number_of_prbs and number_of_symbols).",
                    "title": "Res Alloc Index"
                },
                "shift_index": {
                    "description": "Indicates n_shift as defined in 38.211 section 7.3.2.2. For coreset0 this value is ignored, and n_shift is always PhyCellId. Maps to ShiftIndex in 5GMax.",
                    "maximum": 274,
                    "minimum": 0,
                    "title": "Shift Index",
                    "type": "integer"
                },
                "ssb_block_index": {
                    "anyOf": [
                        {
                            "maximum": 63,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "PBCH SSB block index in which Type0 PDCCH is configured. If dmrs_reference_point = 'coreset_start_rb', res_alloc_index and ssb_block_index are defined then occasion_index is used to determine the first symbol index.",
                    "title": "Ssb Block Index"
                },
                "start_prb": {
                    "anyOf": [
                        {
                            "maximum": 270,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates first PRB of coresetFreqDomain as defined in 38.213 section 10.1. CoresetFreqDomain bitmap is split into start_prb_number and number_of_prbs (PdcchSendReq). Maps to FreqBitMap in 5GMax. The start_prb value depends on the values of the coresetFreqDomainRbShift and the first MSB bit in coresetFreqDomain bitmap, according to the following equation:\n * start_prb = 6*(63 - first MSB bit in coresetFreqDomain bitmap) + coresetFreqDomainRbShift",
                    "title": "Start Prb"
                },
                "start_symbol": {
                    "description": "Indicates pdcch start symbol in a slot. Maps to startSymbolNumber in PdcchSendReq message. Maps to OfdmSymb in 5GMax.",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                }
            },
            "required": [
                "coreset_index",
                "start_prb",
                "number_of_prbs",
                "coreset_freq_domain",
                "start_symbol",
                "number_of_symbols",
                "shift_index",
                "interleaver_rows",
                "reg_bundle_size",
                "precoder_granularity",
                "precoding_option_4x4",
                "polarization_selection",
                "dmrs_reference_point",
                "dmrs_scrambling_id",
                "res_alloc_index",
                "occasion_index",
                "ssb_block_index"
            ],
            "title": "Coreset",
            "type": "object"
        },
        "CorrAntProc": {
            "description": "Turn on/off CorrAntProc PRACH algorithm. Only for LOKI.",
            "enum": [
                "on",
                "off",
                "pdp",
                null
            ],
            "title": "CorrAntProc"
        },
        "CorrelatedAntennaProcessing": {
            "description": "Type of correlated antenna processing; maps to CorrAntProc in 5GMax",
            "enum": [
                "off",
                "on",
                "ant",
                "antnew",
                "pdp"
            ],
            "title": "CorrelatedAntennaProcessing",
            "type": "string"
        },
        "CpDelayRange": {
            "additionalProperties": false,
            "description": "Delay range for CPlane messages. Only for VRAN",
            "properties": {
                "cp_downlink_config": {
                    "$ref": "#/$defs/CpDownlinkConfig"
                },
                "cp_prach_config": {
                    "$ref": "#/$defs/CpPrachConfig"
                },
                "cp_uplink_config": {
                    "$ref": "#/$defs/CpUplinkConfig"
                }
            },
            "required": [
                "cp_downlink_config",
                "cp_uplink_config",
                "cp_prach_config"
            ],
            "title": "CpDelayRange",
            "type": "object"
        },
        "CpDownlinkConfig": {
            "additionalProperties": false,
            "description": "Delay range for downlink CPlane messages",
            "properties": {
                "max_cp_delay": {
                    "description": "Start of DL C-Plane window to send packets at baseband interface.",
                    "title": "Max Cp Delay",
                    "type": "integer"
                },
                "min_cp_delay": {
                    "description": "End of DL C-Plane window to send packets at baseband interface.",
                    "title": "Min Cp Delay",
                    "type": "integer"
                }
            },
            "required": [
                "max_cp_delay",
                "min_cp_delay"
            ],
            "title": "CpDownlinkConfig",
            "type": "object"
        },
        "CpPrachConfig": {
            "additionalProperties": false,
            "description": "Delay range for PRACH CPlane messages",
            "properties": {
                "max_cp_delay": {
                    "description": "Start of PRACH C-Plane window to send packets at baseband interface.",
                    "title": "Max Cp Delay",
                    "type": "integer"
                },
                "min_cp_delay": {
                    "description": "End of PRACH C-Plane window to send packets at baseband interface.",
                    "title": "Min Cp Delay",
                    "type": "integer"
                }
            },
            "required": [
                "max_cp_delay",
                "min_cp_delay"
            ],
            "title": "CpPrachConfig",
            "type": "object"
        },
        "CpUplinkConfig": {
            "additionalProperties": false,
            "description": "Delay range for uplink CPlane messages",
            "properties": {
                "max_cp_delay": {
                    "description": "Start of UL C-Plane window to send packets at baseband interface.",
                    "title": "Max Cp Delay",
                    "type": "integer"
                },
                "min_cp_delay": {
                    "description": "End of UL C-Plane window to send packets at baseband interface.",
                    "title": "Min Cp Delay",
                    "type": "integer"
                }
            },
            "required": [
                "max_cp_delay",
                "min_cp_delay"
            ],
            "title": "CpUplinkConfig",
            "type": "object"
        },
        "Cpri": {
            "additionalProperties": false,
            "description": "CPRI related stream configuration, set as null for eCPRI stream.",
            "properties": {
                "air_time_offset": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AirTimeOffset"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "iq_sample_count": {
                    "description": "Number of IQ samples per AxC container group (samples per single basic frame). Maps to iqSampleCount in Api2BbbCreateAxcReq message.",
                    "minimum": 1,
                    "title": "Iq Sample Count",
                    "type": "integer"
                },
                "iq_sample_format": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__fronthaul__IqSampleFormat"
                },
                "rru_port_order": {
                    "description": "provides AxC polarization direction and port order for different channel types. Maps to rruPortOrder in Api2BbbCreateAxcReq message.",
                    "minimum": 0,
                    "title": "Rru Port Order",
                    "type": "integer"
                }
            },
            "required": [
                "iq_sample_count",
                "iq_sample_format",
                "rru_port_order",
                "air_time_offset"
            ],
            "title": "Cpri",
            "type": "object"
        },
        "CpriType": {
            "description": "Common public radio interface type. It changes the way how antenna data is generated (samples in time-domain for\nCPRI or frequency-domain for eCPRI)",
            "enum": [
                "CPRI",
                "eCPRI"
            ],
            "title": "CpriType",
            "type": "string"
        },
        "CqiBit": {
            "items": {},
            "title": "CqiBit",
            "type": "array"
        },
        "CqiEnum": {
            "const": 65535,
            "title": "CqiEnum",
            "type": "integer"
        },
        "CqiRepType": {
            "description": "One-dimensional array[subframe]. Defines CQI field content for dedicated DL CC with CSI requested. PHY shall use\n it to decide whether RI or CQI/PMI should be decoded. This must be aligned with user allocation field",
            "items": {
                "$ref": "#/$defs/CqiRepTypeEnum"
            },
            "maxItems": 10,
            "title": "CqiRepType",
            "type": "array"
        },
        "CqiRepTypeEnum": {
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                11,
                21,
                22,
                23,
                100
            ],
            "title": "CqiRepTypeEnum",
            "type": "integer"
        },
        "CqiServingCell": {
            "description": "Indicates for which serving cell CQI is sent. Available values: 'NotRequested', 'PCell', 'SCell0', ..., 'SCell4',\n 'SCell5'",
            "enum": [
                "NotRequested",
                "PCell",
                "SCell0",
                "SCell1",
                "SCell2",
                "SCell3",
                "SCell4",
                "SCell5"
            ],
            "title": "CqiServingCell",
            "type": "string"
        },
        "CqiSize": {
            "items": {},
            "title": "CqiSize",
            "type": "array"
        },
        "CsiRs": {
            "additionalProperties": false,
            "description": "CSI-RS specific configuration. This field should be set to null if CSI-RS is disabled",
            "properties": {
                "non_zero_power_resources": {
                    "$ref": "#/$defs/NonZeroPowerResources"
                },
                "number_of_antenna_ports": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfAntennaPorts"
                        }
                    ],
                    "description": "Number of antenna ports for CSI-RS non zero power resources. Each transmission TX point has the same number of antennas. Maps to numOfCsiRsAntennaPorts in DlCellSetupReq message and ParCell.RRC.CsiRs.NumPorts. For CSI-RS zero power resources, number_of_antenna_ports should be fixed to 4 according to 3GPP 36.211 Table 6.10.5.2-1"
                },
                "zero_power_resources": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ZeroPowerResources"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "number_of_antenna_ports",
                "zero_power_resources",
                "non_zero_power_resources"
            ],
            "title": "CsiRs",
            "type": "object"
        },
        "CsiRsResource": {
            "additionalProperties": false,
            "description": "Definition of a CSI RS resource",
            "properties": {
                "antenna_stream": {
                    "description": "Indicate relative AxC positions used by the csi resource. Lenght of array must be 0 or match number of csi_rs symbols in resource. For 0 elements - antenna stream will be calculated based on ce_axc_index",
                    "items": {
                        "$ref": "#/$defs/AntennaStreamItem"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Antenna Stream",
                    "type": "array"
                },
                "best_beam_power_offset": {
                    "$ref": "#/$defs/BestBeamPowerOffset"
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "configuration_row": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ConfigurationRow"
                        }
                    ],
                    "description": "Configuration table row number in 38.211, table 7.4.1.5.3-1. Maps to csiRsConfig in CsiRsSendReq message. Maps to CsiRsConfig in 5GMax."
                },
                "density": {
                    "$ref": "#/$defs/Density"
                },
                "density_dot5_prb_allocation": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DensityDot5PrbAllocation"
                        }
                    ],
                    "description": "Indicates whether even or odd PRBs are occupied by CSI-RS. Applicable when density = 0.5. Maps to densityDot5PrbLocation in CsiRsSendReq message. Maps to DensityDot5PrbLocation in 5GMax."
                },
                "frequency_domain_allocation": {
                    "description": "Frequency domain allocation is represented in bi notation and the order is [bi, ..., b0]. Frequency domain allocation pattern ki (pattern per 1 PRB) as specified (with conversion from bi) in 38.211, 7.4.1.5.3. Maps to freqDomainAllocationKi in CsiRsSendReq message. Maps to Ki in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 12,
                    "minItems": 3,
                    "title": "Frequency Domain Allocation",
                    "type": "array"
                },
                "number_of_prbs": {
                    "description": "Number of PRBs of CSI-RS.Maps to numOfPrb in CsiRsSendReq message. Maps to NumOfPrb in 5GMax.",
                    "maximum": 273,
                    "minimum": 4,
                    "title": "Number Of Prbs",
                    "type": "integer"
                },
                "offset": {
                    "description": "Indicates in which slot a periodic NZP CSI-RS resource starts. It always occupies 2 consecutive slots - ref. 3GPP 38.214 5.1.6.1.1. Maps to PeriodAndOffset.Offset in 5GMAX.",
                    "maximum": 1279,
                    "minimum": 0,
                    "title": "Offset",
                    "type": "integer"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize4"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for transmission in CSI resource. Maps to CsiResource.patternId. For RU tests, the list can contain only two integers."
                },
                "periodicity": {
                    "$ref": "#/$defs/Periodicity1"
                },
                "power_offset_to_ssb": {
                    "$ref": "#/$defs/PowerOffsetToSsb"
                },
                "power_reduction": {
                    "description": "Specifies power reduction in dB. Maps to pwrReductionPerCsiRsResource_dB in CsiRsSendReq message. Maps to RelPowDb in 5GMax.",
                    "maximum": 255,
                    "minimum": 0,
                    "title": "Power Reduction",
                    "type": "integer"
                },
                "precoding_matrix": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PrecodingMatrix"
                        }
                    ],
                    "description": "0 for Identity Matrix, 1 for diagonal per block, this field is only valid when config = 4 or 8 or 18. Maps to csiRsPrecodingMatrix in CsiRsSendReq message. Maps to CsiRsPrecodingMatrix in 5GMax."
                },
                "precoding_vector": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PrecodingVectorItem"
                            },
                            "maxItems": 4,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "precoding vector for CSI-RS, only valid for Row = 1 for beamforming or tracking. Maps to ParCell{}.MAC.DLMAP{}.CRS.PvsVec in 5gmax",
                    "title": "Precoding Vector"
                },
                "relative_power": {
                    "description": "CSI-RS relative power in dB. It is used to calculate the csiTransmitPower, according to following equation:\n ssBlockPower + (power_offset_to_ssb + relative_power) * 10. Maps to RelPowDb in 5GMAX.",
                    "maximum": 23.9,
                    "minimum": -50.4,
                    "title": "Relative Power",
                    "type": "number"
                },
                "scrambling_id": {
                    "description": "10-bit scrambling ID as specified in 38.214, 5.2.2.3.1. Maps to csiRsScramblingSequenceInt in CsiRsSendReq message.",
                    "maximum": 1023,
                    "minimum": 0,
                    "title": "Scrambling Id",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "Starting PRB of CSI-RS. Maps to startPrb in CsiRsSendReq message. Maps to StartPrb in 5GMax.",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                },
                "start_symbol": {
                    "description": "Starting OFDM symbol, same as l0 in 38.211 paragraph 7.4.1.5.3 and firstOFDMSymbolInTimeDomain in 38.331. In above 6 GHz case, CSI-RS is using 120 kHz SCS, thus symbol numbering is the same as in PDSCH. In split 7-2e, start symbol should be equal to 4 for FR1 with tracking reference signal while FR2 is not supported; for more information refer to CB009170-31439. Maps to startSymbol in CsiRsSendReq message.",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                },
                "tb_power_boost_val": {
                    "$ref": "#/$defs/TbPowerBoostVal"
                },
                "tracking_reference_signal": {
                    "description": "38.331 6.3.2, indicates that the antenna port for all NZP-CSI-RS resources in the CSI-RS resource set is same. Maps to trsInfo in CsiRsSendReq message. Maps to TrsInfoStr in 5GMax.",
                    "title": "Tracking Reference Signal",
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/$defs/Type"
                }
            },
            "required": [
                "start_symbol",
                "scrambling_id",
                "density",
                "density_dot5_prb_allocation",
                "start_prb",
                "number_of_prbs",
                "configuration_row",
                "precoding_matrix",
                "frequency_domain_allocation",
                "power_offset_to_ssb",
                "tracking_reference_signal",
                "periodicity",
                "offset",
                "ce_axc_indices",
                "antenna_stream",
                "type",
                "power_reduction",
                "pattern_id",
                "relative_power",
                "best_beam_power_offset",
                "tb_power_boost_val",
                "precoding_vector"
            ],
            "title": "CsiRsResource",
            "type": "object"
        },
        "CwSchedInfoEnum": {
            "enum": [
                0,
                1,
                2
            ],
            "title": "CwSchedInfoEnum",
            "type": "integer"
        },
        "CwSchedInfoTddItem": {
            "items": {},
            "title": "CwSchedInfoTddItem",
            "type": "array"
        },
        "CyclicPrefix": {
            "description": "Length of cyclic prefix: 0 - short, 1 - long.",
            "enum": [
                0,
                1
            ],
            "title": "CyclicPrefix",
            "type": "integer"
        },
        "CyclicProcesses": {
            "description": "The number of asynchronous harq processes changing cyclically. Bundling legacy UE can have up to 4 processes\nwhereas for CE UEs the currently supported maximum is 3. 0 indicates synchronous harq process (UlStandard).",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "title": "CyclicProcesses",
            "type": "integer"
        },
        "DataSource2": {
            "description": "Data source mode for payload of PDSCH transport block. Maps to DataSource in 5GMax.",
            "enum": [
                "Zeros",
                "Ones",
                "Random"
            ],
            "title": "DataSource2",
            "type": "string"
        },
        "DciItem1": {
            "additionalProperties": false,
            "properties": {
                "number_of_repetitions": {
                    "$ref": "#/$defs/NumberOfRepetitions"
                },
                "start_map_subframe": {
                    "description": "The number of first allocated subframe for this NB-PDCCH. Maps to ParCell.MAC.DLMAP.StartMapSubfr in 5GMax.",
                    "minimum": 1,
                    "title": "Start Map Subframe",
                    "type": "integer"
                },
                "tb_size": {
                    "description": "DCI payload size in bits. Maps to Mcs.Tbs in 5GMax.",
                    "maximum": 64,
                    "minimum": 1,
                    "title": "Tb Size",
                    "type": "integer"
                }
            },
            "required": [
                "tb_size",
                "start_map_subframe",
                "number_of_repetitions"
            ],
            "title": "DciItem1",
            "type": "object"
        },
        "DecodeMode": {
            "description": "Maps to ParCell.MAC.DLMAP.DecodeMode.",
            "enum": [
                -1,
                0,
                1,
                2,
                4,
                8
            ],
            "title": "DecodeMode",
            "type": "integer"
        },
        "DecoderConfiguration": {
            "additionalProperties": false,
            "properties": {
                "fec_decoder_type": {
                    "$ref": "#/$defs/FecDecoderType"
                },
                "max_iterations": {
                    "description": "Maximum allowed number of LDPC decoder iterations",
                    "maximum": 25,
                    "minimum": 1,
                    "title": "Max Iterations",
                    "type": "integer"
                }
            },
            "required": [
                "fec_decoder_type",
                "max_iterations"
            ],
            "title": "DecoderConfiguration",
            "type": "object"
        },
        "Delay": {
            "description": "Indicates if user is delayed",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "title": "Delay",
            "type": "integer"
        },
        "Delay1": {
            "additionalProperties": false,
            "properties": {
                "nb_prach_rec_ind_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late nbPrachRecInd messages",
                    "title": "Nb Prach Rec Ind Delay"
                },
                "prach_rec_ind_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late prachRecInd messages",
                    "title": "Prach Rec Ind Delay"
                },
                "pucch_cell_meas_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late pucchCellMeasRespDelay messages",
                    "title": "Pucch Cell Meas Resp Delay"
                },
                "pusch_cell_meas_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late puschCellMeasResp messages",
                    "title": "Pusch Cell Meas Resp Delay"
                },
                "pusch_resp_u_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late puschRespU messages",
                    "title": "Pusch Resp U Delay"
                },
                "srs_cell_meas_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Maximum number of late srsCellMeasResp messages",
                    "title": "Srs Cell Meas Resp Delay"
                },
                "srs_resp_u_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late srsRespU messages",
                    "title": "Srs Resp U Delay"
                },
                "ul_comp_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulCompResp messages",
                    "title": "Ul Comp Resp Delay"
                },
                "ul_nb_ack_nack_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulNbAckNackResp messages",
                    "title": "Ul Nb Ack Nack Resp Delay"
                },
                "ul_nb_crc_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulNbCrcResp messages",
                    "title": "Ul Nb Crc Resp Delay"
                },
                "ul_pucch_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulPucchResp messages",
                    "title": "Ul Pucch Resp Delay"
                },
                "ul_pusch_ack_nack_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulPuschAckNackRespDelay messages",
                    "title": "Ul Pusch Ack Nack Resp Delay"
                },
                "ul_pusch_resp_delay": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum number of late ulPuschResp messages",
                    "title": "Ul Pusch Resp Delay"
                }
            },
            "required": [
                "prach_rec_ind_delay",
                "nb_prach_rec_ind_delay",
                "pusch_resp_u_delay",
                "ul_pucch_resp_delay",
                "ul_pusch_resp_delay",
                "ul_nb_crc_resp_delay",
                "pusch_cell_meas_resp_delay",
                "srs_resp_u_delay",
                "ul_pusch_ack_nack_resp_delay",
                "ul_nb_ack_nack_resp_delay",
                "pucch_cell_meas_resp_delay",
                "ul_comp_resp_delay"
            ],
            "title": "Delay1",
            "type": "object"
        },
        "DelayValueItem": {
            "minimum": 1,
            "title": "DelayValueItem",
            "type": "integer"
        },
        "DeltaShift": {
            "description": "Coefficient used for calculation of number of resources in PUCCH Format 1 PRB",
            "enum": [
                1,
                2,
                3
            ],
            "title": "DeltaShift",
            "type": "integer"
        },
        "Density": {
            "description": "Density \u03c1 as in equation in 38.211, 7.4.1.5.3. Maps to density in CsiRsSendReq message. Maps to Density in 5GMax.",
            "enum": [
                0.5,
                1.0,
                3.0
            ],
            "title": "Density",
            "type": "numeric"
        },
        "DensityDot5PrbAllocation": {
            "description": "INDICATES WHETHER EVEN OR ODD PRBS ARE OCCUPIED BY CSI-RS. APPLICABLE WHEN DENSITY  =  0.5. Maps to\ndensityDot5PrbLocation in CsiRsSendReq message. Maps to DensityDot5PrbLocation in 5GMax.",
            "enum": [
                "Even",
                "Odd",
                null
            ],
            "title": "DensityDot5PrbAllocation"
        },
        "DetectionUnit": {
            "items": {},
            "title": "DetectionUnit",
            "type": "array"
        },
        "DetectorType": {
            "description": "Preamble detector type",
            "enum": [
                "normal",
                "normal1",
                "highspeed",
                "highspeed1",
                "auto",
                "auto1",
                "LokiPRCH",
                "ThorPRCH",
                "LokiPRCHOpt",
                "VRAN2"
            ],
            "title": "DetectorType",
            "type": "string"
        },
        "DftTypeFormat": {
            "enum": [
                "decimated",
                "UlfePrch",
                "Ulfe2x",
                "ThorUlfe",
                "ThorUlfe2x"
            ],
            "title": "DftTypeFormat",
            "type": "string"
        },
        "DigitalOutputRate": {
            "description": "Indicates the bit rate to test equipment. Maps to UlCellSetupReq.digitalOutputRate.",
            "enum": [
                "bitrate115dot2k",
                "bitrate460dot8k",
                "bitrate1dot92M"
            ],
            "title": "DigitalOutputRate",
            "type": "string"
        },
        "DigitalOutputType": {
            "description": "Defines the signal format to the Test Equipment for HARQ reporting. Maps to UlCellSetupReq.digitalOutputType.",
            "enum": [
                "serialKeysight",
                "serialRs"
            ],
            "title": "DigitalOutputType",
            "type": "string"
        },
        "DiversityScheme": {
            "description": "Antenna diversity scheme and MIMO scheme. For values other than LCDD, SCDD, IdenPrec, it maps to INVALID (255)\nvalue. Maps to openLoopScheme in PdschSendReq message. IdenPrec is mapped to INVALID (255) in case of\nCL_4x4_or_4x2_MIMO or CL_8x4_MIMO",
            "enum": [
                "None",
                "CLSM1",
                "CLSM2Ve",
                "CLSM3Ve",
                "CLSM4Ve",
                "IdenPrec1",
                "IdenPrec2Ve",
                "IdenPrec3Ve",
                "IdenPrec4Ve",
                "SCDD1",
                "SCDD2Ve",
                "SCDD3Ve",
                "SCDD4Ve",
                "LCDD1",
                "LCDD2Ve",
                "LCDD3Ve",
                "LCDD4Ve"
            ],
            "title": "DiversityScheme",
            "type": "string"
        },
        "DlCellRadioUnit": {
            "additionalProperties": false,
            "description": "Radio Unit configuration.",
            "properties": {
                "ecpri_sfn_n1_offset": {
                    "description": "N1 part of SFN timing offset which counts 10 ms frames",
                    "maximum": 32768,
                    "minimum": -32769,
                    "title": "Ecpri Sfn N1 Offset",
                    "type": "integer"
                },
                "ecpri_sfn_n2_offset": {
                    "description": "N2 part of SFN timing offset which counts clock cycles within 10 ms frame",
                    "maximum": 12287999,
                    "minimum": 0,
                    "title": "Ecpri Sfn N2 Offset",
                    "type": "integer"
                },
                "fcp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Fcp"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "iq_sample_format": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__cell__nr__radio_unit__IqSampleFormat"
                },
                "iq_samples_timing_advance": {
                    "anyOf": [
                        {
                            "maximum": 1000,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Integer value in microseconds (\u03bcs) used to calculate the sent_at value for the TxEdecOutput dump. Currently, based on NR 5G20B, the allowed range for the value is [134; 345], but because of the dynamic nature of how that specification can change, the more precise validation is done on the L1RU side, while here, a value in the range [0, 1000] is allowed. Null if l1ru is set to False. Based on L1L_SW_1402.",
                    "title": "Iq Samples Timing Advance"
                },
                "rt_beamforming_patterns_set": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RtBeamformingPattersSet"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "start_frame_n2": {
                    "description": "Start instant of the frame in UTUs. UTU = Universal Time Unit. Maps to start_frame_n2 in ECpriLowLevelTxAxcState.",
                    "minimum": 0,
                    "title": "Start Frame N2",
                    "type": "integer"
                }
            },
            "required": [
                "fcp",
                "rt_beamforming_patterns_set",
                "iq_samples_timing_advance",
                "iq_sample_format",
                "start_frame_n2",
                "ecpri_sfn_n1_offset",
                "ecpri_sfn_n2_offset"
            ],
            "title": "DlCellRadioUnit",
            "type": "object"
        },
        "DlNarrowband": {
            "additionalProperties": false,
            "properties": {
                "dl_power_offset_non_anchor": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/DlPowerOffsetNonAnchorEnum"
                            },
                            "maxItems": 4,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Non-anchor carrier power boosting. Used to calculate ParCell.RRC.NbIot.NbRsPowOffsetDbNonAnc.",
                    "title": "Dl Power Offset Non Anchor"
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "nb_iot_mode": {
                    "$ref": "#/$defs/NbIotMode"
                },
                "nb_pbch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPbch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "NbIot PBCH configuration"
                },
                "nb_pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPdcch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "NbIot PDCCH configuration"
                },
                "nb_pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPdsch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "NBPDSCH channel parameters for a single cell."
                },
                "nb_prb_idx_dl": {
                    "description": "Relevant only for inband cells. Maps to ParCell.RRC.NbIot.DlPRBs.",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "title": "Nb Prb Idx Dl",
                    "type": "array"
                },
                "nb_subcarrier_idx_dl": {
                    "description": "Relevant only for guardband cells. Maps to ParCell.RRC.NbIot.NbSubcarrierIdxDl. Must contain a maximum of 4 items",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "title": "Nb Subcarrier Idx Dl",
                    "type": "array"
                },
                "nb_tx_power_rs": {
                    "description": "NCRS Power. Maps to nbTxPowerRs in PhyDlCellSetupReq.",
                    "title": "Nb Tx Power Rs",
                    "type": "integer"
                },
                "nb_tx_power_ss": {
                    "description": "NPSS, NSSS Power. Maps to nbTxPowerSs in PhyDlCellSetupReq.",
                    "title": "Nb Tx Power Ss",
                    "type": "integer"
                },
                "phys_cell_id": {
                    "description": "PhyCellId of the nested narrowband cell",
                    "title": "Phys Cell Id",
                    "type": "integer"
                },
                "sync_sig_tx_mode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SyncSigTxMode"
                        }
                    ],
                    "description": "0 - sync signal will be transmitted on one antenna only, 1 - sync signal will be transmitted on two antennas, using Precoding Vector Switching (PVS) TX diversity mode. Used to calculate ParCell.RRC.NbIot.NbSyncMode."
                }
            },
            "required": [
                "phys_cell_id",
                "ln_cell_id",
                "nb_iot_mode",
                "sync_sig_tx_mode",
                "nb_tx_power_rs",
                "nb_tx_power_ss",
                "nb_prb_idx_dl",
                "nb_subcarrier_idx_dl",
                "dl_power_offset_non_anchor",
                "nb_pdsch",
                "nb_pdcch",
                "nb_pbch"
            ],
            "title": "DlNarrowband",
            "type": "object"
        },
        "DlPowerOffsetNonAnchorEnum": {
            "enum": [
                -12,
                -10,
                -8,
                -6,
                -4,
                -2,
                0
            ],
            "title": "DlPowerOffsetNonAnchorEnum",
            "type": "integer"
        },
        "DlSlimCarrier": {
            "additionalProperties": false,
            "description": "DL slim carrier configuration.",
            "properties": {
                "blank_prbs_down": {
                    "description": "Specifies number of prbs which should be muted (no resources scheduled on them) from the bottom of bandwidth spectrum. Maps to numBlankDlPrbsDown in PhyDlCellSetupReq message and ParCell{}.RRC.SlimCarrier.BlankDlPrbsVec in 5gmax.",
                    "maximum": 20,
                    "minimum": 0,
                    "title": "Blank Prbs Down",
                    "type": "integer"
                },
                "blank_prbs_up": {
                    "description": "Specifies number of prbs which should be muted (no resources scheduled on them) from the top of bandwidth spectrum. Maps to numBlankDlPrbsUp in PhyDlCellSetupReq message and ParCell{}.RRC.SlimCarrier.BlankDlPrbsVec in 5gmax.",
                    "maximum": 20,
                    "minimum": 0,
                    "title": "Blank Prbs Up",
                    "type": "integer"
                },
                "slim_carrier_activation": {
                    "description": "Activates/deactivates slim carrier functionality. Maps to actDlSlimCarrier in PhyDlCellSetupReq message.",
                    "title": "Slim Carrier Activation",
                    "type": "boolean"
                }
            },
            "required": [
                "slim_carrier_activation",
                "blank_prbs_down",
                "blank_prbs_up"
            ],
            "title": "DlSlimCarrier",
            "type": "object"
        },
        "DmrsConfig": {
            "additionalProperties": false,
            "description": "DM-RS slot configuration.",
            "properties": {
                "number_of_additional_dmrs_positions": {
                    "$ref": "#/$defs/NumberOfAdditionalDmrsPositions"
                },
                "position_for_type_a": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PositionForTypeA"
                        }
                    ],
                    "description": "Position of the first DM-RS symbol. It has to be set for type A. For TypeB this parameter is ignored. See 3GPP 38.211 6.4.1.1.3"
                }
            },
            "required": [
                "number_of_additional_dmrs_positions",
                "position_for_type_a"
            ],
            "title": "DmrsConfig",
            "type": "object"
        },
        "DmrsPort": {
            "description": "Defines dmrs port, maps to bit 5 of tbFlags in PhyPdschSendReq and ParCell.MAC.DLMAP.UeSpecRs.AntennaPort in 5Gmax.",
            "enum": [
                7,
                8
            ],
            "title": "DmrsPort",
            "type": "integer"
        },
        "DmrsReferencePoint": {
            "description": "Indicates reference point for mapping physical resources of DMRS in 38.211 section 7.4.1.3.2. 'coreset_start_rb'\nmeans first PRB of the CORESET. 'point_a' means subcarrier 0 in common resource block 0.\nMaps to dmrsReferencePoint in PdcchSendReq message.",
            "enum": [
                "coreset_start_rb",
                "point_a"
            ],
            "title": "DmrsReferencePoint",
            "type": "string"
        },
        "DmrsSequenceType": {
            "description": "DMRS sequence type for PUCCH format3:\n- type1: Rel15 DMRS sequence type (default value)\n- type2: Rel16 Low-PAPR DMRS sequence type",
            "enum": [
                "type1",
                "type2"
            ],
            "title": "DmrsSequenceType",
            "type": "string"
        },
        "DrsType": {
            "description": "0 indicates subframe only contains reservation signal, 1 indicates subframe used for DRS with CRS, PSS, SSS,\noptional PBCH/MF-PBCH, optional MF-PSS/MF-SSS and alternate scrambling initialization for CRS. Maps to bit 0 of\nPHY_lteUSignalSendReq.lteuFlags.",
            "enum": [
                0,
                1
            ],
            "title": "DrsType",
            "type": "integer"
        },
        "DtxThresholdSelection": {
            "description": "Maps to `ParUnit{}.PRACH.PrachDtxThresholdSelection` in 5GMAX and to UL_CellSetupReq.prachDtxThresholdSelection,\nshould be set to number of RX antennas with the exception of C4 cell with suppressed Prach antennas",
            "enum": [
                2,
                4
            ],
            "title": "DtxThresholdSelection",
            "type": "integer"
        },
        "DuplexMode": {
            "description": "Duplex mode",
            "enum": [
                "FDD",
                "TDD",
                "Type3_LAA"
            ],
            "title": "DuplexMode",
            "type": "string"
        },
        "DynamicScaling": {
            "additionalProperties": false,
            "properties": {
                "ant_specific": {
                    "description": "Antenna specific scaling flag of input FFT block. Maps to AntSpecific in 5GMax.",
                    "title": "Ant Specific",
                    "type": "boolean"
                },
                "coherent_method": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Switch"
                        }
                    ],
                    "description": "Switch to disable/enable coherent method for PUCCH F0 and F2 non-FH mode. Maps to CoherentMethod in 5GMax."
                },
                "data_fractional": {
                    "description": "Fractional bits after scaling of input FFT block. Maps to DataFractional in 5GMax.",
                    "maximum": 15.0,
                    "minimum": 1.0,
                    "title": "Data Fractional",
                    "type": "number"
                },
                "f0_f2_per_symbol": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Switch"
                        }
                    ],
                    "description": "Switch of per symbol noise power estimation for format 0 and format 2. 'Off' - estimation per Rx antenna, 'On' - estimation per Rx antenna per symbol. Maps to F0F2PerSymb in 5GMax."
                },
                "post_fft_ant_specific": {
                    "description": "Antenna specific scaling flag for output FFT block. Maps to PostFftAntSpecific in 5GMax.",
                    "title": "Post Fft Ant Specific",
                    "type": "boolean"
                },
                "pucch_f1_demodulation_type": {
                    "$ref": "#/$defs/PucchF1DemodulationType"
                },
                "quantize": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Switch"
                        }
                    ],
                    "description": "Switch on/off antenna interface quantization. Maps to Quantize in 5GMax."
                },
                "symmetric_toe": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Switch"
                        }
                    ],
                    "description": "Switch to disable/enable symmetric TOE search window. Maps to SymmetricToe in 5GMax."
                },
                "target_bits": {
                    "description": "Targeted number of bits after scaling of input FFT block. Maps to TargetBits in 5GMax.",
                    "maximum": 15.0,
                    "minimum": 1.0,
                    "title": "Target Bits",
                    "type": "number"
                },
                "threshold_method": {
                    "$ref": "#/$defs/ThresholdMethod"
                }
            },
            "required": [
                "target_bits",
                "data_fractional",
                "ant_specific",
                "post_fft_ant_specific",
                "quantize",
                "coherent_method",
                "f0_f2_per_symbol",
                "pucch_f1_demodulation_type",
                "threshold_method",
                "symmetric_toe"
            ],
            "title": "DynamicScaling",
            "type": "object"
        },
        "DynamicScalingChannel": {
            "additionalProperties": false,
            "properties": {
                "post_fft_scaling_head": {
                    "description": "Targeted linear headroom factor for post fft scaling output.",
                    "maximum": 1.0,
                    "minimum": 0.0,
                    "title": "Post Fft Scaling Head",
                    "type": "number"
                },
                "scaling_enable": {
                    "description": "Scaling flag factor for post fft scaling output.",
                    "title": "Scaling Enable",
                    "type": "boolean"
                }
            },
            "required": [
                "post_fft_scaling_head",
                "scaling_enable"
            ],
            "title": "DynamicScalingChannel",
            "type": "object"
        },
        "ECpriConfig": {
            "additionalProperties": false,
            "properties": {
                "ce_axc_index": {
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "minItems": 4,
                    "title": "Ce Axc Index",
                    "type": "array"
                },
                "num_ce_axc_index": {
                    "title": "Num Ce Axc Index",
                    "type": "integer"
                },
                "pattern_id": {
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Pattern Id",
                    "type": "array"
                }
            },
            "required": [
                "num_ce_axc_index",
                "ce_axc_index",
                "pattern_id"
            ],
            "title": "ECpriConfig",
            "type": "object"
        },
        "Ecpri": {
            "additionalProperties": false,
            "description": "eCPRI related stream configuration, set as null for CPRI stream",
            "properties": {
                "air_time_offset": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/AirTimeOffset"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/$defs/AirTimeOffset"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Air Time Offset"
                },
                "e_axc_id": {
                    "description": "Extended Antenna Carrier concept from CPRI identifier. Maps to ceaxcId in Api2BbbCreateEaxcReq message.",
                    "minimum": 0,
                    "title": "E Axc Id",
                    "type": "integer"
                },
                "reception_window_close": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Delay how much later reception window is closed. 0 will be used if null",
                    "title": "Reception Window Close"
                }
            },
            "required": [
                "e_axc_id",
                "air_time_offset",
                "reception_window_close"
            ],
            "title": "Ecpri",
            "type": "object"
        },
        "EcpriSectionIdItem": {
            "maximum": 4095,
            "minimum": 0,
            "title": "EcpriSectionIdItem",
            "type": "integer"
        },
        "ElementSpacing": {
            "additionalProperties": false,
            "description": "Antenna element spacing in multiples of the carrier wavelength lambda",
            "properties": {
                "horizontal_spacing": {
                    "description": "Horizontal antennas spacing",
                    "items": {
                        "type": "number"
                    },
                    "minItems": 1,
                    "title": "Horizontal Spacing",
                    "type": "array"
                },
                "vertical_spacing": {
                    "description": "Vertical antennas spacing",
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 1,
                    "minItems": 1,
                    "title": "Vertical Spacing",
                    "type": "array"
                }
            },
            "required": [
                "horizontal_spacing",
                "vertical_spacing"
            ],
            "title": "ElementSpacing",
            "type": "object"
        },
        "Equalizer": {
            "description": "Equalizer type for PUCCH. Maps to ParUnit{}.RX.PucchEqualizer in 5GMAX",
            "enum": [
                "5GMaxDefault",
                "IRC"
            ],
            "title": "Equalizer",
            "type": "string"
        },
        "Event": {
            "additionalProperties": false,
            "properties": {
                "event_number": {
                    "description": "Suspicious event number. Maps to eventNb in FastAntennaSnapshotEvent message.",
                    "maximum": 255,
                    "minimum": 0,
                    "title": "Event Number",
                    "type": "integer"
                },
                "event_type": {
                    "description": "Channel information where suspicious event is from.Maps to eventType in FastAntennaSnapshotEvent message.",
                    "maximum": 255,
                    "minimum": 0,
                    "title": "Event Type",
                    "type": "integer"
                },
                "rnti": {
                    "$ref": "#/$defs/Rnti"
                }
            },
            "required": [
                "rnti",
                "event_number",
                "event_type"
            ],
            "title": "Event",
            "type": "object"
        },
        "EventDetected": {
            "additionalProperties": false,
            "properties": {
                "crnti": {
                    "anyOf": [
                        {
                            "maximum": 65535,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "User's main identifier",
                    "title": "Crnti"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "prachRepetitionNums": {
                    "anyOf": [
                        {
                            "items": {},
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "An optional list of repetitionNum values for EventDetectedInd.event items, used only for WrongRachDetection. Set by default to [1] if null is provided.",
                    "title": "Prachrepetitionnums"
                },
                "subframeToCapture": {
                    "description": "Subframe when the suspicious event had happened, starting from the beginning of the test.",
                    "minimum": 0,
                    "title": "Subframetocapture",
                    "type": "integer"
                },
                "subframeToSendEvent": {
                    "description": "Subframe that the message is supposed to be sent in, starting from the beginning of the test.",
                    "minimum": 0,
                    "title": "Subframetosendevent",
                    "type": "integer"
                }
            },
            "required": [
                "crnti",
                "name",
                "subframeToSendEvent",
                "subframeToCapture",
                "prachRepetitionNums"
            ],
            "title": "EventDetected",
            "type": "object"
        },
        "Extension": {
            "description": "Type of extension of the FCP message if present.",
            "enum": [
                "Type6",
                "Type12",
                null
            ],
            "title": "Extension"
        },
        "FastAntennaSnapshotReq": {
            "additionalProperties": false,
            "description": "Content and timing advance of FastAntennaSnapshotReq message.",
            "properties": {
                "events": {
                    "description": "Suspicious events used to trigger snapshot. Maps to eventsList in DlFastAntennaSnapshotReq, UlFastAntennaSnapshotReq message.",
                    "items": {
                        "$ref": "#/$defs/Event"
                    },
                    "maxItems": 8,
                    "minItems": 1,
                    "title": "Events",
                    "type": "array"
                },
                "relative_sfn": {
                    "description": "SFN of reference for the IQ sample to capture. It is relative to T0. Maps to sfn in DlFastAntennaSnapshotReq, UlFastAntennaSnapshotReq message.",
                    "maximum": 1023,
                    "minimum": 0,
                    "title": "Relative Sfn",
                    "type": "integer"
                },
                "slot": {
                    "description": "Slot number of reference for the IQ sample to capture. Maps to slot in DlFastAntennaSnapshotReq, UlFastAntennaSnapshotReq message.",
                    "maximum": 79,
                    "minimum": 0,
                    "title": "Slot",
                    "type": "integer"
                },
                "subcell_id": {
                    "$ref": "#/$defs/SubcellIdModel"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "subcell_id",
                "relative_sfn",
                "slot",
                "events",
                "timing_advance"
            ],
            "title": "FastAntennaSnapshotReq",
            "type": "object"
        },
        "Fcp": {
            "additionalProperties": false,
            "description": "FCP (Fast Control Plane) parameters for nr cell.",
            "properties": {
                "extension": {
                    "$ref": "#/$defs/Extension"
                },
                "rt_beamforming_weights": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RtBeamformingWeights"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "timing_advance": {
                    "description": "Timing advance in microseconds for FCP message in RU, normally should be set within FCP reception window as stated in L1L_SW_3519",
                    "maximum": 1000,
                    "minimum": 0,
                    "title": "Timing Advance",
                    "type": "integer"
                }
            },
            "required": [
                "rt_beamforming_weights",
                "extension",
                "timing_advance"
            ],
            "title": "Fcp",
            "type": "object"
        },
        "FcpAddPatternIdItem": {
            "maximum": 65535,
            "minimum": 0,
            "title": "FcpAddPatternIdItem",
            "type": "integer"
        },
        "FcpAddSection": {
            "additionalProperties": false,
            "description": "Indicates if additional (second) section is generated to cover allocation of the grant.\nMaps to fcpAddSectionEnable in UlData::eCpriFcpSectionConfig",
            "properties": {
                "fcp_add_num_prbc": {
                    "description": "Used for generation of additional FCP section.\nNumber of allocated PRB to be used for eCPRI control section generation. maps to fcpAddNumPrbc in UlData::eCpriFcpSectionConfig",
                    "maximum": 273,
                    "minimum": 1,
                    "title": "Fcp Add Num Prbc",
                    "type": "integer"
                },
                "fcp_add_pattern_id": {
                    "description": "Used for generation of additional FCP section. Beam patternIds to be used directly to populate beamId field of eCPRI control section. Each patternId is used with two consecutive ceAxcIndex. Maps to fcpAddPatternId in UlData::eCpriFcpSectionConfig",
                    "items": {
                        "$ref": "#/$defs/FcpAddPatternIdItem"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "Fcp Add Pattern Id",
                    "type": "array"
                },
                "fcp_add_section_id": {
                    "description": "Used for generation of additional FCP section. This parameter is used directly to populate sectionId field of eCPRI control section. Bits [11:0] are valid. maps to fcpAddSectionId in UlData::eCpriFcpSectionConfig",
                    "maximum": 4095,
                    "minimum": 0,
                    "title": "Fcp Add Section Id",
                    "type": "integer"
                },
                "fcp_add_start_prbc": {
                    "description": "Used for generation of additional FCP section. Starting PRB index to be filled directly in the eCPRI control section. maps to fcpAddStartPrbc in UlData::eCpriFcpSectionConfig",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Fcp Add Start Prbc",
                    "type": "integer"
                }
            },
            "required": [
                "fcp_add_section_id",
                "fcp_add_start_prbc",
                "fcp_add_num_prbc",
                "fcp_add_pattern_id"
            ],
            "title": "FcpAddSection",
            "type": "object"
        },
        "Features": {
            "additionalProperties": false,
            "properties": {
                "SFN": {
                    "description": "Indicates whether Single-Frequency-Network mode is enabled or not",
                    "title": "Sfn",
                    "type": "boolean"
                },
                "actDonutCell": {
                    "description": "Indicates whether Donut Cell is activated or not",
                    "title": "Actdonutcell",
                    "type": "boolean"
                },
                "actEcpri": {
                    "description": "Indicates whether eCPRI feature is enabled or not. false: CPRI, true: eCPRI",
                    "title": "Actecpri",
                    "type": "boolean"
                },
                "actInterOpPucchF2ab": {
                    "description": "Interoperability mode activation for PUCCH format 2a or 2b. For TDD always False.",
                    "title": "Actinteroppucchf2Ab",
                    "type": "boolean"
                },
                "actUlMuMimo": {
                    "description": "Indicates whether UL MU-MIMO feature is enabled or not",
                    "title": "Actulmumimo",
                    "type": "boolean"
                },
                "act_fst_dmrs_based_shrinkage": {
                    "description": "Loki and Thor only. If set with true, activates first DMRS only based shrinkage algorithm on LTE PUSCH, Otherwise, use 2 DMRS based shrinkage algorithm",
                    "title": "Act Fst Dmrs Based Shrinkage",
                    "type": "boolean"
                },
                "coMP": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Comp"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Coordinated Multipoint feature settings"
                },
                "extendedCell": {
                    "description": "Indicates whether 100km NB-IoT extended cell feature is enabled or not",
                    "title": "Extendedcell",
                    "type": "boolean"
                },
                "interferingCells": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/InterferingCells"
                        }
                    ],
                    "description": "List of interfering cells - their phyCell IDs and sinr offsets."
                },
                "lowestSlot": {
                    "$ref": "#/$defs/LowestSlot"
                },
                "lte_m": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Ltem"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "LTE-M settings"
                },
                "macUpdateFile": {
                    "$ref": "#/$defs/MacUpdateFile"
                },
                "massiveMimo": {
                    "description": "Indicates whether Massive Mimo feature is enabled or not, Feature under development",
                    "title": "Massivemimo",
                    "type": "boolean"
                },
                "narrowband": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Narrowband"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Narrowband settings. Use this field in case of standalone narrowband cell."
                },
                "numberOfCellSlots": {
                    "$ref": "#/$defs/NumberOfCellSlots"
                },
                "remoteInterference": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RemoteInterference"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "subCellId": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "superCell": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SuperCellItem"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Supercell's parameters"
                }
            },
            "required": [
                "massiveMimo",
                "actEcpri",
                "actUlMuMimo",
                "superCell",
                "extendedCell",
                "actDonutCell",
                "coMP",
                "narrowband",
                "lte_m",
                "interferingCells",
                "macUpdateFile",
                "subCellId",
                "numberOfCellSlots",
                "lowestSlot",
                "SFN",
                "actInterOpPucchF2ab",
                "act_fst_dmrs_based_shrinkage",
                "remoteInterference"
            ],
            "title": "Features",
            "type": "object"
        },
        "FecDecoderType": {
            "description": "Low Density Parity Check decoder type",
            "enum": [
                "XilinxLdpc",
                "AlteraLdpc",
                "AlteraLdpcRel19B",
                "AlteraLdpcRel21C",
                "AlteraLdpcRel20B",
                "AlteraLdpcVC",
                "KorakSPALdpc",
                "KorakAMSLdpc",
                "TurboConceptLdpc",
                "LokiLdpc",
                "ThorLdpc"
            ],
            "title": "FecDecoderType",
            "type": "string"
        },
        "FftDataReqPatternItem": {
            "items": {},
            "title": "FftDataReqPatternItem",
            "type": "array"
        },
        "FileFormat": {
            "description": "File format. Maps to oneFilePerPath in AntennaSnapshotReq message.",
            "enum": [
                "TxAfterRxInSameFile",
                "RxAndTxInSeparateFiles"
            ],
            "title": "FileFormat",
            "type": "string"
        },
        "FirstHop": {
            "enum": [
                "lower_dedicated",
                "upper_dedicated",
                "lower_common",
                "upper_common"
            ],
            "title": "FirstHop",
            "type": "string"
        },
        "FocMethod": {
            "description": "This field is responsible for choosing frequency offset compensation method in simulation (choosing domain).\nMaps to FocMethod in 5GMax.",
            "enum": [
                "AllTimeDomain",
                "AllFreDomain",
                "1User",
                "Off"
            ],
            "title": "FocMethod",
            "type": "string"
        },
        "FoeGapLargest": {
            "enum": [
                "auto",
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
            ],
            "title": "FoeGapLargest"
        },
        "Format": {
            "description": "nbPUSCH user's format identification.",
            "enum": [
                1,
                2
            ],
            "title": "Format",
            "type": "integer"
        },
        "Format1": {
            "description": "PUCCH Format. Maps to pucchFormat in PucchReceiveReq message. Maps to PucchFormat in 5GMax.",
            "enum": [
                "0",
                "1",
                "2",
                "3"
            ],
            "title": "Format1",
            "type": "string"
        },
        "FormatType": {
            "description": "Downlink control information format. Maps to dciFormat in PHY_PdcchSendReq.",
            "enum": [
                "0",
                "1",
                "1A",
                "1B",
                "1C",
                "1D",
                "2",
                "2A",
                "2B",
                "2C",
                "2D",
                "3",
                "3A"
            ],
            "title": "FormatType",
            "type": "string"
        },
        "FramePeriod": {
            "enum": [
                1,
                2
            ],
            "title": "FramePeriod",
            "type": "integer"
        },
        "FreqOffset": {
            "additionalProperties": false,
            "description": "PUSCH user frequency offset tolerance [Hz]",
            "properties": {
                "value": {
                    "description": "Threshold's value - absolute maximum allowable difference between reference model and target",
                    "title": "Value",
                    "type": "number"
                },
                "violations": {
                    "description": "Maximum allowable number of threshold violations",
                    "minimum": 0,
                    "title": "Violations",
                    "type": "integer"
                }
            },
            "required": [
                "value",
                "violations"
            ],
            "title": "FreqOffset",
            "type": "object"
        },
        "FrequencyDensity": {
            "description": "Parameter K[PT-RS] from 3gpp 138.211  \u00a76.4.1.2.2.1",
            "enum": [
                2,
                4
            ],
            "title": "FrequencyDensity",
            "type": "integer"
        },
        "FrequencyDensity1": {
            "description": "Parameter K(PT-RS) in 38.211 section 7.4.1.2.2. Maps to dlPtrsFrequencyDensity in PdschSendReq message.\n Maps to PtrsNrbThr in 5GMax.",
            "enum": [
                2,
                4
            ],
            "title": "FrequencyDensity1",
            "type": "integer"
        },
        "FrequencyHoppingNbInterv": {
            "title": "FrequencyHoppingNbInterv",
            "type": "integer"
        },
        "FrequencyOffset": {
            "additionalProperties": false,
            "description": "Frequency offset for HST cells, currently supported only RAN4-HST MS type",
            "properties": {
                "distance_offset": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Distance Offset"
                },
                "initial_distance": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Initial Distance"
                },
                "maximum_doppler_frequency": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Maximum Doppler Frequency"
                },
                "minimum_distance": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Minimum Distance"
                },
                "start_time": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Start Time"
                },
                "velocity_kmh": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Velocity Kmh"
                }
            },
            "required": [
                "distance_offset",
                "velocity_kmh",
                "start_time",
                "initial_distance",
                "minimum_distance",
                "maximum_doppler_frequency"
            ],
            "title": "FrequencyOffset",
            "type": "object"
        },
        "FrequencyOffsetItem": {
            "additionalProperties": false,
            "properties": {
                "elapsedTime": {
                    "description": "Time since the last estimate. 0 means that the estimate is not available, it's equivalent to 5GMAX's 9999 special value. Value is given in miliseconds",
                    "minimum": 0,
                    "title": "Elapsedtime",
                    "type": "integer"
                },
                "initialValue": {
                    "description": "Expressed in Hz",
                    "title": "Initialvalue",
                    "type": "integer"
                },
                "reliability": {
                    "description": "Reliability measure (amplitude of the estimated rotator), it's later encoded to Q610 in the receive request",
                    "maximum": 63.999,
                    "minimum": 0.0,
                    "title": "Reliability",
                    "type": "number"
                }
            },
            "required": [
                "initialValue",
                "elapsedTime",
                "reliability"
            ],
            "title": "FrequencyOffsetItem",
            "type": "object"
        },
        "FrequencyOffsetModel": {
            "description": "Array with settings for each subcell. Frequency offset settings are used for simulations and MAC-PS estimations\n (passed in receive requests)",
            "items": {
                "$ref": "#/$defs/FrequencyOffsetItem"
            },
            "minItems": 1,
            "title": "FrequencyOffsetModel",
            "type": "array"
        },
        "FrequencyOffsetValue": {
            "description": "Default frequency offset value (Hz) for each antenna stream for frequency offset compensation when frequency offset\nestimation is not valid. Maps to 5gmax PucchFoValue for PUCCH and FoeDebugClt for PUSCH. The input value is list of\nfrequency offset values for all antennas with lists of 2 elements [real, imaginary] inside.\nExample [[0, 0],[0,0],[0,0],[0,0]",
            "items": {
                "$ref": "#/$defs/FrequencyOffsetValueItem"
            },
            "maxItems": 4,
            "title": "FrequencyOffsetValue",
            "type": "array"
        },
        "FrequencyOffsetValueItem": {
            "items": {},
            "title": "FrequencyOffsetValueItem",
            "type": "array"
        },
        "FrequencyRange": {
            "enum": [
                "FR1",
                "FR2",
                "FR1_NB",
                "FR1_WB"
            ],
            "title": "FrequencyRange",
            "type": "string"
        },
        "Fronthaul": {
            "additionalProperties": false,
            "description": "Fronthaul configuration",
            "properties": {
                "ports": {
                    "items": {
                        "$ref": "#/$defs/Port"
                    },
                    "title": "Ports",
                    "type": "array"
                }
            },
            "required": [
                "ports"
            ],
            "title": "Fronthaul",
            "type": "object"
        },
        "FronthaulMode": {
            "description": "Cell fronthaul mode. CPRI or OBSAI if subpool level fronthaul mode set to CPRI_OR_OBSAI. Maps to fronthaulMode in\nUlCellSetupRequest message.",
            "enum": [
                "CPRI",
                "OBSAI"
            ],
            "title": "FronthaulMode",
            "type": "string"
        },
        "FronthaulModeSubpool": {
            "description": "Required Fronthaul mode. eCPRI_DCM_ORAN is used in Loki for DCM configuration.",
            "enum": [
                "CPRI",
                "eCPRI",
                "eCPRI_DCM_ORAN",
                "OBSAI",
                "eCPRI_WMP_ORAN",
                "CPRI_OR_OBSAI",
                "eCPRI_7_2e"
            ],
            "title": "FronthaulModeSubpool",
            "type": "string"
        },
        "FronthoulCell": {
            "additionalProperties": false,
            "description": "Configuration for a group of FH streams to support one cell",
            "properties": {
                "cell_index": {
                    "description": "cell index of cells at main level",
                    "title": "Cell Index",
                    "type": "integer"
                },
                "modulo": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Modulo"
                        }
                    ],
                    "description": "Field that decides where samples from streams go in CPRI stream, e.g. if modulo=2 then samples of first stream go into even numbered position and the samples of the second stream to the odd numbered positions in CPRI stream. Maps to SBbbAxcContainer2.modulo."
                },
                "streams": {
                    "items": {
                        "$ref": "#/$defs/Stream"
                    },
                    "title": "Streams",
                    "type": "array"
                }
            },
            "required": [
                "cell_index",
                "streams",
                "modulo"
            ],
            "title": "FronthoulCell",
            "type": "object"
        },
        "FullPowerPuschPowerScalingRatio": {
            "description": "Full power PUSCH scaling ratio. Used for LOKI only. Values correspond to numerical evaluations of specific bitmaps.",
            "enum": [
                0,
                1,
                20,
                24,
                36,
                40
            ],
            "title": "FullPowerPuschPowerScalingRatio",
            "type": "integer"
        },
        "Gap": {
            "description": "Indicates how long the user's measurement gap is.",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "title": "Gap",
            "type": "integer"
        },
        "GtHighBandwidth": {
            "description": "Number of REs (subcarriers) occupied by the high guard tones. Value represented as a number of PRACH REs.",
            "enum": [
                3,
                13,
                15,
                18,
                24,
                180
            ],
            "title": "GtHighBandwidth",
            "type": "integer"
        },
        "GtLowBandwidth": {
            "description": "Number of REs (subcarriers) occupied by the low guard tones. Value represented as a number of PRACH REs\u3002",
            "enum": [
                1,
                2,
                7,
                10,
                12,
                133
            ],
            "title": "GtLowBandwidth",
            "type": "integer"
        },
        "Harm1Removal": {
            "description": "Turn on/off Harm1Removal PRACH algorithm. Only for LOKI.",
            "enum": [
                "on",
                "on2",
                "on3",
                "off",
                null
            ],
            "title": "Harm1Removal"
        },
        "HarqAckIndicator": {
            "description": "HARQ ACK indicator generator type",
            "enum": [
                "Zeros",
                "Ones",
                "Random"
            ],
            "title": "HarqAckIndicator",
            "type": "string"
        },
        "HarqAckSizeItem": {
            "maximum": 2,
            "minimum": 0,
            "title": "HarqAckSizeItem",
            "type": "integer"
        },
        "HarqAckType": {
            "description": "Information about multiplexed HARQ-ACK type.",
            "enum": [
                "EDlHarqAckType_None",
                "EDlHarqAckType_1bit",
                "EDlHarqAckType_2bit",
                "EDlHarqAckType_Multicell",
                "EDlHarqAckType_Pucch3"
            ],
            "title": "HarqAckType",
            "type": "string"
        },
        "HarqProcessNumber": {
            "description": "Harq process number. 1 means 1HARQ, 2 means 2HARQ.",
            "enum": [
                1,
                2
            ],
            "title": "HarqProcessNumber",
            "type": "integer"
        },
        "HarqProcessesInfoPackedItem": {
            "items": {},
            "title": "HarqProcessesInfoPackedItem",
            "type": "array"
        },
        "HighSnrMitigation": {
            "description": "Maps to `ParUnit{}.PRACH.HighSnrMitigation` in 5GMAX.",
            "enum": [
                0,
                1
            ],
            "title": "HighSnrMitigation",
            "type": "integer"
        },
        "HlapiOptions": {
            "additionalProperties": false,
            "description": "Changing the order of Hlapi Object requests.",
            "properties": {
                "shift_dl_ecpri_low_level_tx_axc_state": {
                    "description": "Value \"True\" if ECpriTxArrayCarrierConfRequestFactory.ACTIVE should be set before ECpriLowLevelTxAxcStateRequestFactory.CREATE.",
                    "title": "Shift Dl Ecpri Low Level Tx Axc State",
                    "type": "boolean"
                },
                "shift_ul_ecpri_low_level_rx_axc_state": {
                    "description": "Value \"True\" if ECpriRxArrayCarrierConfRequestFactory.ACTIVE should be set before ECpriLowLevelRxAxcStateRequestFactory.CREATE.",
                    "title": "Shift Ul Ecpri Low Level Rx Axc State",
                    "type": "boolean"
                }
            },
            "required": [
                "shift_dl_ecpri_low_level_tx_axc_state",
                "shift_ul_ecpri_low_level_rx_axc_state"
            ],
            "title": "HlapiOptions",
            "type": "object"
        },
        "HoppingInterval": {
            "description": "PUCCH LTE-M frequency hopping TTI interval",
            "enum": [
                1,
                2
            ],
            "title": "HoppingInterval",
            "type": "integer"
        },
        "HsTrainScenario": {
            "description": "High speed train scenario setting for PUCCH, PUSCH and SRS. Accepted values are: 'NotApplied', 'Scenario 1',\n'Scenario 3'",
            "enum": [
                "NotApplied",
                "Scenario_1",
                "Scenario_3"
            ],
            "title": "HsTrainScenario",
            "type": "string"
        },
        "InterfererCell": {
            "additionalProperties": false,
            "properties": {
                "bandwidth": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LteBandwidth"
                        }
                    ],
                    "description": "Cell's bandwidth in MHz"
                },
                "carrier_frequency": {
                    "description": "Frequencies used for transmission and reception in radio system",
                    "title": "Carrier Frequency",
                    "type": "number"
                },
                "cpri_type": {
                    "const": "CPRI",
                    "description": "Common public radio interface type. It changes the way how antenna data is generated (samples in time-domain for CPRI or frequency-domain for eCPRI)",
                    "title": "Cpri Type"
                },
                "downlink": {
                    "description": "Downlink definition",
                    "title": "Downlink",
                    "type": "null"
                },
                "duplex_mode": {
                    "$ref": "#/$defs/DuplexMode"
                },
                "phys_cell_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PhysCellId"
                        }
                    ],
                    "description": "Cell identity number"
                },
                "receiver": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Receiver"
                        }
                    ],
                    "description": "Definition of receiver for given test cell"
                },
                "refSignal": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RefSignal"
                        }
                    ],
                    "description": "Reference signals settings"
                },
                "standard": {
                    "const": "LTE",
                    "title": "Standard"
                },
                "tddSettings": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TddSettings"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "TDD mode subframe configuration and uplink/downlink configuration"
                },
                "uplink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/InterfererUplink"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Uplink cell data"
                }
            },
            "required": [
                "phys_cell_id",
                "receiver",
                "refSignal",
                "standard",
                "tddSettings",
                "uplink",
                "downlink",
                "carrier_frequency",
                "cpri_type",
                "bandwidth",
                "duplex_mode"
            ],
            "title": "InterfererCell",
            "type": "object"
        },
        "InterfererPusch": {
            "additionalProperties": false,
            "properties": {
                "combination_mode": {
                    "$ref": "#/$defs/CombinationMode"
                }
            },
            "required": [
                "combination_mode"
            ],
            "title": "InterfererPusch",
            "type": "object"
        },
        "InterfererUplink": {
            "additionalProperties": false,
            "properties": {
                "enabled_antennas": {
                    "items": {
                        "type": "boolean"
                    },
                    "maxItems": 12,
                    "minItems": 2,
                    "title": "Enabled Antennas",
                    "type": "array"
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "nbPrach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPrach"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Definition of nbPrach channel. This field should be set to null if the channel is disabled. Use this field only for standalone narrowband cell."
                },
                "noise_powers": {
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 12,
                    "minItems": 2,
                    "title": "Noise Powers",
                    "type": "array"
                },
                "number_of_rx_antennas": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__cell__lte__interferer_cell__NumberOfRxAntennas"
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pucch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellPucch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/InterfererPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "srs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellSrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "ln_cell_id",
                "enabled_antennas",
                "nbPrach",
                "noise_powers",
                "number_of_rx_antennas",
                "prach",
                "pucch",
                "pusch",
                "srs"
            ],
            "title": "InterfererUplink",
            "type": "object"
        },
        "InterferingCell": {
            "additionalProperties": false,
            "properties": {
                "phys_cell_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PhysCellId"
                        }
                    ],
                    "description": "PhyCellId of the interfering cell"
                },
                "sinrOffset": {
                    "description": "Sinr offset for interfering cell's pusch users",
                    "title": "Sinroffset",
                    "type": "number"
                }
            },
            "required": [
                "phys_cell_id",
                "sinrOffset"
            ],
            "title": "InterferingCell",
            "type": "object"
        },
        "InterferingCells": {
            "items": {
                "$ref": "#/$defs/InterferingCell"
            },
            "title": "InterferingCells",
            "type": "array"
        },
        "InterleaverRows": {
            "description": "Indicates R parameter as defined in 38.211 section 7.3.2.2. Value 0 means cce_reg_mapping_type is non_interleaved.\nFor coreset0, R is 2. Maps to interleaverRows in PdcchSendReq message. Maps to CceRegMapType in 5GMax.",
            "enum": [
                0,
                2,
                3,
                6
            ],
            "title": "InterleaverRows",
            "type": "integer"
        },
        "InvalidMeasureEnable": {
            "description": "Flag for enabling invalid measurements/broken antenna reporting.",
            "enum": [
                "Off",
                "On",
                "OnPlusPerAntNpePusch",
                "PartlyEnabled",
                "PartlyInclPostCombSinr"
            ],
            "title": "InvalidMeasureEnable",
            "type": "string"
        },
        "IqComp": {
            "additionalProperties": false,
            "description": "I/Q bitwidth compression configuration. If set to null the default 5GMAX settings will be used.\nMapped to ParUnit.[ RX|TX ].Compression.IQComp.Enable if configured.",
            "properties": {
                "compression_method": {
                    "$ref": "#/$defs/CompressionMethod"
                },
                "target_iq_bit_width": {
                    "$ref": "#/$defs/TargetIqBitWidth"
                }
            },
            "required": [
                "compression_method",
                "target_iq_bit_width"
            ],
            "title": "IqComp",
            "type": "object"
        },
        "L1LogTrace": {
            "additionalProperties": false,
            "description": "Definition of a L1Log_TraceReq. This message is used in enabling L1 logging.",
            "properties": {
                "output_mode": {
                    "$ref": "#/$defs/OutputMode"
                },
                "traces": {
                    "description": "Traces of L1Log_TraceReq message. Each entry is a TraceReqEntry in L1Log_TraceReq.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/L1LogTraces"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "maxItems": 10,
                    "title": "Traces",
                    "type": "array"
                },
                "trsw_eq_id": {
                    "description": "Maps to trswEQID in TraceReqHeader of L1Log_TraceReq message.",
                    "title": "Trsw Eq Id",
                    "type": "integer"
                },
                "trsw_mac_address": {
                    "description": "Maps to trswMacAddr in TraceReqHeader of L1Log_TraceReq message.",
                    "title": "Trsw Mac Address",
                    "type": "integer"
                }
            },
            "required": [
                "trsw_eq_id",
                "trsw_mac_address",
                "output_mode",
                "traces"
            ],
            "title": "L1LogTrace",
            "type": "object"
        },
        "L1LogTraces": {
            "additionalProperties": false,
            "properties": {
                "nb_reports": {
                    "description": "nbReports of TraceReqEntry in L1Log_TraceReq.",
                    "title": "Nb Reports",
                    "type": "integer"
                },
                "subtype": {
                    "description": "Subtype of TraceReqEntry in L1Log_TraceReq.",
                    "title": "Subtype",
                    "type": "integer"
                },
                "trace_id": {
                    "description": "Trace ID of TraceReqEntry in L1Log_TraceReq.",
                    "title": "Trace Id",
                    "type": "integer"
                }
            },
            "required": [
                "subtype",
                "trace_id",
                "nb_reports"
            ],
            "title": "L1LogTraces",
            "type": "object"
        },
        "L1SubpoolItem": {
            "additionalProperties": false,
            "properties": {
                "l1_subpool_id": {
                    "title": "L1 Subpool Id",
                    "type": "integer"
                },
                "slow_prb_pooling_parameters": {
                    "$ref": "#/$defs/SlowPrbPoolingParameters"
                }
            },
            "required": [
                "l1_subpool_id",
                "slow_prb_pooling_parameters"
            ],
            "title": "L1SubpoolItem",
            "type": "object"
        },
        "L2PoolId": {
            "description": "Indicates the L2 Pool ID on which the cell is attached, it used to prepare PHY_UL_PHY_DATA_ADDRESS_REQ in TRX_env",
            "enum": [
                0,
                1
            ],
            "title": "L2PoolId",
            "type": "integer"
        },
        "Laa": {
            "additionalProperties": false,
            "description": "LAA configuration.",
            "properties": {
                "laa_drs_padding": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LaaDrsPadding"
                        }
                    ],
                    "description": "Enables/disables random data padding during DRS transmission. Maps to PHY_DlCellSetupReq.enableLaaDrsPadding and ParCell{1}.RRC.Type3.DrsPaddingEnable."
                },
                "lte_u_signal_send_reqs": {
                    "description": "PHY_lteUSignalSendReqs configuration. Defined as array[subframe]. Subframe elements are looped up to the length of frame.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/$defs/LteUSignalSendReq"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "maxItems": 10,
                    "title": "Lte U Signal Send Reqs",
                    "type": "array"
                },
                "timing_advance_for_lte_u_signal_send_req": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "unlicensed_pesf_mode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/UnlicensedPesfMode"
                        }
                    ],
                    "description": "Enables/disables random data padding during DRS transmission. Maps to PHY_DlCellSetupReq.unlicensedPesfMode and ParCell{1}.RRC.Type3.EndSubfrConfig."
                }
            },
            "required": [
                "laa_drs_padding",
                "unlicensed_pesf_mode",
                "lte_u_signal_send_reqs",
                "timing_advance_for_lte_u_signal_send_req"
            ],
            "title": "Laa",
            "type": "object"
        },
        "LaaDrsPadding": {
            "description": "Enables/disables random data padding during DRS transmission. Maps to PHY_DlCellSetupReq.enableLaaDrsPadding and\nParCell{1}.RRC.Type3.DrsPaddingEnable.",
            "enum": [
                0,
                1
            ],
            "title": "LaaDrsPadding",
            "type": "integer"
        },
        "Layers": {
            "additionalProperties": false,
            "description": "Layers",
            "properties": {
                "layer_index": {
                    "description": "Maps to bits 5-8 of tbFormat.numOfLayers in PhyPdschSendReq.",
                    "maximum": 15,
                    "minimum": 0,
                    "title": "Layer Index",
                    "type": "integer"
                },
                "number_of_layers": {
                    "description": "Maps to bits 0-3 of tbFormat.numOfLayers in PhyPdschSendReq. Maps to DiversityScheme in 5GMax. Also maps to UeCatSupDlLay if UE category allows multiple choices for number of layers.",
                    "maximum": 8,
                    "minimum": 1,
                    "title": "Number Of Layers",
                    "type": "integer"
                },
                "single_codeword_on_both_layers": {
                    "description": "Maps to bit 4 of tbFormat.numOfLayers in PhyPdschSendReq.",
                    "title": "Single Codeword On Both Layers",
                    "type": "boolean"
                }
            },
            "required": [
                "number_of_layers",
                "single_codeword_on_both_layers",
                "layer_index"
            ],
            "title": "Layers",
            "type": "object"
        },
        "Length": {
            "description": "Length of a single DM-RS sequence. DM-RS with length equal to 1 is called single-symbol DM-RS, with length equal\n to 2 is called double-symbol DM-RS. Maps to ulDmrsLen in UlDataPuschReceiveReq message.\n  Maps to AllocDmrsSymbols in 5GMax.",
            "enum": [
                1,
                2
            ],
            "title": "Length",
            "type": "integer"
        },
        "Length1": {
            "description": "Length of a single DM-RS sequence. DM-RS with length equal to 1 is called single-symbol DM-RS, with length\n equal to 2 is called double-symbol DM-RS. Maps to dlDmrsLen in PdschSendReq message. Maps to DmrsMaxLen in 5GMax.",
            "enum": [
                1,
                2
            ],
            "title": "Length1",
            "type": "integer"
        },
        "LnCellId": {
            "maximum": 65535,
            "minimum": 0,
            "title": "LnCellId",
            "type": "integer"
        },
        "LocalCellIndex": {
            "maximum": 268435455,
            "minimum": 0,
            "title": "LocalCellIndex",
            "type": "integer"
        },
        "LogicalResourceId": {
            "maximum": 65535,
            "minimum": 0,
            "title": "LogicalResourceId",
            "type": "integer"
        },
        "LogicalResourceIds": {
            "description": "Set of numOfLogicalResourceIds to be used for transmission on eCPRI Fronthaul, for UL max: 84, for DL max: 16,\nif null, uses Fronthaul Logical resource generator",
            "items": {
                "$ref": "#/$defs/LogicalResourceId"
            },
            "maxItems": 84,
            "minItems": 0,
            "title": "LogicalResourceIds",
            "type": "array"
        },
        "LogicalResourceIdsModel": {
            "description": "Set of numOfLogicalResourceIds to be used for transmission on eCPRI Fronthaul, for UL max: 8, for DL max: 4,\nif null, TRX will not use it for LTE, and CPRI.",
            "items": {
                "$ref": "#/$defs/LogicalResourceId"
            },
            "maxItems": 12,
            "minItems": 0,
            "title": "LogicalResourceIdsModel",
            "type": "array"
        },
        "LongTermComa": {
            "additionalProperties": false,
            "properties": {
                "number_rbg": {
                    "description": "Number of RBG for Longterm COMA of BF UE. Maps to numRbgLtCoMa in SrsReceiveReq and to NumPrbLtCoMa in 5GMAX.",
                    "maximum": 68,
                    "minimum": 1,
                    "title": "Number Rbg",
                    "type": "integer"
                },
                "start_rbg": {
                    "description": "Start RBG for Longterm COMA of BF UE. Maps to startPrbLtCoMa in SrsReceiveReq and to StartPrbLtCoMa in 5GMAX.",
                    "maximum": 67,
                    "minimum": 0,
                    "title": "Start Rbg",
                    "type": "integer"
                }
            },
            "required": [
                "start_rbg",
                "number_rbg"
            ],
            "title": "LongTermComa",
            "type": "object"
        },
        "LoopbackMode": {
            "description": "Defines loopback point. Maps to loopbackMode in SApi2BbbSetPortConfigurationReq message, and loopbackEnabled\nis set as False if null else True.",
            "enum": [
                "TxRxLoop",
                null
            ],
            "title": "LoopbackMode"
        },
        "LowestSlot": {
            "anyOf": [
                {
                    "maximum": 95,
                    "minimum": 0,
                    "type": "integer"
                },
                {
                    "type": "null"
                }
            ],
            "title": "LowestSlot"
        },
        "Lte": {
            "description": "Simulation model for LTE cells",
            "enum": [
                "Float",
                "AllQuantize",
                null
            ],
            "title": "Lte"
        },
        "LteBandwidth": {
            "description": "Cell's bandwidth in MHz. Used for dlReferenceLevel in PhyDlCellSetupReq message.",
            "enum": [
                1.4,
                3.0,
                5.0,
                10.0,
                15.0,
                20.0
            ],
            "title": "LteBandwidth",
            "type": "numeric"
        },
        "LteCell": {
            "additionalProperties": false,
            "description": "Configuration for a single LTE cell",
            "properties": {
                "bandwidth": {
                    "$ref": "#/$defs/LteBandwidth"
                },
                "carrier_frequency": {
                    "description": "Frequencies used for transmission and reception in radio system",
                    "title": "Carrier Frequency",
                    "type": "number"
                },
                "cpri_dialect_indication": {
                    "$ref": "#/$defs/LteCpriDialectIndication"
                },
                "cpri_type": {
                    "$ref": "#/$defs/CpriType"
                },
                "downlink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellDownlink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "duplex_mode": {
                    "$ref": "#/$defs/DuplexMode"
                },
                "fronthaul_mode": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/FronthaulMode"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "l1_log_trace": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/L1LogTrace"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "phys_cell_id": {
                    "$ref": "#/$defs/PhysCellId"
                },
                "standard": {
                    "const": "LTE",
                    "title": "Standard"
                },
                "uplink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellUplink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "user_defined_model_config": {
                    "$ref": "#/$defs/UserDefinedModelConfig"
                }
            },
            "required": [
                "fronthaul_mode",
                "standard",
                "cpri_type",
                "cpri_dialect_indication",
                "phys_cell_id",
                "bandwidth",
                "uplink",
                "downlink",
                "user_defined_model_config",
                "carrier_frequency",
                "duplex_mode",
                "l1_log_trace"
            ],
            "title": "LteCell",
            "type": "object"
        },
        "LteCellDownlink": {
            "additionalProperties": false,
            "description": "Single cell's downlink-specific configuration",
            "properties": {
                "beamforming": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Beamforming"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "blanked_prbs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BlankedPrbs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cat_m": {
                    "description": "Defines if the cell supports cat_m mode.",
                    "title": "Cat M",
                    "type": "boolean"
                },
                "cell_slot_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CellSlotConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "conformance_test_mode": {
                    "$ref": "#/$defs/ConformanceTestMode"
                },
                "csi_rs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CsiRs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "dl_slim_carrier": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DlSlimCarrier"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "downsampling": {
                    "description": "Indicates if downsampling is enabled or not. Maps to actDownSampling in PhyDlCellSetupReq message.",
                    "title": "Downsampling",
                    "type": "boolean"
                },
                "enable_1tx_in_2tx": {
                    "description": "Defines if 1 TX operation in 2 TX configuration is enabled. Maps to enable1TxIn2Tx in DlCellSetupReq message.",
                    "title": "Enable 1Tx In 2Tx",
                    "type": "boolean"
                },
                "freq_shift_1tx_in_2tx": {
                    "description": "Frequency shift of 2nd antenna stream in 0.1 Hz for 1TX operation in 2TX configuration. Maps to freqShift1TxIn2Tx in DlCellSetupReq message.",
                    "maximum": 20,
                    "minimum": 0,
                    "title": "Freq Shift 1Tx In 2Tx",
                    "type": "integer"
                },
                "iq_comp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/IqComp"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "laa": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Laa"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "local_cell_index": {
                    "$ref": "#/$defs/LocalCellIndex"
                },
                "logical_resource_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LogicalResourceIds"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "lte_nr_dss": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteNrDss"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "massive_mimo": {
                    "description": "Indicates if massive MIMO is enabled or not. Maps to actMassiveMimo in PhyDlCellSetupReq message.",
                    "title": "Massive Mimo",
                    "type": "boolean"
                },
                "max_tx_power": {
                    "description": "Maximum TX power per antenna in dBm. Step size is 1/10 dBm. Maps to pMax in DlCellSetupReq message.",
                    "maximum": 500,
                    "minimum": -120,
                    "title": "Max Tx Power",
                    "type": "integer"
                },
                "mimo_mode": {
                    "$ref": "#/$defs/LteMimoMode"
                },
                "multi_purpose_field": {
                    "$ref": "#/$defs/MultiPurposeField"
                },
                "narrowbands": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Narrowbands"
                        }
                    ],
                    "description": "List of narrowband cell settings. The list should have only one element."
                },
                "number_of_antennas": {
                    "$ref": "#/$defs/NumberOfAntennas"
                },
                "number_of_pdcch_symbols": {
                    "description": "The number of PDCCH symbols, defined per subframe, The i-th entry in the array correspond to the num of symbols in the n-th subframe counting from zero",
                    "items": {
                        "$ref": "#/$defs/NumberOfPdcchSymbol"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Number Of Pdcch Symbols",
                    "type": "array"
                },
                "pbch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Pbch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pcfich": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Pcfich"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PdcchModel"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Pdsch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "phich": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Phich"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "phich_duration": {
                    "$ref": "#/$defs/PhichDuration"
                },
                "phich_resource_size": {
                    "$ref": "#/$defs/PhichResourceSize"
                },
                "power_scaling": {
                    "description": "Scaling of the TX IQ data. Maps to txPowerScaling in DlCellSetupReq message.",
                    "maximum": 10000,
                    "minimum": 1,
                    "title": "Power Scaling",
                    "type": "integer"
                },
                "ri_preamble": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RiPreamble"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "supercell": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Supercell"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "sync_signal_tx_mode": {
                    "$ref": "#/$defs/SyncSignalTxMode"
                },
                "tdd": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Tdd"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "time_domain_cpri_comparison": {
                    "description": "Allow time domain comparison for DL comparator.",
                    "title": "Time Domain Cpri Comparison",
                    "type": "boolean"
                },
                "tm9_cell_mode": {
                    "$ref": "#/$defs/Tm9CellMode"
                },
                "tx_power_ss": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPowerSs in PhyDlCellSetupReq message."
                }
            },
            "required": [
                "ln_cell_id",
                "pdcch",
                "pcfich",
                "number_of_antennas",
                "tdd",
                "pbch",
                "phich",
                "pdsch",
                "csi_rs",
                "mimo_mode",
                "sync_signal_tx_mode",
                "enable_1tx_in_2tx",
                "freq_shift_1tx_in_2tx",
                "max_tx_power",
                "power_scaling",
                "conformance_test_mode",
                "phich_resource_size",
                "phich_duration",
                "cell_slot_config",
                "number_of_pdcch_symbols",
                "tx_power_ss",
                "downsampling",
                "massive_mimo",
                "beamforming",
                "tm9_cell_mode",
                "ri_preamble",
                "laa",
                "dl_slim_carrier",
                "supercell",
                "blanked_prbs",
                "cat_m",
                "narrowbands",
                "lte_nr_dss",
                "time_domain_cpri_comparison",
                "local_cell_index",
                "logical_resource_ids",
                "multi_purpose_field"
            ],
            "title": "LteCellDownlink",
            "type": "object"
        },
        "LteCellPrach": {
            "additionalProperties": false,
            "properties": {
                "SubbandWhitening": {
                    "$ref": "#/$defs/SubbandWhitening"
                },
                "configIndex": {
                    "$ref": "#/$defs/ConfigIndex"
                },
                "corrAntProc": {
                    "$ref": "#/$defs/CorrAntProc"
                },
                "cyclicShift": {
                    "description": "PRACH cyclic shift",
                    "maximum": 15,
                    "minimum": 0,
                    "title": "Cyclicshift",
                    "type": "integer"
                },
                "freqOffset": {
                    "description": "PRACH frequency offset",
                    "maximum": 94,
                    "minimum": 0,
                    "title": "Freqoffset",
                    "type": "integer"
                },
                "harm1Removal": {
                    "$ref": "#/$defs/Harm1Removal"
                },
                "isHighSpeed": {
                    "description": "PRACH high-speed flag",
                    "title": "Ishighspeed",
                    "type": "boolean"
                },
                "overwriteDftType": {
                    "description": "Specifies if 5GMax architecture setting for DftType field should be overwritten",
                    "title": "Overwritedfttype",
                    "type": "boolean"
                },
                "rootSeqIndex": {
                    "description": "PRACH root sequence number",
                    "maximum": 837,
                    "minimum": 0,
                    "title": "Rootseqindex",
                    "type": "integer"
                },
                "thresholdFactor": {
                    "description": "Percentage of detection threshold for preamble",
                    "maximum": 2000,
                    "minimum": 50,
                    "title": "Thresholdfactor",
                    "type": "integer"
                },
                "windowTimeShift": {
                    "description": "Time shift of PRACH access slot processing window. Expressed in multipliers of 16Ts",
                    "maximum": 60,
                    "minimum": 0,
                    "title": "Windowtimeshift",
                    "type": "integer"
                }
            },
            "required": [
                "configIndex",
                "corrAntProc",
                "cyclicShift",
                "freqOffset",
                "windowTimeShift",
                "harm1Removal",
                "SubbandWhitening",
                "isHighSpeed",
                "rootSeqIndex",
                "thresholdFactor",
                "overwriteDftType"
            ],
            "title": "LteCellPrach",
            "type": "object"
        },
        "LteCellPucch": {
            "additionalProperties": false,
            "properties": {
                "prbs": {
                    "$ref": "#/$defs/PucchPrbs"
                }
            },
            "required": [
                "prbs"
            ],
            "title": "LteCellPucch",
            "type": "object"
        },
        "LteCellPusch": {
            "additionalProperties": false,
            "properties": {
                "ant_pre_comb": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AntennaPreComb"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "combination_mode": {
                    "$ref": "#/$defs/CombinationMode"
                },
                "num_of_interference_detection_symbols": {
                    "description": "This field defines the number of symbols in uplink subframe used for remote interference measurement, TDD only. If its value is 0, then remote interference measurement is not needed.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Num Of Interference Detection Symbols",
                    "type": "integer"
                },
                "remote_interference_detected": {
                    "description": "This field indicates the remote interference detection result in L2. If LTE928 is enabled and remote interference is detected, this flag is set to TRUE, otherwise FALSE.",
                    "title": "Remote Interference Detected",
                    "type": "boolean"
                }
            },
            "required": [
                "combination_mode",
                "remote_interference_detected",
                "num_of_interference_detection_symbols",
                "ant_pre_comb"
            ],
            "title": "LteCellPusch",
            "type": "object"
        },
        "LteCellSrs": {
            "additionalProperties": false,
            "properties": {
                "bandwidthConfig": {
                    "description": "Indicates SRS bandwidth configuration. Available values are: 0, 1, ..., 7",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Bandwidthconfig",
                    "type": "integer"
                },
                "bfWeightSendTimeTti": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Set the send out time of PHY_UlBfUeWeightsUpdateInd. Only valid for Loki mMIMO",
                    "title": "Bfweightsendtimetti"
                },
                "subframeConfig": {
                    "description": "Indicates where last symbol is reserved for SRS",
                    "maximum": 15,
                    "minimum": 0,
                    "title": "Subframeconfig",
                    "type": "integer"
                }
            },
            "required": [
                "bandwidthConfig",
                "subframeConfig",
                "bfWeightSendTimeTti"
            ],
            "title": "LteCellSrs",
            "type": "object"
        },
        "LteCellUplink": {
            "additionalProperties": false,
            "description": "Single cell's uplink-specific configuration",
            "properties": {
                "cell_slot_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CellSlotConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "enabled_antennas": {
                    "items": {
                        "type": "boolean"
                    },
                    "title": "Enabled Antennas",
                    "type": "array"
                },
                "eventDetected": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/EventDetected"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates if PHY_EventDetectedInd should be sent. This message is responsible for triggering snapshot capture when a suspicious event is detected."
                },
                "extend_sc_num": {
                    "anyOf": [
                        {
                            "maximum": 48,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Extended number of transmitted SC reserved for outband NB PUSCH type. Mapped to  ParUnit.RX.AntFdIf.ExtendScNum.",
                    "title": "Extend Sc Num"
                },
                "features": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Features"
                        }
                    ],
                    "description": "Configuration of used features and use cases for this cell"
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "local_cell_index": {
                    "$ref": "#/$defs/LocalCellIndex"
                },
                "logical_resource_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LogicalResourceIds"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "multi_purpose_field": {
                    "$ref": "#/$defs/MultiPurposeField"
                },
                "narrowbands": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/UlNarrowbandsModel"
                        }
                    ],
                    "description": "List of nested (inband/guardband) narrowband cells. Carrier ids are assigned in respect to the order of cells in this array. First cell is the anchor cell. nbPrach can be defined only in anchor cell. Tolerances of nbPusch are allowed only in the first cell that has nbPusch defined; they will be used for all nested cells."
                },
                "nbPrach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPrach"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Definition of nbPrach channel. This field should be set to null if the channel is disabled. Use this field only for standalone narrowband cell."
                },
                "nbPusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPusch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Definition of nbPusch channel. This field should be set to null if the channel is disabled. Use this field only for standalone narrowband cell."
                },
                "noise_powers": {
                    "items": {
                        "type": "number"
                    },
                    "title": "Noise Powers",
                    "type": "array"
                },
                "number_of_rx_antennas": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__cell__lte__uplink__NumberOfRxAntennas"
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pucch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellPucch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "read_capture": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ReadCapture"
                        }
                    ],
                    "description": "Switch for handling of antenna buffer and captured samples, which is mapped to ParUnit{}.AntIf.ReadCapture. Values: 0 - disabled, 1 - read captured samples from files listed in ParUnit{}.AntIf.CaptureFiles, -1 - store content of data buffer to specific files listed in ParUnit{}.AntIf.CaptureFiles"
                },
                "receiver": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Receiver"
                        }
                    ],
                    "description": "Definition of receiver for given test cell"
                },
                "refSignal": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RefSignal"
                        }
                    ],
                    "description": "Reference signals settings"
                },
                "srs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCellSrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "tddSettings": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TddSettings"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "TDD mode subframe configuration and uplink/downlink configuration"
                },
                "timing_offsets": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TimingOffsets"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "number of symbols by which request will be send earlier (negative values) or later (positive numbers) than scheduled subframe"
                }
            },
            "required": [
                "ln_cell_id",
                "eventDetected",
                "features",
                "narrowbands",
                "receiver",
                "refSignal",
                "tddSettings",
                "timing_offsets",
                "read_capture",
                "enabled_antennas",
                "nbPrach",
                "nbPusch",
                "noise_powers",
                "number_of_rx_antennas",
                "extend_sc_num",
                "cell_slot_config",
                "prach",
                "pucch",
                "pusch",
                "srs",
                "local_cell_index",
                "logical_resource_ids",
                "multi_purpose_field"
            ],
            "title": "LteCellUplink",
            "type": "object"
        },
        "LteCpriDialectIndication": {
            "description": "CPRI dialect indication. Maps to [Ul|Dl]Cell_SetupReq.cpriDialectIndication in messages. Also in ParUnit, maps to\nArchitecture.FrontHaul for UL, and to TX.AntIf.RfHeadRoom for DL.",
            "enum": [
                "Default",
                "ECPRI7-2a",
                "ECPRI7-2b"
            ],
            "title": "LteCpriDialectIndication",
            "type": "string"
        },
        "LteCrsConfiguration": {
            "additionalProperties": false,
            "description": "LTE CRS configuration parameters for a single cell, refer to 3GPP 38.214 section 5.1.4.2 and 36.211\nsection 6.10.1.2.",
            "properties": {
                "lte_downlink_bandwidth": {
                    "$ref": "#/$defs/LteDownlinkBandwidth"
                },
                "lte_phys_cell_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PhysCellId"
                        }
                    ],
                    "description": "LTE physical layer cell identity. Maps to Vshift in 5GMax."
                },
                "number_of_lte_crs_ports": {
                    "$ref": "#/$defs/NumberOfLteCrsPorts"
                }
            },
            "required": [
                "number_of_lte_crs_ports",
                "lte_phys_cell_id",
                "lte_downlink_bandwidth"
            ],
            "title": "LteCrsConfiguration",
            "type": "object"
        },
        "LteCrsOption": {
            "description": "Indicates specific handling that has to be applied to PDSCH REs. Maps to lteCrsOption in PdschSendReq message.",
            "enum": [
                "off",
                "mapping",
                "puncturing",
                "additional_dmrs_shift",
                "lte_flexmatch_pbch",
                "lte_flexmatch_pss",
                "lte_flexmatch_pss_alt"
            ],
            "title": "LteCrsOption",
            "type": "string"
        },
        "LteDownlinkBandwidth": {
            "description": "LTE downlink bandwidth in MHz. Maps to lteDlBandwidth in DlCellSetupRequest message. Maps to CrsCarBw in 5GMax.",
            "enum": [
                5,
                10,
                15,
                20
            ],
            "title": "LteDownlinkBandwidth",
            "type": "integer"
        },
        "LteMimoMode": {
            "description": "DL mimo mode. Maps to dlMimoMode in DlCellSetupRequest message.",
            "enum": [
                "SingleTx",
                "TxDiversity",
                "DualStreamMimo",
                "DynMimoOpenLoop",
                "DynMimoClosedLoop",
                "SingleStreamBF",
                "DualStreamBF",
                "Dyn4x2MimoClosedLoop",
                "TxDiversity4Ant",
                "Dyn8x2MimoClosedLoop",
                "Dyn4x4MimoClosedLoop",
                "Dyn8x4MimoClosedLoop",
                "Dyn16x2MimoClosedLoop"
            ],
            "title": "LteMimoMode",
            "type": "string"
        },
        "LteNrDss": {
            "additionalProperties": false,
            "description": "MBSFN configuration is defined for LTE5407 LTE NR Dynamic Sharing Phase 1",
            "properties": {
                "pdcch_symbols": {
                    "$ref": "#/$defs/PdcchSymbols"
                },
                "radio_frame_allocation_period": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RadioFrameAllocationPeriod"
                        }
                    ],
                    "description": "Radio frame for MBSFN meets SFN mod radioframeAllocationPeriod = radioframeAllocationOffset."
                },
                "radio_frame_offset": {
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Radio Frame Offset",
                    "type": "integer"
                },
                "subframe_allocation": {
                    "$ref": "#/$defs/SubframeAllocation"
                }
            },
            "required": [
                "radio_frame_allocation_period",
                "radio_frame_offset",
                "subframe_allocation",
                "pdcch_symbols"
            ],
            "title": "LteNrDss",
            "type": "object"
        },
        "LtePdschDataSource": {
            "description": "Data source mode for payload of PDSCH transport block. Maps to DataSource in 5GMax.",
            "enum": [
                "Zeros",
                "Random"
            ],
            "title": "LtePdschDataSource",
            "type": "string"
        },
        "LteUSignalSendReq": {
            "additionalProperties": false,
            "description": "PHY_lteUSignalSendReq configuration.",
            "properties": {
                "drs_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DrsType"
                        }
                    ],
                    "description": "0 indicates subframe only contains reservation signal, 1 indicates subframe used for DRS with CRS, PSS, SSS, optional PBCH/MF-PBCH, optional MF-PSS/MF-SSS and alternate scrambling initialization for CRS. Maps to bit 0 of PHY_lteUSignalSendReq.lteuFlags."
                },
                "rs_start_symbol": {
                    "description": "0 to 13: Indicates the starting OFDMA symbol for reservation signal, 15: indicates no reservation signal needed. Maps to bits 4 to 7 of PHY_lteUSignalSendReq.lteuFlags.",
                    "maximum": 15,
                    "minimum": 0,
                    "title": "Rs Start Symbol",
                    "type": "integer"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PHY_lteUSignalSendReq message."
                }
            },
            "required": [
                "tx_power",
                "drs_type",
                "rs_start_symbol"
            ],
            "title": "LteUSignalSendReq",
            "type": "object"
        },
        "LteUser": {
            "additionalProperties": false,
            "description": "Definition of a LTE User Equipment instance",
            "properties": {
                "downlink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserDownlink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "frequency_offset": {
                    "anyOf": [
                        {
                            "description": "Frequency offset for MS type 'Fix', maps to FreqOffset.Offset in ParUnit",
                            "type": "number"
                        },
                        {
                            "$ref": "#/$defs/FrequencyOffset"
                        }
                    ],
                    "description": "UE's frequency offset",
                    "title": "Frequency Offset"
                },
                "rnti": {
                    "$ref": "#/$defs/Rnti"
                },
                "snr": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/$defs/SnrItem"
                        }
                    ],
                    "description": "Signal to noise ratio for user's transmissions [dB]: either scalar or matrix with size tx_antennas x rx_antennas",
                    "title": "Snr"
                },
                "standard": {
                    "const": "LTE",
                    "title": "Standard"
                },
                "time_offset": {
                    "description": "UE's time offset [us]",
                    "title": "Time Offset",
                    "type": "number"
                },
                "uplink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserUplink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "velocity": {
                    "description": "UE's velocity [km/h]",
                    "title": "Velocity",
                    "type": "number"
                }
            },
            "required": [
                "rnti",
                "frequency_offset",
                "snr",
                "time_offset",
                "velocity",
                "uplink",
                "downlink",
                "standard"
            ],
            "title": "LteUser",
            "type": "object"
        },
        "LteUserDownlink": {
            "additionalProperties": false,
            "description": "Single user's downlink-specific configuration",
            "properties": {
                "category": {
                    "description": "UE category according to TS 36.306 chapter 4.1. Used to calculate nIr in PhyPdschSendReq. Maps to UeCategory in 5GMax.",
                    "maximum": 12,
                    "minimum": 1,
                    "title": "Category",
                    "type": "integer"
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "nb_pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserNbPdcch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "nb_pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserNbPdsch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserPdcch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserPdsch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "ln_cell_id",
                "category",
                "pdcch",
                "pdsch",
                "nb_pdsch",
                "nb_pdcch"
            ],
            "title": "LteUserDownlink",
            "type": "object"
        },
        "LteUserNbPdcch": {
            "additionalProperties": false,
            "description": "PDCCH DCI parameters set per user",
            "properties": {
                "dci": {
                    "description": "DCI configuration of one user",
                    "items": {
                        "$ref": "#/$defs/DciItem1"
                    },
                    "maxItems": 1,
                    "minItems": 1,
                    "title": "Dci",
                    "type": "array"
                }
            },
            "required": [
                "dci"
            ],
            "title": "LteUserNbPdcch",
            "type": "object"
        },
        "LteUserNbPdsch": {
            "additionalProperties": false,
            "description": "NBPDSCH parameters for a single user.",
            "properties": {
                "allocated_subframes": {
                    "description": "subframe allocation map, array for all subframes in the radio frame defining if NBPDSCH resource is scheduled in the subframe. Maps to AllocSubfr in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Allocated Subframes",
                    "type": "array"
                },
                "bf_weights": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/BeamformingWeight"
                            },
                            "maxItems": 32,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Weight factor for long term beamforming. Maps to bfWeights in PhyPdschSendReq and InitBfVector in 5gmax. Expected size is number_of_antennas * number_of_layers.",
                    "title": "Bf Weights"
                },
                "data_source": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LtePdschDataSource"
                        }
                    ],
                    "description": "Data source mode for payload of NBPDSCH transport block. Maps to DataSource in 5GMax."
                },
                "slots_allocation": {
                    "$ref": "#/$defs/SlotsAllocation"
                },
                "subframe_of_pdsch_send_req": {
                    "description": "Subframes in which PdschSendReq should be sent",
                    "items": {
                        "type": "integer"
                    },
                    "minItems": 1,
                    "title": "Subframe Of Pdsch Send Req",
                    "type": "array"
                },
                "subframes_for_allocated_prb": {
                    "description": "Subframes in which specified PRB is transmitted: [[TTIs for the first prb transmission], [TTIs for the second prb transmission], [TTIs for the third prb transmission], [TTIs for the fourth prb transmission]], e.g. [[1,], [6, ]] means that the first prb is transmitted in the subframe number equal to 1 and the second prb is transmitted in the subframe number equal to 6.",
                    "items": {
                        "$ref": "#/$defs/SubframesForAllocatedPrbItem"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Subframes For Allocated Prb",
                    "type": "array"
                },
                "tb_size": {
                    "description": "Transport block size (bits), share configuration for both codewords if only one is provided. Maps to Mcs.Tbs in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/TbSizeItem"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Tb Size",
                    "type": "array"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PhyPdschSendReq message."
                }
            },
            "required": [
                "allocated_subframes",
                "slots_allocation",
                "subframes_for_allocated_prb",
                "subframe_of_pdsch_send_req",
                "data_source",
                "tb_size",
                "tx_power",
                "bf_weights"
            ],
            "title": "LteUserNbPdsch",
            "type": "object"
        },
        "LteUserNbPrach": {
            "additionalProperties": false,
            "properties": {
                "channelType": {
                    "$ref": "#/$defs/ChannelTypeModel"
                },
                "nb_config_index": {
                    "description": "Index of prachConfigs item (see cell/narrowbands/NbPrach.json)",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Nb Config Index",
                    "type": "integer"
                },
                "preamble": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPrachPreamble"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                }
            },
            "required": [
                "channelType",
                "preamble",
                "snrs",
                "nb_config_index"
            ],
            "title": "LteUserNbPrach",
            "type": "object"
        },
        "LteUserNbPusch": {
            "additionalProperties": false,
            "properties": {
                "format": {
                    "$ref": "#/$defs/Format"
                },
                "modulation": {
                    "$ref": "#/$defs/Modulation"
                },
                "nbHarqControl": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPuschUserHarqControl"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Determines whether the user uses retransmission."
                },
                "numOfRepetitions": {
                    "$ref": "#/$defs/NumOfRepetitions"
                },
                "numOfSubcarriers": {
                    "$ref": "#/$defs/NumOfSubcarriers1"
                },
                "resourceUnits": {
                    "$ref": "#/$defs/ResourceUnits"
                },
                "simulation": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NbPuschUserSimulation"
                        }
                    ],
                    "description": "User's transmission simulation settings."
                },
                "subcarrierIndex": {
                    "description": "Index of the first subcarrier used for the transmission.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Subcarrierindex",
                    "type": "integer"
                },
                "tbSize": {
                    "$ref": "#/$defs/TbSize"
                },
                "ueIndex": {
                    "$ref": "#/$defs/UeIndex"
                }
            },
            "required": [
                "format",
                "modulation",
                "nbHarqControl",
                "numOfRepetitions",
                "numOfSubcarriers",
                "resourceUnits",
                "simulation",
                "subcarrierIndex",
                "tbSize",
                "ueIndex"
            ],
            "title": "LteUserNbPusch",
            "type": "object"
        },
        "LteUserPdcch": {
            "additionalProperties": false,
            "description": "PDCCH DCI parameters set per user",
            "properties": {
                "cat_m": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CatM1"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "dci": {
                    "description": "DCI configuration of one user",
                    "items": {
                        "$ref": "#/$defs/trx5g__l1_sct_definition__user__lte_user__DciItem"
                    },
                    "title": "Dci",
                    "type": "array"
                }
            },
            "required": [
                "dci",
                "cat_m"
            ],
            "title": "LteUserPdcch",
            "type": "object"
        },
        "LteUserPdsch": {
            "additionalProperties": false,
            "description": "PDSCH parameters for a single user.",
            "properties": {
                "allocated_subframes": {
                    "description": "subframe allocation map, array for all subframes in the radio frame defining if PDSCH resource is scheduled in the subframe. Maps to AllocSubfr in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Allocated Subframes",
                    "type": "array"
                },
                "bf_weights": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/BeamformingWeight"
                            },
                            "maxItems": 32,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Weight factor for long term beamforming. Maps to bfWeights in PhyPdschSendReq and InitBfVector in 5gmax. Expected size is number_of_antennas * number_of_layers.",
                    "title": "Bf Weights"
                },
                "cat_m": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CatM2"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Cat-M parameters."
                },
                "codebook_index": {
                    "anyOf": [
                        {
                            "maximum": 255,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Precoding codebook index for spatial multiplexing, specified value is valid for No CDD, with large delay CDD value of null should be specified. Maps to tbFormat.codebookIndex in  message. Maps 0-15 to Precoding.CodebookIdx and 16-255 to TM9Precoding.CodebookIdxPair in 5GMax.",
                    "title": "Codebook Index"
                },
                "data_source": {
                    "$ref": "#/$defs/LtePdschDataSource"
                },
                "dmrs_port": {
                    "$ref": "#/$defs/DmrsPort"
                },
                "encoder": {
                    "$ref": "#/$defs/PdschEncoder"
                },
                "is_csi_rs_re_blank": {
                    "description": "Indicate whether CSI-RS RE will be blanked as boolean. True means CSI-RS RE needs to be blanked from PDSCH data RE, false means CSI-RS RE will be punctured to transmit CSI-RS. Maps to tbFlags bit 2 in PhyPdschSendReq message. Bit 2 is set to 1 when the subframe is used to send CSIRS and is_csi_rs_re_blank is true, else 0.",
                    "title": "Is Csi Rs Re Blank",
                    "type": "boolean"
                },
                "layers": {
                    "$ref": "#/$defs/Layers"
                },
                "pdcch_check_flag": {
                    "description": "Maps to bit 0 of tbFlags in PhyPdschSendReq.",
                    "title": "Pdcch Check Flag",
                    "type": "boolean"
                },
                "scrambling_sequence_id": {
                    "$ref": "#/$defs/ScramblingSequenceId"
                },
                "sfn_subcell_id": {
                    "description": "Subcell\u00a0ID in case of single-frequency network cell. TDD specific field. Maps to sfnSubCellId in PhyPdschSendReq message.",
                    "maximum": 255,
                    "minimum": 0,
                    "title": "Sfn Subcell Id",
                    "type": "integer"
                },
                "sib1_transmission": {
                    "description": "SIB1 transmission. Maps to tbFlags[9] in DlCommonPdsch message.",
                    "title": "Sib1 Transmission",
                    "type": "boolean"
                },
                "slots_allocation": {
                    "$ref": "#/$defs/SlotsAllocation"
                },
                "spatial_mode": {
                    "$ref": "#/$defs/SpatialMode"
                },
                "transmission_mode": {
                    "description": "Maps to TransmMode in 5GMax; Maps to DiversityScheme in 5GMax; Maps to Precoding in 5GMax. Maps to tbFormat->nIr in PhyPdschSendReq",
                    "maximum": 9,
                    "minimum": 1,
                    "title": "Transmission Mode",
                    "type": "integer"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PhyPdschSendReq message."
                }
            },
            "required": [
                "sfn_subcell_id",
                "allocated_subframes",
                "slots_allocation",
                "data_source",
                "encoder",
                "codebook_index",
                "tx_power",
                "bf_weights",
                "transmission_mode",
                "spatial_mode",
                "layers",
                "scrambling_sequence_id",
                "dmrs_port",
                "is_csi_rs_re_blank",
                "pdcch_check_flag",
                "cat_m",
                "sib1_transmission"
            ],
            "title": "LteUserPdsch",
            "type": "object"
        },
        "LteUserPrach": {
            "additionalProperties": false,
            "properties": {
                "channelType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelTypeModel"
                        }
                    ],
                    "description": "Type of simulated channel"
                },
                "numRepetitions": {
                    "$ref": "#/$defs/NumRepetitions"
                },
                "preamble": {
                    "$ref": "#/$defs/PrachPreamble"
                },
                "preambleRangeEnd": {
                    "description": "Last preamble belonging to repetition level",
                    "maximum": 63,
                    "minimum": 0,
                    "title": "Preamblerangeend",
                    "type": "integer"
                },
                "preambleRangeStart": {
                    "description": "First preamble belonging to repetition level",
                    "maximum": 63,
                    "minimum": 0,
                    "title": "Preamblerangestart",
                    "type": "integer"
                }
            },
            "required": [
                "channelType",
                "numRepetitions",
                "preamble",
                "preambleRangeEnd",
                "preambleRangeStart"
            ],
            "title": "LteUserPrach",
            "type": "object"
        },
        "LteUserPucch": {
            "additionalProperties": false,
            "properties": {
                "allocUser": {
                    "$ref": "#/$defs/AllocUser"
                },
                "candidate_subcell_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CandidateSubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "catM": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PucchCatm"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "data": {
                    "$ref": "#/$defs/PucchUserData"
                },
                "format": {
                    "$ref": "#/$defs/PucchFormat"
                },
                "resources": {
                    "$ref": "#/$defs/PucchUserResources"
                },
                "serving_subcell_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ServingSubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "settings": {
                    "$ref": "#/$defs/PucchUserSettings"
                },
                "simulation": {
                    "$ref": "#/$defs/PucchUserSimulation"
                },
                "ueIndex": {
                    "$ref": "#/$defs/UeIndex"
                }
            },
            "required": [
                "allocUser",
                "catM",
                "data",
                "format",
                "resources",
                "settings",
                "simulation",
                "ueIndex",
                "serving_subcell_id",
                "candidate_subcell_id"
            ],
            "title": "LteUserPucch",
            "type": "object"
        },
        "LteUserPusch": {
            "additionalProperties": false,
            "properties": {
                "CE": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/UserCe"
                        }
                    ],
                    "description": "Coverage enhancement settings for Cat-M UEs."
                },
                "allocUser": {
                    "$ref": "#/$defs/AllocUser"
                },
                "candidate_subcell_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CandidateSubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "data": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschUserData"
                        }
                    ],
                    "description": "PUSCH user TB and control data settings"
                },
                "flexCoMP": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschUserFlexComp"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "User's FlexCoMP parameters."
                },
                "harqControl": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschUserHarqControl"
                        }
                    ],
                    "description": "Determines whether the user uses retransmission or tti bundling. Note: Remember to create or use default mac update file. See cell features. When other than none, allocUser is ignored."
                },
                "pairedUeIndex": {
                    "description": "TDD specific parameter. Used for MU-MIMO to indicate which two UEs are paired together. Should be filled with 0xFFFF when there is no paired UE or for cells with less than 64 antennas.",
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "Pairedueindex",
                    "type": "integer"
                },
                "resources": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschUserResources"
                        }
                    ],
                    "description": "PUSCH resources settings for given user"
                },
                "serving_subcell_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ServingSubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "settings": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschUserSettings"
                        }
                    ],
                    "description": "Use case related settings"
                },
                "simulation": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschUserSimulation"
                        }
                    ],
                    "description": "User's transmission simulation settings"
                },
                "ueIndex": {
                    "description": "PUSCH user's identification number in PCell. Keep in mind that the value should be multiple of 16 if you want UE to properly use RI bits to choose corresponding CQI sizes on DSP side.",
                    "maximum": 8191,
                    "minimum": 0,
                    "title": "Ueindex",
                    "type": "integer"
                },
                "ulMuMimoLayer": {
                    "description": "TDD specific parameter. Used to indicate the layer that this UE belongs to in UL MuMimo. Non default value is allowed only with 64 RX cell",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Ulmumimolayer",
                    "type": "integer"
                }
            },
            "required": [
                "CE",
                "allocUser",
                "data",
                "flexCoMP",
                "harqControl",
                "resources",
                "settings",
                "simulation",
                "ueIndex",
                "ulMuMimoLayer",
                "serving_subcell_id",
                "candidate_subcell_id",
                "pairedUeIndex"
            ],
            "title": "LteUserPusch",
            "type": "object"
        },
        "LteUserSrs": {
            "additionalProperties": false,
            "properties": {
                "bandwidth": {
                    "description": "Defines SRS bandwidth for user in number of PRBs. Value must be a multiple of 4. Valid values are 4 ... 96",
                    "maximum": 96,
                    "minimum": 4,
                    "multipleOf": 4,
                    "title": "Bandwidth",
                    "type": "integer"
                },
                "cyclicShift": {
                    "description": "Cyclic shift of sounding reference signal for given user. Valid values are 0 ... 7",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Cyclicshift",
                    "type": "integer"
                },
                "freqDomPosition": {
                    "description": "Frequency domain position (index of 4PRB bundle in SRS bandwidth -- as defined in 3GPP).",
                    "maximum": 23,
                    "minimum": 0,
                    "title": "Freqdomposition",
                    "type": "integer"
                },
                "serving_subcell_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ServingSubcellId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "simulation": {
                    "$ref": "#/$defs/SrsSimulation"
                },
                "srsTdd": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SrsTdd"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "transComb": {
                    "$ref": "#/$defs/TransComb"
                },
                "ueIndex": {
                    "description": "User index number",
                    "maximum": 8191,
                    "minimum": 0,
                    "title": "Ueindex",
                    "type": "integer"
                }
            },
            "required": [
                "bandwidth",
                "cyclicShift",
                "freqDomPosition",
                "serving_subcell_id",
                "simulation",
                "srsTdd",
                "transComb",
                "ueIndex"
            ],
            "title": "LteUserSrs",
            "type": "object"
        },
        "LteUserUplink": {
            "additionalProperties": false,
            "description": "Single user's uplink-specific configuration",
            "properties": {
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "nbPrach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserNbPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "nbPusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserNbPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "nb_phys_cell_id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Nb Phys Cell Id"
                },
                "nb_prb_index": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Nb Prb Index"
                },
                "phys_cell_id": {
                    "$ref": "#/$defs/PhysCellId"
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pucch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserPucch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "scm_doa_model": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ScmDoaModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "User SCM Doa coordinates - massive Mimo related simulation parameters"
                },
                "srs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteUserSrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "ln_cell_id",
                "nb_phys_cell_id",
                "nb_prb_index",
                "phys_cell_id",
                "scm_doa_model",
                "nbPrach",
                "nbPusch",
                "prach",
                "pucch",
                "pusch",
                "srs"
            ],
            "title": "LteUserUplink",
            "type": "object"
        },
        "Ltem": {
            "additionalProperties": false,
            "properties": {
                "pucch": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Pucch"
                        }
                    ],
                    "description": "M-PUCCH settings"
                }
            },
            "required": [
                "pucch"
            ],
            "title": "Ltem",
            "type": "object"
        },
        "MacUpdateFile": {
            "description": "Legacy constant MacUpdateFile name.",
            "enum": [
                "",
                "MacUpdateFile_Trx_f",
                "MacUpdateFile_MPusch_f",
                "MacUpdateFile_HarqTtiBundling_f",
                "MacUpdateFile_MacSelectedSet_f"
            ],
            "title": "MacUpdateFile",
            "type": "string"
        },
        "MantissaSize": {
            "description": "Mantissa size. Maps to UlCellSetupRequest.mantissaSize and DlCellSetupRequest.mantissaSize.",
            "enum": [
                9,
                14
            ],
            "title": "MantissaSize",
            "type": "integer"
        },
        "MappingType": {
            "description": "DM-RS mapping type. Maps to ulDmrsMappingType in UlDataPuschReceiveReq message. 3GPP 38.211 6.4.1.1.3.\nMaps to AllocDmrsSymbols in 5GMax.",
            "enum": [
                "TypeA",
                "TypeB"
            ],
            "title": "MappingType",
            "type": "string"
        },
        "MappingType1": {
            "description": "DM-RS mapping type. 3GPP 38.211 7.4.1.1.2. Maps to dlDmrsMappingType in PdschSendReq message. Maps to\n DmrsMappingType in 5GMax.",
            "enum": [
                "TypeA",
                "TypeB"
            ],
            "title": "MappingType1",
            "type": "string"
        },
        "MaxBandwidth": {
            "description": "Max Bandwidth for PDSCH LTE-M",
            "enum": [
                1.4,
                5.0,
                20.0
            ],
            "title": "MaxBandwidth",
            "type": "numeric"
        },
        "MaxUsedRiEnum": {
            "enum": [
                0,
                2,
                4,
                8
            ],
            "title": "MaxUsedRiEnum",
            "type": "integer"
        },
        "MaxValidTimeOfMeasurement": {
            "description": "Indicates the maximum time during which the measurement channel information is valid. Maps to timeChInfoValid\nin DlCellSetupReq message.",
            "enum": [
                "invalid",
                "10ms",
                "20ms",
                "50ms",
                "100ms",
                "200ms",
                "500ms",
                "1000ms",
                "1500ms",
                "2000ms",
                "infinite"
            ],
            "title": "MaxValidTimeOfMeasurement",
            "type": "string"
        },
        "McsIndex": {
            "maximum": 28,
            "minimum": 0,
            "title": "McsIndex",
            "type": "integer"
        },
        "McsIndexTablePdsch": {
            "description": "MCS index table in 38.214 chapter 5.1.3.1",
            "enum": [
                "64QAM",
                "256QAM",
                "64QAMLow",
                "1024QAM"
            ],
            "title": "McsIndexTablePdsch",
            "type": "string"
        },
        "McsIndexTablePusch": {
            "description": "MCS index table in 38.214 chapter 6.1.4.1",
            "enum": [
                "64QAM",
                "256QAM",
                "64QAMLow"
            ],
            "title": "McsIndexTablePusch",
            "type": "string"
        },
        "Method": {
            "description": "Antenna precombine method in UL. Mapped to ParUnit.RX.UlAntPreComb.Method for Loki and Thor MMIMO cases",
            "enum": [
                "IndependentEBB",
                "FixBfWeight",
                "UserDefined"
            ],
            "title": "Method",
            "type": "string"
        },
        "Method1": {
            "description": "Beamforming Weight Vector Algorithm. Maps to pSRSBwvConfig.method in UlCell_SetupReq and to\nParUnit{1}.DigitalBeamforming.Method in 5GMAX.",
            "enum": [
                "MMSE",
                "FFEBF"
            ],
            "title": "Method1",
            "type": "string"
        },
        "Model": {
            "additionalProperties": false,
            "description": "Simulation model",
            "properties": {
                "lte": {
                    "$ref": "#/$defs/Lte"
                },
                "nr": {
                    "$ref": "#/$defs/Nr"
                }
            },
            "required": [
                "lte",
                "nr"
            ],
            "title": "Model",
            "type": "object"
        },
        "Modulation": {
            "description": "Modulation scheme setting for nbPUSCH user. Available schemes: 'BPSK', 'QPSK'.",
            "enum": [
                "BPSK",
                "QPSK"
            ],
            "title": "Modulation",
            "type": "string"
        },
        "Modulation1": {
            "description": "Modulation scheme setting. Available schemes: 'QPSK', '16QAM', '64QAM', '256QAM'",
            "enum": [
                "QPSK",
                "16QAM",
                "64QAM",
                "256QAM"
            ],
            "title": "Modulation1",
            "type": "string"
        },
        "Modulation2": {
            "additionalProperties": false,
            "description": "Modulation configuration. Reference: 3GPP 38.214 6.1.4.1. Maps to modulationOrder in PuschReceiveReqGrant message.\n Maps to ModulationOrder in 5GMax.",
            "properties": {
                "enable_bpsk": {
                    "description": "Enable BPSK, valid when transform_precoder is enabled and mcs_index of mcs_index_table support BPSK. Maps to ParCell{}.<Standard=NR5G>MAC.ULMAP{}.<PhyChannel=PUSCH>Mcs.<Type=Standard>Enablepi2BPSK field in 5GMax.",
                    "title": "Enable Bpsk",
                    "type": "boolean"
                },
                "mcs_index": {
                    "$ref": "#/$defs/McsIndex"
                },
                "mcs_index_table": {
                    "$ref": "#/$defs/McsIndexTablePusch"
                }
            },
            "required": [
                "enable_bpsk",
                "mcs_index_table",
                "mcs_index"
            ],
            "title": "Modulation2",
            "type": "object"
        },
        "Modulation3": {
            "description": "Modulation type. Used only for PUCCH format 3 (has to be set to non-null value).\nMaps to PUCCHF3F4pi2BPSK in 5GMax and to modulationType in UlDataPucchReceiveReq message.",
            "enum": [
                "QPSK",
                "pi2-BPSK",
                null
            ],
            "title": "Modulation3"
        },
        "ModulationEnum": {
            "enum": [
                "QPSK",
                "16QAM",
                "64QAM",
                "256QAM"
            ],
            "title": "ModulationEnum",
            "type": "string"
        },
        "Modulo": {
            "description": "FIELD THAT DECIDES WHERE SAMPLES FROM STREAMS GO IN CPRI STREAM, E.G. IF MODULO = 2 then samples of first stream\ngo into even numbered position and the samples of the second stream to the odd numbered positions in CPRI stream.\nMaps to SBbbAxcContainer2.modulo.",
            "enum": [
                1,
                2
            ],
            "title": "Modulo",
            "type": "integer"
        },
        "MultiPurposeField": {
            "maximum": 65535,
            "minimum": 0,
            "title": "MultiPurposeField",
            "type": "integer"
        },
        "Name": {
            "description": "EMacToPhy event name.",
            "enum": [
                "HoMsg3Fails",
                "NotDefined",
                "CorruptedTb",
                "WrongRachDetection"
            ],
            "title": "Name",
            "type": "string"
        },
        "Narrowband": {
            "additionalProperties": false,
            "properties": {
                "cyclicPrefix": {
                    "$ref": "#/$defs/CyclicPrefix"
                },
                "prbIndex": {
                    "$ref": "#/$defs/PrbIndex"
                }
            },
            "required": [
                "prbIndex",
                "cyclicPrefix"
            ],
            "title": "Narrowband",
            "type": "object"
        },
        "Narrowbands": {
            "items": {
                "$ref": "#/$defs/DlNarrowband"
            },
            "maxItems": 1,
            "title": "Narrowbands",
            "type": "array"
        },
        "NbIotMode": {
            "description": "NB-IoT mode. Maps to nbOperationMode in PhyDlCellSetupReq and ParCell.RRC.NbIot.Mode",
            "enum": [
                "InBand",
                "GuardBand",
                "StandAlone"
            ],
            "title": "NbIotMode",
            "type": "string"
        },
        "NbPbch": {
            "additionalProperties": false,
            "description": "NbIot PBCH configuration",
            "properties": {
                "decode_mode": {
                    "$ref": "#/$defs/DecodeMode"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PHY_NBPbchSendReq."
                }
            },
            "required": [
                "decode_mode",
                "tx_power",
                "timing_advance"
            ],
            "title": "NbPbch",
            "type": "object"
        },
        "NbPdcch": {
            "additionalProperties": false,
            "description": "NbIot PDCCH configuration",
            "properties": {
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PHY_NbPdcchSendReq."
                }
            },
            "required": [
                "tx_power",
                "timing_advance"
            ],
            "title": "NbPdcch",
            "type": "object"
        },
        "NbPdsch": {
            "additionalProperties": false,
            "description": "NBPDSCH channel parameters for a single cell.",
            "properties": {
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "timing_advance"
            ],
            "title": "NbPdsch",
            "type": "object"
        },
        "NbPrach": {
            "additionalProperties": false,
            "properties": {
                "accessIdx": {
                    "description": "Access slot index within snapshot file, maps with ParUnit{XXX}.RX.AntIf.NbIot.NbPrachCaptureAccessIdx",
                    "maximum": 256,
                    "minimum": 1,
                    "title": "Accessidx",
                    "type": "integer"
                },
                "prachConfigs": {
                    "description": "NBPRACH parameters for resource configuration",
                    "items": {
                        "$ref": "#/$defs/NbPrachConfigs"
                    },
                    "maxItems": 3,
                    "minItems": 1,
                    "title": "Prachconfigs",
                    "type": "array"
                },
                "snapshotFile": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "NBPRACH snapshot file name without the extension: mandatory if read_capture = 1",
                    "title": "Snapshotfile"
                },
                "thresholdScaler": {
                    "description": "NBPRACH detection thresholds scaler values",
                    "items": {
                        "$ref": "#/$defs/ThresholdScalerItem"
                    },
                    "maxItems": 3,
                    "minItems": 3,
                    "title": "Thresholdscaler",
                    "type": "array"
                }
            },
            "required": [
                "prachConfigs",
                "thresholdScaler",
                "accessIdx",
                "snapshotFile"
            ],
            "title": "NbPrach",
            "type": "object"
        },
        "NbPrachConfigs": {
            "additionalProperties": false,
            "properties": {
                "numOfSubcarriers": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumOfSubcarriers"
                        }
                    ],
                    "description": "Number of subcarriers for a given NBPRACH configuration, maps with subcarrierOffset based on https://sharenet-ims.int.net.nokia.com/Overview/D543844987"
                },
                "startTimeSubfr": {
                    "$ref": "#/$defs/StartTimeSubfr"
                },
                "subcarrierOffset": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SubcarrierOffset"
                        }
                    ],
                    "description": "Offset for the first subcarrier in a given NBPRACH configuration, maps with numOfSubcarriers based on https://sharenet-ims.int.net.nokia.com/Overview/D543844987"
                },
                "timeConfIndex": {
                    "description": "NBPRACH configuration in time domain mapped into periodicitySubfr and numRepetitions from 3GPP.",
                    "maximum": 46,
                    "minimum": 0,
                    "title": "Timeconfindex",
                    "type": "integer"
                }
            },
            "required": [
                "numOfSubcarriers",
                "subcarrierOffset",
                "timeConfIndex",
                "startTimeSubfr"
            ],
            "title": "NbPrachConfigs",
            "type": "object"
        },
        "NbPrachPreamble": {
            "additionalProperties": false,
            "properties": {
                "freqOffset": {
                    "description": "UE's frequency offset [Hz]",
                    "title": "Freqoffset",
                    "type": "number"
                },
                "signature": {
                    "description": "PRACH preamble signature id",
                    "title": "Signature",
                    "type": "integer"
                },
                "timeOffset": {
                    "$ref": "#/$defs/TimeOffset"
                },
                "velocity": {
                    "description": "UE's velocity [km/h]",
                    "title": "Velocity",
                    "type": "number"
                }
            },
            "required": [
                "freqOffset",
                "signature",
                "timeOffset",
                "velocity"
            ],
            "title": "NbPrachPreamble",
            "type": "object"
        },
        "NbPusch": {
            "additionalProperties": false,
            "properties": {
                "accessIdx": {
                    "description": "slot index within snapshot file, maps with ParUnit{XXX}.RX.AntIf.NbIot.NbPuschCaptureAccessIdx",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Accessidx",
                    "type": "array"
                },
                "sixToneBaseSequence": {
                    "description": "Base sequence for 6-tone mode",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Sixtonebasesequence",
                    "type": "integer"
                },
                "sixToneCyclicShift": {
                    "description": "Cyclic shift for 6-tone mode",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Sixtonecyclicshift",
                    "type": "integer"
                },
                "snapshotFile": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "NBPUSCH snapshot file name without the extension: mandatory if read_capture = 1",
                    "title": "Snapshotfile"
                },
                "threeToneBaseSequence": {
                    "description": "Base sequence for 3-tone mode",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Threetonebasesequence",
                    "type": "integer"
                },
                "threeToneCyclicShift": {
                    "description": "Cyclic shift for 3-tone mode",
                    "maximum": 2,
                    "minimum": 0,
                    "title": "Threetonecyclicshift",
                    "type": "integer"
                },
                "twelveToneBaseSequence": {
                    "description": "Base sequence for 12-tone mode",
                    "maximum": 29,
                    "minimum": 0,
                    "title": "Twelvetonebasesequence",
                    "type": "integer"
                }
            },
            "required": [
                "sixToneBaseSequence",
                "sixToneCyclicShift",
                "threeToneBaseSequence",
                "threeToneCyclicShift",
                "twelveToneBaseSequence",
                "accessIdx",
                "snapshotFile"
            ],
            "title": "NbPusch",
            "type": "object"
        },
        "NbPuschUserHarqControl": {
            "additionalProperties": false,
            "properties": {
                "delay": {
                    "description": "Indicates how many TTI's delay between NPUSCH and NPDCCH",
                    "maximum": 15,
                    "minimum": 2,
                    "title": "Delay",
                    "type": "integer"
                },
                "harqProcessNumber": {
                    "$ref": "#/$defs/HarqProcessNumber"
                },
                "npdcch_interval": {
                    "description": "interval of NPDCCH in TTI",
                    "minimum": 1,
                    "title": "Npdcch Interval",
                    "type": "integer"
                },
                "txCount": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxCount"
                        }
                    ],
                    "description": "Define number of transmission for each TB. The first transmission is a new transmission, the remaining txCount - 1 transmissions are re-tx."
                }
            },
            "required": [
                "delay",
                "npdcch_interval",
                "harqProcessNumber",
                "txCount"
            ],
            "title": "NbPuschUserHarqControl",
            "type": "object"
        },
        "NbPuschUserSimulation": {
            "additionalProperties": false,
            "properties": {
                "channelType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelTypeModel"
                        }
                    ],
                    "description": "Type of simulated channel"
                },
                "frequencyOffset": {
                    "$ref": "#/$defs/SimpleFrequencyOffset"
                },
                "maxDopplerFreq": {
                    "description": "Value of maximum Doppler frequency given in Hz",
                    "title": "Maxdopplerfreq",
                    "type": "number"
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                }
            },
            "required": [
                "channelType",
                "frequencyOffset",
                "snrs",
                "maxDopplerFreq"
            ],
            "title": "NbPuschUserSimulation",
            "type": "object"
        },
        "NbUlSubcarrier": {
            "description": "Maps upper 16-bits of ulcellid in L1Log_AntennaSnapshotConfigurationReq for NB-IoT",
            "enum": [
                0,
                256,
                512,
                1024
            ],
            "title": "NbUlSubcarrier",
            "type": "integer"
        },
        "NdmItem": {
            "additionalProperties": false,
            "properties": {
                "slot": {
                    "description": "NDM Slot, maps to ParUnit{1}.DigitalBeamformingRimRs.NdmSlot",
                    "maximum": 19,
                    "minimum": 0,
                    "title": "Slot",
                    "type": "integer"
                },
                "symbol": {
                    "description": "NDM Symbol, maps to ParUnit{1}.DigitalBeamformingRimRs.NdmSym",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Symbol",
                    "type": "integer"
                }
            },
            "required": [
                "slot",
                "symbol"
            ],
            "title": "NdmItem",
            "type": "object"
        },
        "Neighbor": {
            "additionalProperties": false,
            "properties": {
                "neighborCellId": {
                    "description": "PhyCellId of CoMP neighbor cell",
                    "title": "Neighborcellid",
                    "type": "integer"
                },
                "noisePowers": {
                    "description": "Noise powers for CoMP neighbor cell for each antenna",
                    "items": {
                        "type": "number"
                    },
                    "title": "Noisepowers",
                    "type": "array"
                },
                "rxScalings": {
                    "description": "Power Scalings for CoMP neighbor cell for each antenna",
                    "items": {
                        "type": "number"
                    },
                    "title": "Rxscalings",
                    "type": "array"
                }
            },
            "required": [
                "neighborCellId",
                "rxScalings",
                "noisePowers"
            ],
            "title": "Neighbor",
            "type": "object"
        },
        "NonZeroPowerResource": {
            "additionalProperties": false,
            "description": "Non-zero power CSI-RS specific configuration",
            "properties": {
                "configuration_index": {
                    "description": "Index of CSI-RS resource configuration. Maps to csiRsResourceConf in DlCellSetupReq message and ParCell.RRC.CsiRs.Configuration in 5gmax.",
                    "maximum": 31,
                    "minimum": 0,
                    "title": "Configuration Index",
                    "type": "integer"
                },
                "power": {
                    "description": "CSI-RS Power. Step size is 1/100 dBm. Maps to txPowerCsiRs in DlCellSetupReq message and ParCell.RRC.CsiRs.PowBoost in 5gmax.",
                    "maximum": 6000,
                    "minimum": -6000,
                    "title": "Power",
                    "type": "integer"
                },
                "subframe_configuration": {
                    "description": "Subframe Configuration for the CSI-RS. Maps to csiRsResourceConf in DlCellSetupReq message.and ParCell.RRC.CsiRs.SubframeConfig in 5gmax.",
                    "maximum": 154,
                    "minimum": 0,
                    "title": "Subframe Configuration",
                    "type": "integer"
                }
            },
            "required": [
                "configuration_index",
                "subframe_configuration",
                "power"
            ],
            "title": "NonZeroPowerResource",
            "type": "object"
        },
        "NonZeroPowerResources": {
            "items": {
                "$ref": "#/$defs/NonZeroPowerResource"
            },
            "maxItems": 3,
            "title": "NonZeroPowerResources",
            "type": "array"
        },
        "Nr": {
            "description": "Simulation model for NR cells",
            "enum": [
                "Target",
                "AllQuantize",
                null
            ],
            "title": "Nr"
        },
        "NrBandwidth": {
            "description": "Cell's bandwidth in MHz",
            "enum": [
                5,
                10,
                15,
                20,
                25,
                30,
                35,
                40,
                50,
                60,
                70,
                80,
                90,
                100,
                "DL_20/UL_10",
                "DL_30/UL_10"
            ],
            "title": "NrBandwidth"
        },
        "NrCell": {
            "additionalProperties": false,
            "description": "Configuration for a single NR cell",
            "properties": {
                "antenna_array": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AntennaArray"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "bandwidth": {
                    "$ref": "#/$defs/NrBandwidth"
                },
                "carrier_frequency": {
                    "anyOf": [
                        {
                            "maximum": 7125000000.0,
                            "minimum": 410000000.0,
                            "type": "number"
                        },
                        {
                            "maximum": 52600000000.0,
                            "minimum": 24250000000.0,
                            "type": "number"
                        }
                    ],
                    "description": "Frequencies used for transmission and reception in radio system. 3GPP 38.101-1, 38.101-2 table 5.1-1.",
                    "title": "Carrier Frequency"
                },
                "channel_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelType"
                        }
                    ],
                    "description": "Models of signal noise in channel transmissions. For conformance testing requirements, see 3GPP 38.141. Mapped to ParCH.Def.ChannelType"
                },
                "cp_delay_range": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CpDelayRange"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cpri_dialect_indication": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NrCpriDialectIndication"
                        }
                    ],
                    "description": "CPRI dialect indication. Maps to [Ul|Dl]Cell_SetupReq.cpriDialectIndication in messages. Also in ParUnit, maps to Architecture.FrontHaul for UL, and to TX.AntIf.RfHeadRoom for DL."
                },
                "cpri_type": {
                    "$ref": "#/$defs/CpriType"
                },
                "downlink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellDownlink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "duplex_mode": {
                    "$ref": "#/$defs/DuplexMode"
                },
                "fronthaul_mode": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/FronthaulMode"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Cell fronthaul mode. CPRI or OBSAI if subpool level fronthaul mode set to CPRI_OR_OBSAI. Maps to fronthaulMode in UlCellSetupRequest message."
                },
                "harq_feedback_queue_enabled": {
                    "description": "VRAN specific flag enabling conformance testing",
                    "title": "Harq Feedback Queue Enabled",
                    "type": "boolean"
                },
                "l1_log_trace": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/L1LogTrace"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "number_of_carrier_parts": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfCarrierParts"
                        }
                    ],
                    "description": "Defines if antenna bandwidth is split between multiple antennas (CB006911/CB007331/CB009104). Maps to SplitBW options in 5GMax"
                },
                "numerology": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Numerology"
                        }
                    ],
                    "description": "Transmission numerology (determining subcarrier spacing and symbol length). Currently TRX supports numerology 0 for FDD, 1 and 3 for TDD"
                },
                "oran": {
                    "$ref": "#/$defs/Oran"
                },
                "phys_cell_id": {
                    "description": "Physical cell ID. This is NOT the cell's identifier. Determines the value of the dciScramblingSequenceInit.",
                    "maximum": 1007,
                    "minimum": 0,
                    "title": "Phys Cell Id",
                    "type": "integer"
                },
                "standard": {
                    "const": "NR",
                    "title": "Standard"
                },
                "uplink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellUplink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "user_defined_model_config": {
                    "$ref": "#/$defs/UserDefinedModelConfig"
                }
            },
            "required": [
                "fronthaul_mode",
                "standard",
                "cp_delay_range",
                "cpri_type",
                "cpri_dialect_indication",
                "phys_cell_id",
                "bandwidth",
                "numerology",
                "carrier_frequency",
                "channel_type",
                "uplink",
                "downlink",
                "oran",
                "antenna_array",
                "user_defined_model_config",
                "harq_feedback_queue_enabled",
                "duplex_mode",
                "l1_log_trace",
                "number_of_carrier_parts"
            ],
            "title": "NrCell",
            "type": "object"
        },
        "NrCellCsiRs": {
            "additionalProperties": false,
            "description": "CSI RS channel parameters for a single cell",
            "properties": {
                "resource_set": {
                    "description": "Resource set of CSI RS, only one type ('NZP_CSI_RS') of resource set is considered",
                    "items": {
                        "$ref": "#/$defs/CsiRsResource"
                    },
                    "maxItems": 20,
                    "minItems": 1,
                    "title": "Resource Set",
                    "type": "array"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvancePerSlot"
                }
            },
            "required": [
                "resource_set",
                "timing_advance"
            ],
            "title": "NrCellCsiRs",
            "type": "object"
        },
        "NrCellDownlink": {
            "additionalProperties": false,
            "description": "Single cell's downlink-specific configuration",
            "properties": {
                "activate_dl_ecpri_extension_type12": {
                    "description": "Activation flag of feature CB007731 for FR1 TDD DL eCPRI section extension type 12. Maps to DlCellSetupReq.actDlEcpriExtType12",
                    "title": "Activate Dl Ecpri Extension Type12",
                    "type": "boolean"
                },
                "activate_dl_prb_muting": {
                    "description": "Feature flag for DL Uplane muting. Maps to DlCellSetupReq.actDlPrbMuting",
                    "title": "Activate Dl Prb Muting",
                    "type": "boolean"
                },
                "active_beamforming": {
                    "description": "Flag which enables beamforming. Maps to actBeamforming in DlCellSetupRequest message. For RU SSB tests, it should be set to True.",
                    "title": "Active Beamforming",
                    "type": "boolean"
                },
                "alternative_bwps": {
                    "$ref": "#/$defs/AlternativeBwps"
                },
                "antenna_data_file_paths": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 4,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Paths to files containing antenna data for single cell. Used in XRT analysis mode.",
                    "title": "Antenna Data File Paths"
                },
                "asymmetric_cell_inner_guardband": {
                    "description": "Inner frequency guardband on PRBs 50-54. This option is only applicable for 30MHz DL bandwidth.",
                    "title": "Asymmetric Cell Inner Guardband",
                    "type": "boolean"
                },
                "axc_position": {
                    "$ref": "#/$defs/AxcPosition"
                },
                "ce_axc_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIds"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maps to ceAxCId of DlCellSetupRequest, length must match with number_of_antennas.If the CPRI dialect indication is 7_2e, length must equal 2, where one id is even and the other is odd."
                },
                "cell_slot_length": {
                    "anyOf": [
                        {
                            "maximum": 192,
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Length of the cell's slot. Use null if you want to disable this feature. Maps to CellSlotLength in DlCellSetupRequest.",
                    "title": "Cell Slot Length"
                },
                "conformance_test_mode": {
                    "$ref": "#/$defs/ConformanceTestMode"
                },
                "csi_rs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellCsiRs"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "This field should be set to null if csi rs is disabled"
                },
                "dl_ecpri_fd_beamforming": {
                    "description": "Enable DL Ecpri FD beamforming feature. Maps to DlCellSetupReq.dlEcpriFdBeamforming",
                    "title": "Dl Ecpri Fd Beamforming",
                    "type": "boolean"
                },
                "downsampling": {
                    "description": "Indicates if downsampling is enabled or not. Maps to dlActDownSampling in DlCellSetupRequest. Maps to TX.Compression.Downsampling in 5GMax.",
                    "title": "Downsampling",
                    "type": "boolean"
                },
                "first_cell_slot_id": {
                    "anyOf": [
                        {
                            "maximum": 191,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "ID of the first cell's slot. Use null if you want to disable this feature. Maps to FirstCellSlotId in DlCellSetupRequest.",
                    "title": "First Cell Slot Id"
                },
                "gain_offset": {
                    "description": "Value in dB. Used only for eCPRI IQ scaling mode 2 to compensate the limitation of dynamic range due to power distribution on whole BW. Maps to DlGainOffset in 5GMax and, multiplied by 10, to dlReferenceLevel in DlCellSetupRequest.",
                    "maximum": 30.0,
                    "minimum": 0.0,
                    "title": "Gain Offset",
                    "type": "number"
                },
                "iq_comp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/IqComp"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "logical_resource_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LogicalResourceIdsModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Apply numOfLogicalResourceIds based on how many elements are filled and logicalResourceIds directly based on logical_resource_ids."
                },
                "lte_crs_configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LteCrsConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "mimo_mode": {
                    "$ref": "#/$defs/NrMimoMode"
                },
                "number_of_antennas": {
                    "$ref": "#/$defs/NrDlNumberOfAntennas"
                },
                "pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellPdcch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "This field should be set to null if pdcch is disabled"
                },
                "pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellPdsch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pool_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PoolId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "power_reduction_per_symb": {
                    "anyOf": [
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/$defs/PowerReductionPerSymbItem"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "maxItems": 10240,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Array of pwrReductionPerSymb_dB arrays for each subframe in chronological order. Single powerReductionPerSymb_db can be array of 14 elements(reduction per each symbol) or null (which means 0 in each symbol). Subframes after last entry in this array will be zeroed for each symbol(same as null entry)",
                    "title": "Power Reduction Per Symb"
                },
                "power_reduction_slots": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Array that contains slot numbers on which power reduction occurs in each subframe",
                    "title": "Power Reduction Slots"
                },
                "radio_unit": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DlCellRadioUnit"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Radio Unit configuration."
                },
                "rd_sync_signals_tx_mode": {
                    "anyOf": [
                        {
                            "maximum": 2,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "R&D parameter rdSyncSignalsTxMode. Used to set precoding vectors - precodingVectorIndex in SsBlockSendReq message.",
                    "title": "Rd Sync Signals Tx Mode"
                },
                "rim_rs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RimRs"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "RIMRS channel parameters for a single cell"
                },
                "ssb": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Ssb"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ssb_configuration": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SsbConfiguration"
                        }
                    ],
                    "description": "SS/PBCH block symbol indexes configuration in 3GPP 38.213 section 4.1. Maps to ssBlockConfiguration in DlCellSetupRequest message."
                },
                "subcell_id": {
                    "$ref": "#/$defs/SubcellIdModel"
                },
                "subpool_id": {
                    "description": "Subpool ID used in cell slot model. Maps to l1SubpoolId in DlCellSetupRequest.",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Subpool Id",
                    "type": "integer"
                },
                "timing_advance_for_slot_type_req": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TimingAdvance"
                        }
                    ],
                    "description": "Timing advance corresponding to slot type messages"
                }
            },
            "required": [
                "ssb",
                "pdcch",
                "csi_rs",
                "pdsch",
                "rim_rs",
                "pool_id",
                "subcell_id",
                "number_of_antennas",
                "mimo_mode",
                "ssb_configuration",
                "lte_crs_configuration",
                "timing_advance_for_slot_type_req",
                "conformance_test_mode",
                "active_beamforming",
                "ce_axc_ids",
                "logical_resource_ids",
                "axc_position",
                "subpool_id",
                "first_cell_slot_id",
                "cell_slot_length",
                "rd_sync_signals_tx_mode",
                "gain_offset",
                "downsampling",
                "dl_ecpri_fd_beamforming",
                "activate_dl_ecpri_extension_type12",
                "activate_dl_prb_muting",
                "antenna_data_file_paths",
                "alternative_bwps",
                "asymmetric_cell_inner_guardband",
                "power_reduction_slots",
                "power_reduction_per_symb",
                "iq_comp",
                "radio_unit"
            ],
            "title": "NrCellDownlink",
            "type": "object"
        },
        "NrCellPdcch": {
            "additionalProperties": false,
            "description": "Indicates coreset configuration. This field should be set to null if PDCCH is disabled",
            "properties": {
                "coresets": {
                    "description": "Indicates resource blocks and slot symbols of coreset when search space type is ue-specific. Maps to CORESET in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/Coreset"
                    },
                    "maxItems": 12,
                    "title": "Coresets",
                    "type": "array"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvancePerSlot"
                },
                "timing_advance_for_payload_send_req": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TimingAdvancePerSlot"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Timing advance for payload send request for RU. Should be null for DU."
                }
            },
            "required": [
                "coresets",
                "timing_advance",
                "timing_advance_for_payload_send_req"
            ],
            "title": "NrCellPdcch",
            "type": "object"
        },
        "NrCellPdsch": {
            "additionalProperties": false,
            "description": "PDSCH channel parameters for a single cell",
            "properties": {
                "aggregate": {
                    "$ref": "#/$defs/Aggregate"
                },
                "symbol_rate_matching_positions": {
                    "$ref": "#/$defs/SymbolRateMatchingPositions"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvancePerSlot"
                },
                "timing_advance_for_payload_send_req": {
                    "$ref": "#/$defs/TimingAdvancePerSlot"
                }
            },
            "required": [
                "timing_advance",
                "timing_advance_for_payload_send_req",
                "aggregate",
                "symbol_rate_matching_positions"
            ],
            "title": "NrCellPdsch",
            "type": "object"
        },
        "NrCellPrach": {
            "additionalProperties": false,
            "description": "PRACH channel parameters for a single cell. This field should be set to null if PRACH channel is disabled",
            "properties": {
                "act_prach_no_preamble_noise_power_est": {
                    "description": "Feature flag for enabling CB010764-B PRACH Noise Power Real estimate when no Preamble detected.",
                    "title": "Act Prach No Preamble Noise Power Est",
                    "type": "boolean"
                },
                "add_external_delay_compensation": {
                    "description": "Indicates the additional external delay that needs to be compensated by the gNB, ranging from 0 to 203 us with step size 0.1us, here scaled by a factor of 10, the default value (0) indicates that the delay compensation is disabled. Maps to UlCell_SetupReq.addExtDelayCompensation. Maps to `ParUnit{}.PRACH.SearchWinShiftFor3rdPartyDelay`(Ts) in 5GMAX.",
                    "maximum": 2030,
                    "minimum": 0,
                    "title": "Add External Delay Compensation",
                    "type": "integer"
                },
                "adjust_threshold_offset_db": {
                    "description": "PRACH adjust threshold offset set in dB. This value is later converted to L1-appropriate form. Maps to adjustPrachThresholdOffsetDbAdjust in UlCellSetupRequest message. Maps to PrachThreshold.AdjustOffsetDb in 5GMax.",
                    "maximum": 3.0,
                    "minimum": -3.0,
                    "title": "Adjust Threshold Offset Db",
                    "type": "number"
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cell_extension": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CellExtension"
                        }
                    ],
                    "description": "Flag of extended FR2 cell range. Maps to UlCell_SetupReq.cellExtension. Maps to `ParUnit{}.PRACH.PrachCellExtension` in 5GMAX. If equal to 23, 69 or 110, then ParUnit{}.PRACH.SearchWinOffsetSamplesShortFormat=0, ParUnit{}.PRACH.SearchWinOffsetTsSF=[16, 14, 14, 0], ParUnit{}.PRACH.MaxCellSizeOpt=0 and ParUnit{}.PRACH.GuardSamplesShortFormat=0 will be set in 5GMAX."
                },
                "config_index": {
                    "anyOf": [
                        {
                            "maximum": 27,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "maximum": 58,
                            "minimum": 29,
                            "type": "integer"
                        },
                        {
                            "maximum": 109,
                            "minimum": 87,
                            "type": "integer"
                        },
                        {
                            "maximum": 168,
                            "minimum": 112,
                            "type": "integer"
                        },
                        {
                            "maximum": 218,
                            "minimum": 173,
                            "type": "integer"
                        },
                        {
                            "maximum": 255,
                            "minimum": 220,
                            "type": "integer"
                        }
                    ],
                    "description": "PRACH configuration index according to 3GPP 38.211 chapter 6.3.3. Used to calculate prachStartSymbol in UlCellSetupRequest message. Maps to PrachConfigIndex in 5GMax.",
                    "title": "Config Index"
                },
                "correlated_antenna_processing": {
                    "$ref": "#/$defs/CorrelatedAntennaProcessing"
                },
                "detector_type": {
                    "$ref": "#/$defs/DetectorType"
                },
                "dft_type_long_format": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DftTypeFormat"
                        }
                    ],
                    "description": "Type of DFT method applied at the PRACH receiver frontend for long format; maps to DftTypeLongFormat in 5gmax."
                },
                "dft_type_short_format": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DftTypeFormat"
                        }
                    ],
                    "description": "Type of DFT method applied at the PRACH receiver frontend for short format; maps to DftTypeShortFormat in 5gmax."
                },
                "dtx_threshold_selection": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DtxThresholdSelection"
                        }
                    ],
                    "description": "Maps to `ParUnit{}.PRACH.PrachDtxThresholdSelection` in 5GMAX and to UL_CellSetupReq.prachDtxThresholdSelection, should be set to number of RX antennas with the exception of C4 cell with suppressed Prach antennas"
                },
                "dynamic_scaling": {
                    "$ref": "#/$defs/DynamicScalingChannel"
                },
                "ecpri_section_id": {
                    "description": "ECPRI section id. Maps to PrachReceiveReq.subcells[].occasions.eCpriSectionId",
                    "maximum": 4095,
                    "minimum": 0,
                    "title": "Ecpri Section Id",
                    "type": "integer"
                },
                "false_alarm_target_prob_id": {
                    "description": "Used to specify PRACH FalseAlarmTargetProb. Maps to UlCellSetupRequest.pfaTargetPrachId and ParUnit{}.PRACH.FalseAlarmTargetProb in 5GMax.",
                    "maximum": 6,
                    "minimum": 0,
                    "title": "False Alarm Target Prob Id",
                    "type": "integer"
                },
                "first_root_sequence_index": {
                    "description": "The logical index of the first root sequence for preamble generation. Maps to firstPrachRootSeqIndex in UlCellSetupRequest message. Maps to  in 5GMax.",
                    "maximum": 837,
                    "minimum": 0,
                    "title": "First Root Sequence Index",
                    "type": "integer"
                },
                "gain_correction": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Gain correction for PRACH channels. Maps to gainCorrectionForPrach in UlCellSetupRequest message. Maps to GainCorrectionPrach in 5GMax (This value need be divided by 10). Value of null means 5gmax calculates the correct value to use, otherwise the value from json is used.",
                    "title": "Gain Correction"
                },
                "high_snr_mitigation": {
                    "$ref": "#/$defs/HighSnrMitigation"
                },
                "max_coherent_combining_len": {
                    "description": "Maximal group size for coherent combining. Group size is the maximum divisor of repetition number and less than or equal to max_coh_combining_len.",
                    "maximum": 12,
                    "minimum": 1,
                    "title": "Max Coherent Combining Len",
                    "type": "integer"
                },
                "n_random_access_preambles": {
                    "description": "Total number of RA preambles (5G_RAN_UP_22920). Maps to totalNumberOfRAPreambles in UlCellSetupRequest message.",
                    "maximum": 64,
                    "minimum": 1,
                    "title": "N Random Access Preambles",
                    "type": "integer"
                },
                "numerology": {
                    "$ref": "#/$defs/PrachNumerology"
                },
                "oran_prach_numerology": {
                    "description": "ORAN PRACH numerology used in UlCellSetupReq by LOKI FH. This field is not connected to 5gmax.",
                    "title": "Oran Prach Numerology",
                    "type": "boolean"
                },
                "override_timing_for_conformance_test": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/OverrideTimingForConformanceTest"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Access slot timing for conformance test (CB0011017-C)"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize2"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for reception in PRACH. Maps to PrachReceiveReqOccasion.patternId."
                },
                "prb_occasion_indices": {
                    "description": "PRB indices in which an occasion is present. Maps to nRA in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/PrbOccasionIndex"
                    },
                    "maxItems": 8,
                    "minItems": 1,
                    "title": "Prb Occasion Indices",
                    "type": "array"
                },
                "prb_offset": {
                    "description": "PRB offset in bandwidth. Maps to prachPrbOffset in UlCellSetupRequest message. Maps to PrachPrbOffset in 5GMax.",
                    "maximum": 270,
                    "minimum": 0,
                    "title": "Prb Offset",
                    "type": "integer"
                },
                "sequence_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SequenceType"
                        }
                    ],
                    "description": "Sequence type, can be unrestricted, restricted type A or restricted type B. Restricted Type B might not be fully supported. Maps to prachSequenceType in UlCellSetupRequest message."
                },
                "short_format_ecpri_stream_split_algorithm": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ShortFormatEcpriStreamSplitAlgorithm"
                        }
                    ],
                    "description": "Method of splitting packets for PRACH short format. For SingleRepetition there's single SymbolEvent per repetition, for AllRepetitions all repetitions in occasions are put into one SymbolEvent."
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "zero_correlation_zone_config": {
                    "description": "Used to specify cyclic shift intervals to generate 64 PRACH sequences from a single base sequence. Maps to prachZeroCorrelationZoneConfig in UlCellSetupRequest message. Maps to NcsConfigIdx in 5GMax.",
                    "maximum": 15,
                    "minimum": 0,
                    "title": "Zero Correlation Zone Config",
                    "type": "integer"
                }
            },
            "required": [
                "config_index",
                "zero_correlation_zone_config",
                "false_alarm_target_prob_id",
                "prb_offset",
                "adjust_threshold_offset_db",
                "numerology",
                "first_root_sequence_index",
                "prb_occasion_indices",
                "timing_advance",
                "sequence_type",
                "dynamic_scaling",
                "detector_type",
                "max_coherent_combining_len",
                "correlated_antenna_processing",
                "gain_correction",
                "n_random_access_preambles",
                "oran_prach_numerology",
                "dft_type_long_format",
                "dft_type_short_format",
                "dtx_threshold_selection",
                "short_format_ecpri_stream_split_algorithm",
                "high_snr_mitigation",
                "cell_extension",
                "ce_axc_indices",
                "pattern_id",
                "ecpri_section_id",
                "add_external_delay_compensation",
                "act_prach_no_preamble_noise_power_est",
                "override_timing_for_conformance_test"
            ],
            "title": "NrCellPrach",
            "type": "object"
        },
        "NrCellPucch": {
            "additionalProperties": false,
            "description": "Cell configuration for PUCCH. Null if cell is not configured for PUCCH.",
            "properties": {
                "act_pucch_f3_method_dtx": {
                    "description": "Feature flag for enabling CB010764-A PUCCH F3 DTX Decoding Based Method.",
                    "title": "Act Pucch F3 Method Dtx",
                    "type": "boolean"
                },
                "aggregate": {
                    "$ref": "#/$defs/Aggregate"
                },
                "dynamic_scaling": {
                    "$ref": "#/$defs/DynamicScalingChannel"
                },
                "equalizer": {
                    "$ref": "#/$defs/Equalizer"
                },
                "frequency_offset_value": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/FrequencyOffsetValue"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "hopping_id": {
                    "description": "PUCCH hopping id. Maps to pucchHoppingId in UlCellSetupRequest and HoppingId in 5GMAX.",
                    "maximum": 1007,
                    "minimum": 0,
                    "title": "Hopping Id",
                    "type": "integer"
                },
                "static_long_pucch_config_ecpri": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StaticLongPucchConfigEcpri"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "hopping_id",
                "frequency_offset_value",
                "timing_advance",
                "static_long_pucch_config_ecpri",
                "aggregate",
                "dynamic_scaling",
                "equalizer",
                "act_pucch_f3_method_dtx"
            ],
            "title": "NrCellPucch",
            "type": "object"
        },
        "NrCellPusch": {
            "additionalProperties": false,
            "description": "PUSCH channel parameters for a single cell. This field should be set to null if PUSCH channel is disabled",
            "properties": {
                "act_pusch_acsi_part2_thr_adj": {
                    "description": "Feature flag for CB010764-C, mapping to actPuschACSIPart2ThrAdj in UlCell_SetupReq message",
                    "title": "Act Pusch Acsi Part2 Thr Adj",
                    "type": "boolean"
                },
                "aggregate": {
                    "$ref": "#/$defs/Aggregate"
                },
                "antennawise_foc": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Antenna wise frequency offset compensation flag. 5G20B afterwards and new receiver only. True - antenna specific FOC, False - antenna combined FOC, i.e the FOE are same for all Rx antenna, null - do not set (use 5gmax default value)",
                    "title": "Antennawise Foc"
                },
                "dynamic_scaling": {
                    "$ref": "#/$defs/DynamicScalingChannel"
                },
                "frequency_offset_value": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/FrequencyOffsetValue"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "post_su_sinr": {
                    "description": "Activation flag to indicate 5G-L1-UL if postSuSinr computation is needed for MU-MIMO. If it is True, one additional measurement (suPostCombSinr in 5G_L1_IF_200) is conducted. If it is False, then L1 doesn't activate the additional computation and L2 shall use legacy MU-MIMO SINR result.",
                    "title": "Post Su Sinr",
                    "type": "boolean"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "timing_delay": {
                    "$ref": "#/$defs/TimingDelay"
                }
            },
            "required": [
                "antennawise_foc",
                "timing_advance",
                "timing_delay",
                "aggregate",
                "dynamic_scaling",
                "frequency_offset_value",
                "post_su_sinr",
                "act_pusch_acsi_part2_thr_adj"
            ],
            "title": "NrCellPusch",
            "type": "object"
        },
        "NrCellRim": {
            "additionalProperties": false,
            "properties": {
                "rim_messages": {
                    "items": {
                        "$ref": "#/$defs/Rim"
                    },
                    "title": "Rim Messages",
                    "type": "array"
                },
                "rim_rs_send": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RimRsSend"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "rim_messages",
                "rim_rs_send"
            ],
            "title": "NrCellRim",
            "type": "object"
        },
        "NrCellSrs": {
            "additionalProperties": false,
            "description": "SRS parameters for a single cell",
            "properties": {
                "aggregate": {
                    "$ref": "#/$defs/Aggregate"
                },
                "broken_antenna_bitmask": {
                    "description": "Bitmask indicating broken antennas: 0 - broken, 1 - working. Maps to brokenAntBitmask in SrsReceiveReq and Ecpri.SrsAntM ask in 5GMAX after modification.",
                    "title": "Broken Antenna Bitmask",
                    "type": "integer"
                },
                "dynamic_scaling": {
                    "$ref": "#/$defs/DynamicScalingChannel"
                },
                "gain_correction_ndm": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Gain correction for ndm-SRS channels. For eCPRI, the value is divided by 10 as the rounding step in 5GMax is 0.1dB. Maps to gainCorrectionForNdmSrs in  message. Maps to GainCorrectionNdmSrs in 5GMax. Value of null means 5gmax calculates the correct value to use, otherwise the value from json is used.",
                    "title": "Gain Correction Ndm"
                },
                "periodic_srs_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PeriodicSrsConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "power_threshold_ru_7_2e": {
                    "description": "FH SRS BM Power Threshold. Maps to FhSrsBmReceiveReq.srsPowerThreshold.",
                    "maximum": 0,
                    "minimum": -1500,
                    "title": "Power Threshold Ru 7 2E",
                    "type": "integer"
                },
                "sequence_id": {
                    "description": "Sequence identity - parameter n_SRS_ID from 3GPP 38.211 6.4.1.4.2. It is used to calculate the SRS sequence - used to generate sequence groups. Maps to sequenceId in CellSetupReq and to SrsSequenceId in 5GMAX",
                    "maximum": 1007,
                    "minimum": 0,
                    "title": "Sequence Id",
                    "type": "integer"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "timing_delay": {
                    "$ref": "#/$defs/TimingDelay"
                },
                "transmission_comb": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TransmissionComb"
                        }
                    ],
                    "description": "Transmission comb. Maps to CombNum in 5GMAX. Introduced by B008322-SR-D feature for Loki NR Cells."
                }
            },
            "required": [
                "timing_advance",
                "timing_delay",
                "dynamic_scaling",
                "periodic_srs_config",
                "aggregate",
                "transmission_comb",
                "sequence_id",
                "gain_correction_ndm",
                "broken_antenna_bitmask",
                "power_threshold_ru_7_2e"
            ],
            "title": "NrCellSrs",
            "type": "object"
        },
        "NrCellUplink": {
            "additionalProperties": false,
            "description": "Single cell's uplink-specific configuration",
            "properties": {
                "act_adaptive_retx_res_mcs_enh": {
                    "description": "Indicates whether adaptive ReTx is used with UL MU MIMO. Maps to actAdaptiveReTxResMcsEnh in UlCellSetupRequest message.",
                    "title": "Act Adaptive Retx Res Mcs Enh",
                    "type": "boolean"
                },
                "act_oran_step_1": {
                    "description": "Activation flag for step 1 of ORAN profile support 5G-L1-UL used in UlCellSetupReq. This field is not connected to 5gmax.",
                    "title": "Act Oran Step 1",
                    "type": "boolean"
                },
                "act_ul_mimo": {
                    "description": "Indicates whether UL MU MIMO is enabled or not. Maps to actUlMuMimo in UlCellSetupRequest message.",
                    "title": "Act Ul Mimo",
                    "type": "boolean"
                },
                "activate_ul_ecpri_extension_type12": {
                    "description": "Activation flag of feature CB007731 for FR1 TDD UL eCPRI section extension type 12. Maps to UlCellSetupReq.actUlEcpriExtType12",
                    "title": "Activate Ul Ecpri Extension Type12",
                    "type": "boolean"
                },
                "activate_ul_prb_muting": {
                    "description": "Feature flag for UL Uplane muting. Maps to UlCellSetupReq.actUlPrbMuting",
                    "title": "Activate Ul Prb Muting",
                    "type": "boolean"
                },
                "antenna_data_file_paths": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "maxItems": 64,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Paths to files containing antenna data for single cell. Used in XRT analysis mode.",
                    "title": "Antenna Data File Paths"
                },
                "attenuation": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        }
                    ],
                    "description": "Attenuation in dB before antenna connector: either scalar or array with number of rx antennas elements. Maps to RX.Attenuation in 5GMax",
                    "title": "Attenuation"
                },
                "axc_position": {
                    "$ref": "#/$defs/AxcPosition"
                },
                "broken_antennas": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "boolean"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Array to indicate indexes of antennas that should be treated as broken if set to True (Zero-IQ). Length should match number of RX antennas. Effectively configures respective antenna attenuation to infinity and decreases noise power.",
                    "title": "Broken Antennas"
                },
                "ce_axc_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIds"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maps to ceAxCId of UlCellSetupRequest, length must match with number_of_rx_antennas * 2 up to UL_CELL_SETUP_MAX_NUM_C_EAXC_PER_SUBCELL. First number_of_rx_antennas axc ids are for PUXCH, the remaining are for PRACH."
                },
                "cell_slot_length": {
                    "anyOf": [
                        {
                            "maximum": 192,
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Length of the cell's slot. Use null if you want to disable this feature. Maps to CellSlotLength in UlCellSetupRequest.",
                    "title": "Cell Slot Length"
                },
                "conformance_testing": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ConformanceTesting"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Set of parameters related to configuring Test Equipment for UL conformance tests. If configured, UlCellSetupReq.digitalOutputEnabled will be set to true."
                },
                "downsampling": {
                    "description": "Indicates if downsampling is enabled or not. Maps to ulActDownSampling in UlCellSetupRequest. Maps to Downsampling in 5GMax.",
                    "title": "Downsampling",
                    "type": "boolean"
                },
                "dss": {
                    "description": "Dynamic Spectrum Sharing. It allows LTE and 5G to operate in the same band at the same time. 5G_RAN_UP_21740. Maps to frequencyShift7pt5khz in UlCellSetupRequest message.",
                    "title": "Dss",
                    "type": "boolean"
                },
                "dynamic_scaling": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DynamicScaling"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "first_cell_slot_id": {
                    "anyOf": [
                        {
                            "maximum": 191,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "ID of the first cell's slot. Use null if you want to disable this feature. Maps to FirstCellSlotId in UlCellSetupRequest.",
                    "title": "First Cell Slot Id"
                },
                "foc_delay": {
                    "description": "This field is responsible for number of shortTermCfo use to average longTermCfo. The delay of frequency offset compensation. Unit is TTI. Maps to FocDelay in 5GMax.",
                    "maximum": 20,
                    "minimum": 0,
                    "title": "Foc Delay",
                    "type": "integer"
                },
                "foc_method": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/FocMethod"
                        }
                    ],
                    "description": "This field is responsible for choosing frequency offset compensation method in simulation (choosing domain). Maps to FocMethod in 5GMax."
                },
                "foe_delay": {
                    "description": "This field is responsible for number of shortTermCfo use to average longTermCfo. The delay of frequency offset estimation. Unit is TTI. Maps to FoeDelay in 5GMax.",
                    "maximum": 20,
                    "minimum": 0,
                    "title": "Foe Delay",
                    "type": "integer"
                },
                "gain_correction": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Gain correction for non-PRACH channels. For eCPRI, the value is divided by 10 as the rounding step in 5GMax is 0.1dB. Maps to gainCorrection in  message. Maps to GainCorrection in 5GMax. Value of null means 5gmax calculates the correct value to use, otherwise the value from json is used.",
                    "title": "Gain Correction"
                },
                "invalid_measure_enable": {
                    "$ref": "#/$defs/InvalidMeasureEnable"
                },
                "iq_comp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/IqComp"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "is_high_load": {
                    "description": "Indication of low/high load, for TDD FR1/FR2 Ul response delay check.",
                    "title": "Is High Load",
                    "type": "boolean"
                },
                "is_high_speed_cell": {
                    "description": "Parameter for activation of the active high-speed train mode. Maps to `actHighSpeedCell` in `UlCellSetupRequest`. Maps to `FdFocOpt` in 5GMax.",
                    "title": "Is High Speed Cell",
                    "type": "boolean"
                },
                "is_primary_cell": {
                    "description": "Indicates whether subcell capacity is primary or not. All channels can be scheduled for primary cell, only PUSCH can be scheduled for secondary cell. Maps to ulSubCellCaps in UlCellSetupRequest message.",
                    "title": "Is Primary Cell",
                    "type": "boolean"
                },
                "local_cell_resource_id": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Local cell resource identity used to get eAxc stream config info. Maps to localCellResId in UlCellSetupRequest.",
                    "title": "Local Cell Resource Id"
                },
                "logical_resource_ids": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LogicalResourceIdsModel"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maps to numOfLogicalResourceIds, length must match with number of numCeAxCId and numOfLogicalResourceIds."
                },
                "ndm": {
                    "description": "NDM (Non-Delay Managed) information. If empty, maps to 'ParUnit{1}.DigitalBeamformingRimRs.NdmProcEna = 0'.",
                    "items": {
                        "$ref": "#/$defs/NdmItem"
                    },
                    "title": "Ndm",
                    "type": "array"
                },
                "number_of_rx_antennas": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfRxAntennas1"
                        }
                    ],
                    "description": "Number of antennas. Maps to numCeAxCId in UlCellSetupRequest message.in 7_2e multi-channel, each channel has its own number of streams except pusch in cell.uplink.radio_unit."
                },
                "pool_id": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PoolId"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "prb_blanking": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PrbBlanking"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "PRB blanking configuration."
                },
                "pucch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellPucch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "radio_unit": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/UplinkCellRadioUnit"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Radio Unit configuration."
                },
                "receiver_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ReceiverType"
                        }
                    ],
                    "description": "Receiver type. If set to value other than null will force 5GMax to use given receiver type. Applies to all uplink channels. Maps to Equalizer in 5GMax."
                },
                "rim": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellRim"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "rx_scaling_factor": {
                    "$ref": "#/$defs/RxScalingFactor"
                },
                "srs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrCellSrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "subcell_id": {
                    "$ref": "#/$defs/SubcellIdModel"
                },
                "subpool_id": {
                    "description": "Subpool ID used in cell slot model. Maps to l1SubpoolId in UlCellSetupRequest.",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Subpool Id",
                    "type": "integer"
                },
                "ul_dl_data_slot_ratio": {
                    "$ref": "#/$defs/UlDlDataSlotRatio"
                },
                "ul_ecpri_fd_beamforming": {
                    "description": "Enable UL Ecpri FD beamforming feature. Maps to UlCellSetupReq.ulEcpriFdBeamforming",
                    "title": "Ul Ecpri Fd Beamforming",
                    "type": "boolean"
                },
                "ul_ri_selection_threshold": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/UlRiSelectionThreshold"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "virtual_bts": {
                    "description": "Aggressor cells for RI",
                    "items": {
                        "$ref": "#/$defs/VirtualBts"
                    },
                    "title": "Virtual Bts",
                    "type": "array"
                }
            },
            "required": [
                "prach",
                "pusch",
                "pucch",
                "srs",
                "rim",
                "ndm",
                "virtual_bts",
                "pool_id",
                "subcell_id",
                "rx_scaling_factor",
                "number_of_rx_antennas",
                "axc_position",
                "dss",
                "antenna_data_file_paths",
                "foe_delay",
                "foc_delay",
                "foc_method",
                "dynamic_scaling",
                "receiver_type",
                "attenuation",
                "broken_antennas",
                "gain_correction",
                "act_oran_step_1",
                "downsampling",
                "ce_axc_ids",
                "logical_resource_ids",
                "local_cell_resource_id",
                "ul_dl_data_slot_ratio",
                "subpool_id",
                "first_cell_slot_id",
                "cell_slot_length",
                "conformance_testing",
                "ul_ecpri_fd_beamforming",
                "activate_ul_ecpri_extension_type12",
                "activate_ul_prb_muting",
                "is_high_speed_cell",
                "is_high_load",
                "act_ul_mimo",
                "act_adaptive_retx_res_mcs_enh",
                "is_primary_cell",
                "invalid_measure_enable",
                "iq_comp",
                "radio_unit",
                "ul_ri_selection_threshold",
                "prb_blanking"
            ],
            "title": "NrCellUplink",
            "type": "object"
        },
        "NrCpriDialectIndication": {
            "description": "CPRI dialect indication. Maps to [Ul|Dl]Cell_SetupReq.cpriDialectIndication in messages. Also in ParUnit,\nmaps to Architecture.FrontHaul for UL, and to TX.AntIf.RfHeadRoom for DL.",
            "enum": [
                "CPRI_N",
                "CPRI_A",
                "ECPRI7-2a",
                "ECPRI7-2b",
                "ECPRI7-2e"
            ],
            "title": "NrCpriDialectIndication",
            "type": "string"
        },
        "NrDlNumberOfAntennas": {
            "description": "Number of antennas",
            "enum": [
                1,
                2,
                4
            ],
            "title": "NrDlNumberOfAntennas",
            "type": "integer"
        },
        "NrMimoMode": {
            "description": "Indicates downlink mimo mode",
            "enum": [
                "SAT_1x1_MIMO",
                "CL_2x2_MIMO",
                "CL_4x4_or_4x2_MIMO",
                "CL_8x4_MIMO",
                "OL_2x2_MIMO",
                "OL_4x4_or_4x2_MIMO"
            ],
            "title": "NrMimoMode",
            "type": "string"
        },
        "NrRachStatus": {
            "description": "L1 can use this information to decide when messages should be traced",
            "enum": [
                "OTHER",
                "MSG2",
                "MSG3",
                "MSG4",
                "MSG5"
            ],
            "title": "NrRachStatus",
            "type": "string"
        },
        "NrUser": {
            "additionalProperties": false,
            "description": "Definition of a NR User Equipment instance",
            "properties": {
                "architecture": {
                    "$ref": "#/$defs/Architecture"
                },
                "downlink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrUserDownlink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "frequency_offset": {
                    "anyOf": [
                        {
                            "description": "Frequency offset for MS type 'Fix', maps to FreqOffset.Offset in ParUnit",
                            "type": "number"
                        },
                        {
                            "$ref": "#/$defs/FrequencyOffset"
                        }
                    ],
                    "description": "UE's frequency offset",
                    "title": "Frequency Offset"
                },
                "rnti": {
                    "$ref": "#/$defs/Rnti"
                },
                "snr": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/$defs/SnrItem"
                        }
                    ],
                    "description": "Signal to noise ratio for user's transmissions [dB]: either scalar or matrix with size tx_antennas x rx_antennas",
                    "title": "Snr"
                },
                "standard": {
                    "const": "NR",
                    "title": "Standard"
                },
                "time_offset": {
                    "description": "UE's time offset [us]",
                    "title": "Time Offset",
                    "type": "number"
                },
                "uplink": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrUserUplink"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "velocity": {
                    "description": "UE's velocity [km/h]",
                    "title": "Velocity",
                    "type": "number"
                }
            },
            "required": [
                "rnti",
                "frequency_offset",
                "snr",
                "time_offset",
                "velocity",
                "uplink",
                "downlink",
                "standard",
                "architecture"
            ],
            "title": "NrUser",
            "type": "object"
        },
        "NrUserDownlink": {
            "additionalProperties": false,
            "description": "Single user's downlink-specific configuration",
            "properties": {
                "pdcch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Pdcch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pdsch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/UserPdsch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "subcell_id": {
                    "$ref": "#/$defs/SubcellIdModel"
                }
            },
            "required": [
                "subcell_id",
                "pdcch",
                "pdsch"
            ],
            "title": "NrUserDownlink",
            "type": "object"
        },
        "NrUserNumberOfAntennas": {
            "description": "Number of UE antennas. Currently the number of SRS ports is set to the same value.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "NrUserNumberOfAntennas",
            "type": "integer"
        },
        "NrUserPrach": {
            "additionalProperties": false,
            "description": "PRACH parameters for a single user",
            "properties": {
                "prb_occasion_index": {
                    "$ref": "#/$defs/PrbOccasionIndex"
                },
                "preamble_index": {
                    "description": "PRACH preamble index. Maps to TxSignatureId in 5GMax.",
                    "maximum": 63,
                    "minimum": 0,
                    "title": "Preamble Index",
                    "type": "integer"
                },
                "time_occasion_index": {
                    "description": "PRACH time occasion index. Maps to OccasionIndexInSlot in 5GMax.",
                    "maximum": 6,
                    "minimum": 0,
                    "title": "Time Occasion Index",
                    "type": "integer"
                }
            },
            "required": [
                "prb_occasion_index",
                "preamble_index",
                "time_occasion_index"
            ],
            "title": "NrUserPrach",
            "type": "object"
        },
        "NrUserPucch": {
            "additionalProperties": false,
            "description": "PUCCH parameters for a single user.",
            "properties": {
                "additional_dmrs": {
                    "description": "Flag to configure DMRS symbols for PUCCH format 3/4. Maps to UlData_PucchReceiveReq.subcells.pucchResources.additionalDmrs in messages and to ParCell.MAC.ULMAP.PUCCH.AdditionalDmrs in 5gmax.",
                    "title": "Additional Dmrs",
                    "type": "boolean"
                },
                "alloc_slot": {
                    "$ref": "#/$defs/AllocSlot"
                },
                "carrier_aggregation_enable": {
                    "description": "Enables Carrier Aggregation for user.",
                    "title": "Carrier Aggregation Enable",
                    "type": "boolean"
                },
                "code_rate_index": {
                    "description": "Index specifying which code rate should be used. If (-1) is chosen, 5GMax makes the choice. Maps to CodeRateIndex in 5GMax.",
                    "maximum": 6,
                    "minimum": -1,
                    "title": "Code Rate Index",
                    "type": "integer"
                },
                "csi_size": {
                    "description": "Number of CSI bits as UCI payload. Maps to CsiSize in 5GMax. For format 0 should be set to 0.",
                    "maximum": 1706,
                    "minimum": 0,
                    "title": "Csi Size",
                    "type": "integer"
                },
                "dmrs_sequence_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DmrsSequenceType"
                        }
                    ],
                    "description": "DMRS sequence type. Maps to dmrsSequenceType in UlData_PucchReceiveReq message. Maps to PUCCH.DmrsUlTP in 5GMax."
                },
                "foe_gap_largest": {
                    "description": "Value is used to calculate a maximum angle value to limit FOE measurements. for Thor, it should be 0.if foe_gap_largest is set in both PUSCH and PUCCH in the same RNTI,the value will be used from PUSCH field",
                    "maximum": 14,
                    "minimum": 0,
                    "title": "Foe Gap Largest",
                    "type": "integer"
                },
                "format": {
                    "$ref": "#/$defs/Format1"
                },
                "l2_ctxt_an_mgt": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "integer"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Translates to UlData_PucchReceiveReq.l2CtxtAnMgt. If it is not set to null, then UlDataPucchReceiveRespHardD::l2CtxtAnMgmt will be compared with the value of this field. This content is private to 5G-L2-PS, and 5G-L1-UL just copy it from the request message and send back to 5G-L2-PS. Maps to l2CtxtAnMgt in PucchReceiveReq message.",
                    "title": "L2 Ctxt An Mgt"
                },
                "modulation": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Modulation3"
                        }
                    ],
                    "description": "Modulation type. Used only for PUCCH format 3 (has to be set to non-null value). Maps to PUCCHF3F4pi2BPSK in 5GMax and to modulationType in UlDataPucchReceiveReq message."
                },
                "number_of_harq_ack_bits": {
                    "description": "The length (in bits) of the HARQ ACK. Maps to nANPucch in PucchReceiveReq and to HarqAckSize in 5GMAX.",
                    "maximum": 50,
                    "minimum": 0,
                    "title": "Number Of Harq Ack Bits",
                    "type": "integer"
                },
                "one_probability": {
                    "description": "Probability for generating a '1' bit for binary generator. Maps to ParCell.MAC.ULMAP.DataSource.OneProbability in 5gmax.",
                    "maximum": 1.0,
                    "minimum": 0.0,
                    "title": "One Probability",
                    "type": "number"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize4"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for transmission in PUCCH grant. Maps to PucchReceiveReqPucchResource.patternId. Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive."
                },
                "resources": {
                    "description": "For format 1 multiplexing HARQ-ACK and SR, two resources need to be configured. The first one is for HARQ-ACK and the second one is for SR. For other cases, only one resource is needed.",
                    "items": {
                        "$ref": "#/$defs/Resource"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Resources",
                    "type": "array"
                },
                "sr_bit_detection": {
                    "description": "Determines if the Scheduling Request bit should be detected. 0 means False, 1 means True, 2 means Invalid - maps to SrBitDetection in PucchReceiveReq. Indirectly maps to SrSize in 5GMAX.",
                    "maximum": 2,
                    "minimum": 0,
                    "title": "Sr Bit Detection",
                    "type": "integer"
                },
                "tx_source_pattern": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/AllocatedSubframe"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The predefined binary data sequence for controlling transmission probability. Maps to TxEnabledSource.Pattern in 5GMax.",
                    "title": "Tx Source Pattern"
                }
            },
            "required": [
                "format",
                "number_of_harq_ack_bits",
                "sr_bit_detection",
                "csi_size",
                "resources",
                "tx_source_pattern",
                "code_rate_index",
                "alloc_slot",
                "modulation",
                "dmrs_sequence_type",
                "l2_ctxt_an_mgt",
                "additional_dmrs",
                "one_probability",
                "pattern_id",
                "carrier_aggregation_enable",
                "foe_gap_largest"
            ],
            "title": "NrUserPucch",
            "type": "object"
        },
        "NrUserPusch": {
            "additionalProperties": false,
            "description": "PUSCH parameters for a single user",
            "properties": {
                "ack_data_source": {
                    "description": "The predefined binary data sequence for PUSCH Ack/Nack symbols. Maps to AckDataSource in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "title": "Ack Data Source",
                    "type": "array"
                },
                "ack_tx_source": {
                    "description": "Predefined pattern of PUSCH TxEnabled data source for HARQ-ACK connection. Maps to AckTxSource in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "title": "Ack Tx Source",
                    "type": "array"
                },
                "bler_target": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/BlerTarget"
                        }
                    ],
                    "description": "UL data BLER target value, used for selection of valid pneRbThresholds set. Maps to blerTarget in PuschReceiveReqGrant message. Maps to TargetBLER in 5GMAX."
                },
                "codebook_index": {
                    "description": "Indicates codebook index in the respective table in 38.211 \u00a76.3.1.5 used for spatial multiplexing. Maps to codebookIndex in PuschReceiveReqGrant and CodebookIdx in 5Gmax",
                    "maximum": 5,
                    "minimum": 0,
                    "title": "Codebook Index",
                    "type": "integer"
                },
                "csi_reports": {
                    "description": "Array of CSI reports. Its length maps to NumReports in 5GMAX and its contents to csiReportStruct in PuschReceiveReq.",
                    "items": {
                        "$ref": "#/$defs/PuschCsiReport"
                    },
                    "maxItems": 3,
                    "minItems": 0,
                    "title": "Csi Reports",
                    "type": "array"
                },
                "csi_tx_source": {
                    "description": "Predefined pattern of PUSCH TxEnabled data source for CSI connection. Maps to CsiTxSource in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "title": "Csi Tx Source",
                    "type": "array"
                },
                "dmrs": {
                    "$ref": "#/$defs/PuschDmrs"
                },
                "ecpri_config_struct": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschEcpri"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ecpri_fcp_section_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschEcpriFcpSectionConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ecpri_section_id": {
                    "description": "Ecpri section id. Maps to PuschReceiveReq.subcells[].grants[].eCpriSectionId",
                    "maximum": 4095,
                    "minimum": 0,
                    "title": "Ecpri Section Id",
                    "type": "integer"
                },
                "foe_gap_largest": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/FoeGapLargest"
                        }
                    ],
                    "description": "Value is used to calculate a maximum angle value to limit FOE measurements, to enable trx auto generation set 'auto', others, using int 0~14. for Thor, it should be 0."
                },
                "harq": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschHarq"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "is_fake_user": {
                    "description": "Fake UE indicator. True means a fake ue. False means regular ue. A fake UE is a dummy grant that shall be used for measuring RSSI and noise (thermal noise and interference) over non-scheduled PRBs.",
                    "title": "Is Fake User",
                    "type": "boolean"
                },
                "is_uci_only": {
                    "description": "Information whether UCI without data is carried on PUSCH. Refer to 5G_RAN_UP_19466 and 5G_RAN_UP_9358. Maps to uciOnly in PuschReceiveReq and UlSchIndicator in 5GMAX.",
                    "title": "Is Uci Only",
                    "type": "boolean"
                },
                "l2_ctxt_an_mgt": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "integer"
                            },
                            "maxItems": 8,
                            "minItems": 8,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Translates to UlData_PuschReceiveReq.l2CtxtAnMgt. If it is not set to null, then UlDataPuschReceiveRespHardD::l2CtxtAnMgmt will be compared with the value of this field. This content is private to 5G-L2-PS, and 5G-L1-UL just copy it from the request message and send back to 5G-L2-PS. Maps to l2CtxtAnMgt in PuschReceiveReqGrant message.",
                    "title": "L2 Ctxt An Mgt"
                },
                "lift_size_column_index": {
                    "description": "Column index of the table 5.3.2-1: Sets of LDPC lifting size Z (38.212 \u00a75.3.2). Maps to liftSizeColumnIndex in PuschReceiveReqGrant message.",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Lift Size Column Index",
                    "type": "integer"
                },
                "lift_size_set_index": {
                    "description": "Lift size set index iLS (see 38.212 \u00a75.3.2 table 5.3.2-1). Maps to liftSizeSetIndex in PuschReceiveReqGrant message.",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Lift Size Set Index",
                    "type": "integer"
                },
                "long_term_cfo": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ComplexNumberType"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Allows to pass complex value of longTermCfoMetric to 5GMAX. Maps to FreqOffInitMac({connection_index}).FoeClt in 5GMAX. CFO stands for Carrier Frequency Offset. The input value is list of 2 floats [real, imaginary] (Example [0.00, 0.00]). Its size must match number_of_rx_antennas setting.",
                    "title": "Long Term Cfo"
                },
                "mcs_offset_index_csi1": {
                    "description": "Control information MCS offset index for CSI part 1 (see 38.213, 9.3). Maps to McsOffsetIndexCsi1 in 5GMax. Note that values from 19 to 31 are reserved.",
                    "maximum": 31,
                    "minimum": 0,
                    "title": "Mcs Offset Index Csi1",
                    "type": "integer"
                },
                "mcs_offset_index_csi2_more_than_11_bits": {
                    "description": "Control information MCS offset index for CSI part 2 for more than 11 CSI part 2 bits (see 38.213, 9.3). Maps to the second element of McsOffsetIndexCsi2 in 5GMAX. Note that values of 19 to 31 are reserved .",
                    "maximum": 31,
                    "minimum": 0,
                    "title": "Mcs Offset Index Csi2 More Than 11 Bits",
                    "type": "integer"
                },
                "mcs_offset_index_csi2_up_to_11_bits": {
                    "description": "Control information MCS offset index for CSI part 2 for up to 11 CSI part 2 bits (see 38.213, 9.3). Maps to the first element of McsOffsetIndexCsi2 in 5GMAX. Note that values of 19 to 31 are reserved .",
                    "maximum": 31,
                    "minimum": 0,
                    "title": "Mcs Offset Index Csi2 Up To 11 Bits",
                    "type": "integer"
                },
                "mcs_offset_index_harq_ack": {
                    "description": "Control information MCS offset index for Harq-Ack (see 38.213, 9.3). Maps to McsOffsetIndexHarqAck in 5GMax. Note that values from 16 to 31 are reserved.",
                    "maximum": 31,
                    "minimum": 0,
                    "title": "Mcs Offset Index Harq Ack",
                    "type": "integer"
                },
                "modulation": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Modulation2"
                        }
                    ],
                    "description": "Modulation configuration. Reference: 3GPP 38.214 6.1.4.1. Maps to modulationOrder in PuschReceiveReqGrant message. Maps to ModulationOrder in 5GMax."
                },
                "number_of_layers": {
                    "description": "Number of layers maps to numOfLayers in PuschReceiveReqGrant and to NumLayers in dump.",
                    "maximum": 2,
                    "minimum": 1,
                    "title": "Number Of Layers",
                    "type": "integer"
                },
                "paired_ue": {
                    "anyOf": [
                        {
                            "maximum": 65535,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Specify the rnti of each paired UE in the same subcell, null is no pairing. Maps to pairedUe in UlDataPuschReceiveReq message. Maps to ParUnit{}.MuPairing.PairedUsers in 5GMAX.",
                    "title": "Paired Ue"
                },
                "ptrs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschPtrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch_transmission_coherence": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschTransmissionCoherence"
                        }
                    ],
                    "description": "PUSCH transmission coherence. Used to determine the codebook for computation of the metrics MECG (Maximal Effective Channel Gain) and SLP (Sum Layer Power). Maps to puschTransCoherence in PuschReceiveReq and to PuschTransCoherence in 5GMAX"
                },
                "slots_allocation": {
                    "$ref": "#/$defs/SlotsAllocationModel"
                },
                "transform_precoder": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschTransformPrecoder"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates if transform precoder is enabled or not. Maps to puschTransformPrecoderFlag in UlDataPuschReceiveReq message. Maps to TransformPrecodingEnable in 5GMAX."
                },
                "uci_csi_part_1_bits": {
                    "description": "CSI bits (part 1) in UCI report. Maps to Csi1DataSource.Pattern in 5GMAX.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 50,
                    "minItems": 1,
                    "title": "Uci Csi Part 1 Bits",
                    "type": "array"
                },
                "uci_on_pusch_scale": {
                    "$ref": "#/$defs/UciOnPuschScale"
                }
            },
            "required": [
                "modulation",
                "number_of_layers",
                "lift_size_column_index",
                "lift_size_set_index",
                "ecpri_config_struct",
                "ptrs",
                "harq",
                "codebook_index",
                "slots_allocation",
                "pusch_transmission_coherence",
                "uci_csi_part_1_bits",
                "uci_on_pusch_scale",
                "is_uci_only",
                "mcs_offset_index_csi2_up_to_11_bits",
                "mcs_offset_index_csi2_more_than_11_bits",
                "csi_reports",
                "mcs_offset_index_harq_ack",
                "mcs_offset_index_csi1",
                "ack_tx_source",
                "ack_data_source",
                "csi_tx_source",
                "l2_ctxt_an_mgt",
                "dmrs",
                "transform_precoder",
                "ecpri_section_id",
                "paired_ue",
                "ecpri_fcp_section_config",
                "long_term_cfo",
                "bler_target",
                "is_fake_user",
                "foe_gap_largest"
            ],
            "title": "NrUserPusch",
            "type": "object"
        },
        "NrUserSrs": {
            "additionalProperties": false,
            "description": "SRS parameters for a single user",
            "properties": {
                "alloc_slot": {
                    "$ref": "#/$defs/AllocSlot"
                },
                "bandwidth_config": {
                    "description": "Bandwidth configuration equivalent to C-SRS parameter from 3GPP 38.211 Table 6.4.1.4.3-1. Maps to srsBandwidthConfig in SRSReceiveReq and to BandwidthConfig in 5GMAX",
                    "maximum": 63,
                    "minimum": 0,
                    "title": "Bandwidth Config",
                    "type": "integer"
                },
                "beam_management": {
                    "description": "Beam Management. If false, srsBmEnable in SrsReceiveReq is disabled. Map to ResConfigType in 5GMAX",
                    "title": "Beam Management",
                    "type": "boolean"
                },
                "beamforming_weight_vector": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SrsBeamformingWeightVector"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cyclic_shift": {
                    "description": "The base sequence is cyclic shifted by the value of this parameter to increase the total number of available sequences. Maps to cyclicShift in SRSReceiveReq and to CyclicShiftIndex in 5GMAX",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Cyclic Shift",
                    "type": "integer"
                },
                "ecpri_section_id": {
                    "description": "ECPRI section id. Maps to SrsReceiveReq.subcells[].SrsSuMinoStruct.srsReceiveReqUes[].eCpriSectionId",
                    "maximum": 4095,
                    "minimum": 0,
                    "title": "Ecpri Section Id",
                    "type": "integer"
                },
                "frequency_domain_position": {
                    "description": "Frequency domain position of the signal - parameter n_RRC from 3GPP 38.211 6.4.1.4.3. Maps to freqDomainPosition in SRSReceiveReq and to FreqDomainPos in 5GMAX",
                    "maximum": 67,
                    "minimum": 0,
                    "title": "Frequency Domain Position",
                    "type": "integer"
                },
                "frequency_domain_shift": {
                    "description": "Shift of the SRS allocation in the frequency domain with respect to the reference point grid - parameter n_shift from 3GPP 38.211 6.4.1.4.3. Maps to freqDomainShift in SRSReceiveReq and to SrsPrbAdjust in 5GMAX",
                    "maximum": 268,
                    "minimum": 0,
                    "title": "Frequency Domain Shift",
                    "type": "integer"
                },
                "mimo": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SrsMimo"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "num_scheduled_symbols": {
                    "description": "Number of scheduled SRS symbols for this UE. Default value: 1. Maps to: ParCell{1}.MAC.ULMAP{ULMAPIdx}.SRSSymbNum.",
                    "maximum": 2,
                    "minimum": 1,
                    "title": "Num Scheduled Symbols",
                    "type": "integer"
                },
                "occasion_delay": {
                    "description": "Specific delay value for transmission of Raw SRS U-Plane data for periodic SRS pattern. Currently used only for Vran",
                    "maximum": 140,
                    "minimum": 0,
                    "title": "Occasion Delay",
                    "type": "integer"
                },
                "pattern_id": {
                    "description": "Beam patternId to be used for SRS reception and the eCPRI control message generation. Each patternId is used with two consecutive ceAxcIndex. In case of pSRS, it indicates the beam(s) ID(s) within the combined beamset in L1 (refined and/or PMI beams). Maps to patternId in SrsReceiveReq (SrsSuMimoStruct) message. Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive.",
                    "items": {
                        "$ref": "#/$defs/PatternIdItem"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Pattern Id",
                    "type": "array"
                },
                "resource_identity": {
                    "description": "SRS resource identity. Maps to SrsReceiveRespBmPs.srsRespBmPsSubbands[].data[].srsResourceIdentity",
                    "maximum": 4,
                    "minimum": 0,
                    "title": "Resource Identity",
                    "type": "integer"
                },
                "sequence_id": {
                    "description": "Sequence identity - parameter n_SRS_ID from 3GPP 38.211 6.4.1.4.2. It is used to calculate the SRS sequence - used to generate sequence groups. Maps to sequenceId in SRSReceiveReq and to SrsSequenceId in 5GMAX",
                    "maximum": 1007,
                    "minimum": 0,
                    "title": "Sequence Id",
                    "type": "integer"
                },
                "srs_bandwidth": {
                    "description": "Parameter B_SRS from 3GPP 38.211 6.4.1.4.3. Maps to srsBandwidth in SRSReceiveReq and to Bandwidth in 5GMAX. Added in 5GC001586, 5G_RAN_UP_22011_UP",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Srs Bandwidth",
                    "type": "integer"
                },
                "symbol_offset": {
                    "description": "Placement of the first SRS symbol counted backwards from the end of the slot. Used to calculate symbolPosition from SRSReceiveReq. 3GPP 38.211 6.4.1.4.1. Maps to SRSSymbOffset in 5GMAX",
                    "maximum": 4,
                    "minimum": 0,
                    "title": "Symbol Offset",
                    "type": "integer"
                },
                "transmission_comb": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TransmissionComb"
                        }
                    ],
                    "description": "Transmission comb. Maps to CombNum in 5GMAX. Introduced by B008322-D feature for Loki NR UL users."
                },
                "transmission_comb_id": {
                    "$ref": "#/$defs/TransmissionCombId"
                }
            },
            "required": [
                "beam_management",
                "mimo",
                "beamforming_weight_vector",
                "sequence_id",
                "alloc_slot",
                "symbol_offset",
                "bandwidth_config",
                "srs_bandwidth",
                "frequency_domain_position",
                "frequency_domain_shift",
                "transmission_comb",
                "transmission_comb_id",
                "cyclic_shift",
                "pattern_id",
                "ecpri_section_id",
                "ce_axc_indices",
                "occasion_delay",
                "resource_identity",
                "num_scheduled_symbols"
            ],
            "title": "NrUserSrs",
            "type": "object"
        },
        "NrUserUplink": {
            "additionalProperties": false,
            "description": "Single user's uplink-specific configuration",
            "properties": {
                "codebook_subset": {
                    "$ref": "#/$defs/CodebookSubset"
                },
                "full_power_pusch_power_scaling_ratio": {
                    "$ref": "#/$defs/FullPowerPuschPowerScalingRatio"
                },
                "number_of_antennas": {
                    "$ref": "#/$defs/NrUserNumberOfAntennas"
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrUserPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pucch": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/NrUserPucch"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Pucch"
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrUserPusch"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "srs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NrUserSrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "subcell_id": {
                    "$ref": "#/$defs/SubcellIdModel"
                }
            },
            "required": [
                "subcell_id",
                "prach",
                "pusch",
                "pucch",
                "srs",
                "number_of_antennas",
                "codebook_subset",
                "full_power_pusch_power_scaling_ratio"
            ],
            "title": "NrUserUplink",
            "type": "object"
        },
        "NumOfPrbs": {
            "description": "Number for resource blocks to schedule rim_rs for. Used to calculate MAC.XLMAP{}.Resource{}.AllocRB",
            "enum": [
                48,
                96
            ],
            "title": "NumOfPrbs",
            "type": "integer"
        },
        "NumOfRepetitions": {
            "description": "Repetitions field reflects the number of repetitions performed for this nbPusch user.",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128
            ],
            "title": "NumOfRepetitions",
            "type": "integer"
        },
        "NumOfRepetitions1": {
            "description": "Contains total number of repetitions for CAT-M UE.",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32
            ],
            "title": "NumOfRepetitions1",
            "type": "integer"
        },
        "NumOfRepetitions2": {
            "description": "Number of repetitions in transmission block.",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                256,
                512
            ],
            "title": "NumOfRepetitions2",
            "type": "integer"
        },
        "NumOfSubcarriers": {
            "description": "Number of subcarriers for a given NBPRACH configuration, maps with subcarrierOffset based on\nhttps://sharenet-ims.int.net.nokia.com/Overview/D543844987",
            "enum": [
                12,
                24,
                36,
                48
            ],
            "title": "NumOfSubcarriers",
            "type": "integer"
        },
        "NumOfSubcarriers1": {
            "description": "Number of subcarriers used for the transmission. First subcarrier is set by subcarrierIndex.",
            "enum": [
                1,
                3,
                6,
                12
            ],
            "title": "NumOfSubcarriers1",
            "type": "integer"
        },
        "NumPrb": {
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                9,
                10,
                12,
                15,
                16,
                18,
                20,
                24,
                25,
                27,
                30,
                32,
                36,
                40,
                45,
                48,
                50,
                54,
                60,
                64,
                72,
                75,
                80,
                81,
                90,
                96,
                100
            ],
            "title": "NumPrb",
            "type": "integer"
        },
        "NumRepetitions": {
            "description": "Number of repetitions for all preambles belonging to repetition level",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128
            ],
            "title": "NumRepetitions",
            "type": "integer"
        },
        "NumberOfAdditionalDmrsPositions": {
            "description": "The maximum number of additional DM-RS on top of the front-loaded DM-RS, 3GPP 38.211 6.4.1.1.3",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "title": "NumberOfAdditionalDmrsPositions",
            "type": "integer"
        },
        "NumberOfAntennaPorts": {
            "description": "Number of antenna ports for CSI-RS non zero power resources. Each transmission TX point has the same number of\nantennas. Maps to numOfCsiRsAntennaPorts in DlCellSetupReq message and ParCell.RRC.CsiRs.NumPorts.\nFor CSI-RS zero power resources, number_of_antenna_ports should be fixed to 4 according\nto 3GPP 36.211 Table 6.10.5.2-1",
            "enum": [
                1,
                2,
                4,
                8
            ],
            "title": "NumberOfAntennaPorts",
            "type": "integer"
        },
        "NumberOfAntennas": {
            "description": "Number of Tx antenna ports. Maps to numOfTxPorts in DlCellSetupReq message and ParUnit{}.TX.PhyAntennas in 5gmax.",
            "enum": [
                1,
                2,
                4,
                8,
                32,
                64
            ],
            "title": "NumberOfAntennas",
            "type": "integer"
        },
        "NumberOfAntennas1": {
            "description": "Number of antennas used in cell for beamforming. When massive MIMO is enabled, the number of antennas is extended\nto 64. Maps to numOfBfAntennas in DlCellSetupReq message.",
            "enum": [
                4,
                8,
                16,
                32,
                64
            ],
            "title": "NumberOfAntennas1",
            "type": "integer"
        },
        "NumberOfCarrierParts": {
            "description": "Defines if antenna bandwidth is split between multiple antennas (CB006911/CB007331/CB009104).\nMaps to SplitBW options in 5GMax",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "title": "NumberOfCarrierParts",
            "type": "integer"
        },
        "NumberOfCellSlot": {
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                9,
                10,
                12,
                16,
                18,
                24,
                32
            ],
            "title": "NumberOfCellSlot",
            "type": "integer"
        },
        "NumberOfCellSlots": {
            "anyOf": [
                {
                    "$ref": "#/$defs/NumberOfCellSlot"
                },
                {
                    "type": "null"
                }
            ],
            "title": "NumberOfCellSlots"
        },
        "NumberOfDlHarqSubframesPackedItem": {
            "maximum": 5,
            "minimum": 0,
            "title": "NumberOfDlHarqSubframesPackedItem",
            "type": "integer"
        },
        "NumberOfDlHarqSubframesPackedScellItem": {
            "maximum": 5,
            "minimum": 0,
            "title": "NumberOfDlHarqSubframesPackedScellItem",
            "type": "integer"
        },
        "NumberOfLteCrsPorts": {
            "description": "Number of LTE CRS ports. Maps to numLteCrsPorts in DlCellSetupRequest message. Maps to PortNum in 5GMax.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "NumberOfLteCrsPorts",
            "type": "integer"
        },
        "NumberOfPdcchSymbol": {
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "title": "NumberOfPdcchSymbol",
            "type": "integer"
        },
        "NumberOfPrbsPerSubband": {
            "description": "(5GMax) Number of PRB for each subband for RIM-RS. Maps to ParUnit.RX.RimRsDet.PrbPerSubband",
            "enum": [
                48,
                96
            ],
            "title": "NumberOfPrbsPerSubband",
            "type": "integer"
        },
        "NumberOfRepetitions": {
            "description": "Number of user's repetitions. Maps to ParCell.MAC.DLMAP.NumRep in 5GMax.",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                1024,
                2048
            ],
            "title": "NumberOfRepetitions",
            "type": "integer"
        },
        "NumberOfRxAntennas1": {
            "description": "Number of antennas. Maps to numCeAxCId in UlCellSetupRequest message.",
            "enum": [
                2,
                4,
                8,
                16
            ],
            "title": "NumberOfRxAntennas1",
            "type": "integer"
        },
        "NumberOfSrsStreamsPerSymbol": {
            "description": "Number of Srs streams to transmit per symbol in DL slot. Specified per cell, currently used only for Vran",
            "enum": [
                2,
                4,
                8,
                16
            ],
            "title": "NumberOfSrsStreamsPerSymbol",
            "type": "integer"
        },
        "NumberOfSrsTxPorts": {
            "description": "Number of antenna ports used for SRS signal transmission NSRSap. Defined in 3GPP 38.211 (version 15.8.0)\nsection 6.4.1.4.1. Maps to numSrsPorts in SrsReceiveReq and to MAC.ULMAP{ULMAPIdx}.SrsNumTxPorts in 5GMAX.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "NumberOfSrsTxPorts",
            "type": "integer"
        },
        "NumberOfSubcells": {
            "description": "Number of this supercell's subcells",
            "enum": [
                2,
                3,
                4,
                5,
                6
            ],
            "title": "NumberOfSubcells",
            "type": "integer"
        },
        "NumberOfTrxColumns": {
            "description": "Number of TRX columns in the antenna array. For RFU sharing mode, it indicates the number of TRX columns configured\nfor the (sub)cell. Maps to numOfColumnTRX in UlCellSetupRequest",
            "enum": [
                2,
                4,
                8
            ],
            "title": "NumberOfTrxColumns",
            "type": "integer"
        },
        "NumberOfTrxRows": {
            "description": "Number of TRX rows in the antenna array. For RFU sharing mode, it indicates the number of TRX rows configured for\nthe (sub)cell. Maps to numOfColumnTRX in UlCellSetupRequest",
            "enum": [
                1,
                2,
                4
            ],
            "title": "NumberOfTrxRows",
            "type": "integer"
        },
        "Numerology": {
            "description": "Transmission numerology (determining subcarrier spacing and symbol length).\nCurrently, TRX supports numerology 0 for FDD, 1 and 3 for TDD",
            "enum": [
                0,
                1,
                3
            ],
            "title": "Numerology",
            "type": "integer"
        },
        "OpenLoopScheme": {
            "description": "Parameter to indicate the open loop scheme when dlMimoMode is open loop. Value INVALID is set by L2 when\n spatialMode is closed loop/singleTx. Value IdentityCodebook is only used when subbandBF is enabled",
            "enum": [
                "NO_PRECODING_0",
                "SCDD_1",
                "LCDD_2",
                "IdentityCodebook",
                "INVALID_255"
            ],
            "title": "OpenLoopScheme",
            "type": "string"
        },
        "Oran": {
            "additionalProperties": false,
            "description": "ORAN configuration",
            "properties": {
                "mantissa_size": {
                    "$ref": "#/$defs/MantissaSize"
                },
                "maximum_transmission_unit": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Maximum transmission unit, expressed in number of bytes. Used to determine maximum size of iq data fragment in ORAN packets. Currently always set to null.",
                    "title": "Maximum Transmission Unit"
                }
            },
            "required": [
                "mantissa_size",
                "maximum_transmission_unit"
            ],
            "title": "Oran",
            "type": "object"
        },
        "OrderIrcEnum": {
            "enum": [
                0.0,
                1.0,
                255.0
            ],
            "title": "OrderIrcEnum",
            "type": "numeric"
        },
        "OutputMode": {
            "description": "Maps to outputMode in TraceReqHeader of L1Log_TraceReq message.",
            "enum": [
                "SNAPSHOT",
                "STREAMING"
            ],
            "title": "OutputMode",
            "type": "string"
        },
        "OverrideTimingForConformanceTest": {
            "additionalProperties": false,
            "properties": {
                "frame_period": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/FramePeriod"
                        }
                    ],
                    "description": "Period between frames with PRACH access slots. Maps to PeriodicityFrm in 5Gmax. Feature currently supports values [1, 2], which is a subset of supported values for PeriodicityFrm in 5GMAX."
                },
                "prach_slot_indices_in_subframe": {
                    "description": "Slot index contain PRACH in subframe, mapping to PrachSlotIdx in 5Gmax.",
                    "items": {
                        "$ref": "#/$defs/PrachSlotIndex"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Prach Slot Indices In Subframe",
                    "type": "array"
                },
                "subframes_in_period": {
                    "description": "Indices of subframes in period in which the PRACH access slots will be located.Maps to PrachStartSubfr60kSlot in 5Gmax.",
                    "items": {
                        "$ref": "#/$defs/SubframesInPeriod"
                    },
                    "minItems": 1,
                    "title": "Subframes In Period",
                    "type": "array"
                }
            },
            "required": [
                "frame_period",
                "subframes_in_period",
                "prach_slot_indices_in_subframe"
            ],
            "title": "OverrideTimingForConformanceTest",
            "type": "object"
        },
        "PBIndex": {
            "maximum": 3,
            "minimum": 0,
            "title": "PBIndex",
            "type": "integer"
        },
        "PassthroughConfiguration": {
            "additionalProperties": false,
            "description": "Defines port/antenna number for the special passthrough mode where FCP messages are omitted.",
            "properties": {
                "DL": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StreamPassthroughConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "PRACH": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StreamPassthroughConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "UL": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StreamPassthroughConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "DL",
                "PRACH",
                "UL"
            ],
            "title": "PassthroughConfiguration",
            "type": "object"
        },
        "PassthroughMode": {
            "additionalProperties": false,
            "description": "Special mode used to transform input data without altering for BFW.\nThere are two options, with FCP and without FCP. Only one of them can be enabled",
            "properties": {
                "with_fcp": {
                    "description": "Indicates that with FCP mode is used",
                    "title": "With Fcp",
                    "type": "boolean"
                },
                "without_fcp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PassthroughConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "with_fcp",
                "without_fcp"
            ],
            "title": "PassthroughMode",
            "type": "object"
        },
        "PassthroughSpecialIndex": {
            "default": "Stream index equal to -1, meaning all streams in correct polarity.",
            "maximum": -1,
            "minimum": -1,
            "title": "PassthroughSpecialIndex",
            "type": "integer"
        },
        "PassthroughStreamIndex": {
            "default": "Single stream index.",
            "maximum": 63,
            "minimum": 0,
            "title": "PassthroughStreamIndex",
            "type": "integer"
        },
        "PatternIdItem": {
            "maximum": 65535,
            "minimum": 0,
            "title": "PatternIdItem",
            "type": "integer"
        },
        "PatternIdSize2": {
            "title": "PatternIdSize2"
        },
        "PatternIdSize4": {
            "items": {
                "$ref": "#/$defs/PatternIdSize4Item"
            },
            "maxItems": 4,
            "minItems": 2,
            "title": "PatternIdSize4",
            "type": "array"
        },
        "PatternIdSize4Item": {
            "maximum": 65535,
            "minimum": 0,
            "title": "PatternIdSize4Item",
            "type": "integer"
        },
        "PatternLength": {
            "description": "Length of the PRACH pattern provided in parameter prachPattern. Value represented as a number of frames.",
            "enum": [
                1,
                2,
                4,
                8,
                16
            ],
            "title": "PatternLength",
            "type": "integer"
        },
        "PayloadItem": {
            "maximum": 255,
            "minimum": 0,
            "title": "PayloadItem",
            "type": "integer"
        },
        "Pbch": {
            "additionalProperties": false,
            "description": "PBCH channel parameters for a single cell. This field should be set to null if PBCH channel is disabled",
            "properties": {
                "p_b_index": {
                    "$ref": "#/$defs/PBIndex"
                },
                "repetition_mode": {
                    "description": "Repetition mode for PBCH. For Cat-M and bandwidth 5MHz repetition_mode must be `False`. Maps to catMCellInfo.isPbchRepetitionEnabled in PhyDlCellSetupReq message. Maps to RepMode in 5GMax.",
                    "title": "Repetition Mode",
                    "type": "boolean"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PhyPbchSendReq message."
                }
            },
            "required": [
                "p_b_index",
                "tx_power",
                "repetition_mode",
                "timing_advance"
            ],
            "title": "Pbch",
            "type": "object"
        },
        "Pcfich": {
            "additionalProperties": false,
            "description": "PCFICH configuration for cell. This field should be set to null if PCFICH is disabled.",
            "properties": {
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPowerPcfich in PhyPdcchSendReq message."
                }
            },
            "required": [
                "tx_power"
            ],
            "title": "Pcfich",
            "type": "object"
        },
        "Pdcch": {
            "additionalProperties": false,
            "description": "PDCCH dci parameters set per user",
            "properties": {
                "dci": {
                    "description": "Indicates search space type and cce level configuration of one user",
                    "items": {
                        "$ref": "#/$defs/trx5g__l1_sct_definition__user__nr_user_pdcch__DciItem"
                    },
                    "title": "Dci",
                    "type": "array"
                }
            },
            "required": [
                "dci"
            ],
            "title": "Pdcch",
            "type": "object"
        },
        "PdcchModel": {
            "additionalProperties": false,
            "description": "PDCCH configuration for cell. This field should be set to null if PDCCH is disabled",
            "properties": {
                "cat_m": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CatM"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "is_csi_rs_activated": {
                    "description": "Indicate whether csiRs is activated as boolean. False means inactive, true means active. Maps to cfiAndFlags bit 6 in PhyPdcchSendReq message. Bit 6 is set to 1 when the subframe is used to send CSIRS and is_csi_rs_activated is true, else 0.",
                    "title": "Is Csi Rs Activated",
                    "type": "boolean"
                },
                "symbol_power_corrections": {
                    "description": "OFDM symbol specific power correction value for PDCCH measured in dBm per subcarrier. The unit is 1/100 dBm. The value is valid for all DCIs. symbol_power_correction[0] is value for the first, symbol_power_correction[1] for second one, etc. Maps to pdcchSymPowerCorr in PhyPdcchSendReq message.",
                    "items": {
                        "$ref": "#/$defs/SymbolPowerCorrection"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Symbol Power Corrections",
                    "type": "array"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in SDciInfo of PhyPdcchSendReq message. Does not support different tx_power per DCI now."
                }
            },
            "required": [
                "symbol_power_corrections",
                "timing_advance",
                "tx_power",
                "is_csi_rs_activated",
                "cat_m"
            ],
            "title": "PdcchModel",
            "type": "object"
        },
        "PdcchSymbols": {
            "enum": [
                1,
                2
            ],
            "title": "PdcchSymbols",
            "type": "integer"
        },
        "Pdsch": {
            "additionalProperties": false,
            "description": "PDSCH channel parameters for a single cell. This field should be set to null if PDSCH channel is disabled",
            "properties": {
                "p_b_index": {
                    "$ref": "#/$defs/PBIndex"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "p_b_index",
                "timing_advance"
            ],
            "title": "Pdsch",
            "type": "object"
        },
        "PdschCustomResourceAllocationsOrder": {
            "items": {
                "$ref": "#/$defs/PdschCustomResourceAllocationsOrderItem"
            },
            "maxItems": 10240,
            "minItems": 1,
            "title": "PdschCustomResourceAllocationsOrder",
            "type": "array"
        },
        "PdschCustomResourceAllocationsOrderItem": {
            "minimum": 0,
            "title": "PdschCustomResourceAllocationsOrderItem",
            "type": "integer"
        },
        "PdschDmrs": {
            "additionalProperties": false,
            "description": "PDSCH DMRS parameters for a single user",
            "properties": {
                "antenna_ports": {
                    "description": "Antenna ports for DMRS. List of positions of ones from binary representation of antenna port number. Example: antPort = 0xA000 -> antenna_ports = [0, 2] since bin(0xA) = 1010. Maps to AntennaPort in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AntennaPort"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Antenna Ports",
                    "type": "array"
                },
                "configuration_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ConfigurationType"
                        }
                    ],
                    "description": "DM-RS configuration type. 3GPP 38.211 7.4.1.1.2. Maps to dlDmrsConfigType in PdschSendReq message. Maps to DmrsConfigType in 5GMax."
                },
                "length": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Length1"
                        }
                    ],
                    "description": "Length of a single DM-RS sequence. DM-RS with length equal to 1 is called single-symbol DM-RS, with length equal to 2 is called double-symbol DM-RS. Maps to dlDmrsLen in PdschSendReq message. Maps to DmrsMaxLen in 5GMax."
                },
                "mapping_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/MappingType1"
                        }
                    ],
                    "description": "DM-RS mapping type. 3GPP 38.211 7.4.1.1.2. Maps to dlDmrsMappingType in PdschSendReq message. Maps to DmrsMappingType in 5GMax."
                },
                "number_of_dataless_cdm_groups": {
                    "description": "Number of DMRS CDM groups without data. Maps to numOfDmrsCdmGroupWithoutData in PdschSendReq message. Maps to CdmGroupsWithoutData in 5GMax.",
                    "maximum": 3,
                    "minimum": 1,
                    "title": "Number Of Dataless Cdm Groups",
                    "type": "integer"
                },
                "scrambling_id": {
                    "$ref": "#/$defs/ScramblingId"
                },
                "scrambling_sequences": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ScramblingSequence"
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "DMRS scrambling sequences corresponding to scrambling_id 0 and 1, if not set, phys_cell_id will be used. Maps to NIdDmrs in 5GMax.",
                    "title": "Scrambling Sequences"
                }
            },
            "required": [
                "scrambling_sequences",
                "scrambling_id",
                "configuration_type",
                "length",
                "mapping_type",
                "number_of_dataless_cdm_groups",
                "antenna_ports"
            ],
            "title": "PdschDmrs",
            "type": "object"
        },
        "PdschEncoder": {
            "additionalProperties": false,
            "description": "PDSCH encoder parameters for a single user.",
            "properties": {
                "modulation": {
                    "description": "Modulation Scheme, share configuration for both codewords if only one is provided. Maps to tbFormat.modulation in PhyPdschSendReq message. Maps to Mcs.Modulation in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/ModulationEnum"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Modulation",
                    "type": "array"
                },
                "redundancy_version_index": {
                    "$ref": "#/$defs/RedundancyVersionIndex"
                },
                "tb_size": {
                    "description": "Transport block size (bits), share configuration for both codewords if only one is provided. Maps to Mcs.Tbs in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/TbSizeItem"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Tb Size",
                    "type": "array"
                }
            },
            "required": [
                "tb_size",
                "modulation",
                "redundancy_version_index"
            ],
            "title": "PdschEncoder",
            "type": "object"
        },
        "PdschEncoderModel": {
            "additionalProperties": false,
            "description": "PDSCH encoder parameters for a single user",
            "properties": {
                "mcs_index": {
                    "$ref": "#/$defs/McsIndex"
                },
                "mcs_index_table": {
                    "$ref": "#/$defs/McsIndexTablePdsch"
                },
                "rate_matching_overhead": {
                    "$ref": "#/$defs/RateMatchingOverhead"
                },
                "redundancy_version_index": {
                    "$ref": "#/$defs/RedundancyVersionIndex"
                }
            },
            "required": [
                "mcs_index",
                "mcs_index_table",
                "rate_matching_overhead",
                "redundancy_version_index"
            ],
            "title": "PdschEncoderModel",
            "type": "object"
        },
        "PdschHarq": {
            "additionalProperties": false,
            "description": "PDSCH harq parameters for a single user",
            "properties": {
                "allocation_slots": {
                    "description": "Slot allocation map, boolean vector defining if CTRLMES is transmitted",
                    "items": {
                        "$ref": "#/$defs/AllocationSlot"
                    },
                    "minItems": 1,
                    "title": "Allocation Slots",
                    "type": "array"
                },
                "constrain_mode": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Constrain mode for harq transmission",
                    "title": "Constrain Mode"
                },
                "transmission": {
                    "$ref": "#/$defs/PdschHarqTransmission"
                }
            },
            "required": [
                "transmission",
                "constrain_mode",
                "allocation_slots"
            ],
            "title": "PdschHarq",
            "type": "object"
        },
        "PdschHarqDelay": {
            "additionalProperties": false,
            "description": "PDSCH harq delay parameters for a single user",
            "properties": {
                "delay_type": {
                    "description": "Delay type between data RX and feedback TX",
                    "title": "Delay Type",
                    "type": "string"
                },
                "delay_value": {
                    "description": "Delay value [DelayCtrlToData, DelayCtrlToFeedback]",
                    "items": {
                        "$ref": "#/$defs/DelayValueItem"
                    },
                    "minItems": 2,
                    "title": "Delay Value",
                    "type": "array"
                }
            },
            "required": [
                "delay_value",
                "delay_type"
            ],
            "title": "PdschHarqDelay",
            "type": "object"
        },
        "PdschHarqTransmission": {
            "additionalProperties": false,
            "description": "PDSCH harq transmission parameters for a single user",
            "properties": {
                "adaptive_harq_retransmission": {
                    "$ref": "#/$defs/AdaptiveHarqRetransmission"
                },
                "delay_in_transmission": {
                    "$ref": "#/$defs/PdschHarqDelay"
                },
                "maximum_number_of_harq_transmissions": {
                    "description": "Maximum number of HARQ transmissions, including initial",
                    "minimum": 0,
                    "title": "Maximum Number Of Harq Transmissions",
                    "type": "integer"
                },
                "transmission_type": {
                    "description": "Type of HARQ transmission",
                    "title": "Transmission Type",
                    "type": "string"
                }
            },
            "required": [
                "maximum_number_of_harq_transmissions",
                "delay_in_transmission",
                "transmission_type",
                "adaptive_harq_retransmission"
            ],
            "title": "PdschHarqTransmission",
            "type": "object"
        },
        "PdschPrecoding": {
            "additionalProperties": false,
            "description": "PDSCH precoding parameters for a single user",
            "properties": {
                "bundle_size_closed_loop": {
                    "description": "PRB bundle size for closed-loop MIMO scheme, 0 = 2 PRB, 1 = 4 PRB, 2 = full bandwidth. Maps to PrbBundleSizeCl in 5GMax.",
                    "maximum": 2,
                    "minimum": 0,
                    "title": "Bundle Size Closed Loop",
                    "type": "integer"
                },
                "bundle_size_open_loop": {
                    "$ref": "#/$defs/BundleSizeOpenLoop"
                },
                "codebook_indices": {
                    "description": "Precoding matrix indices to be used for precoding. In case of CL 4x4 the array contains 2 elements: first element is an 4-bit number where the first bit (starting form MSB) is i12 and another 3 bits are i10, second element - i2. In case of CL 2x2 the size of array should be 1. Maps to codebookIdx in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/CodebookIndice"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "title": "Codebook Indices",
                    "type": "array"
                },
                "low_papr_precoding": {
                    "description": "Low PAPR optimized precoding",
                    "title": "Low Papr Precoding",
                    "type": "boolean"
                },
                "precoding_option_4x4": {
                    "$ref": "#/$defs/PdschPrecodingOption4x4"
                }
            },
            "required": [
                "codebook_indices",
                "bundle_size_closed_loop",
                "bundle_size_open_loop",
                "precoding_option_4x4",
                "low_papr_precoding"
            ],
            "title": "PdschPrecoding",
            "type": "object"
        },
        "PdschPrecodingOption4x4": {
            "description": "PDSCH precoding option. Maps to pdschPrecodingOption4x4 in message and PdschPrecodingOption4x4 in 5GMax",
            "enum": [
                "NoPortSelection",
                "PortSelectionUpToRank2",
                "PortSelectionUpToRank4",
                "PortSelectionUpToRank1",
                "NoPortSelectionWcsirsPrecoding",
                "PortSelectionUpToRank2WcsirsPrecoding",
                "PortSelectionUpToRank4WcsirsPrecoding",
                "PortSelectionUpToRank1WcsirsPrecoding"
            ],
            "title": "PdschPrecodingOption4x4",
            "type": "string"
        },
        "PdschPtrs": {
            "additionalProperties": false,
            "description": "PDSCH PTRS parameters for a single user",
            "properties": {
                "frequency_density": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/FrequencyDensity1"
                        }
                    ],
                    "description": "Parameter K(PT-RS) in 38.211 section 7.4.1.2.2. Maps to dlPtrsFrequencyDensity in PdschSendReq message. Maps to PtrsNrbThr in 5GMax."
                },
                "re_offset": {
                    "description": "Parameter DL-PTRS-RE-offset in 38.211 section 7.4.1.2.2. Maps to dlPtrsResElemOffset in PdschSendReq message. Maps to PtrsReOffset in 5GMax.",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Re Offset",
                    "type": "integer"
                },
                "time_density": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TimeDensity"
                        }
                    ],
                    "description": "Parameter L(PT-RS) in 38.211 section 7.4.1.2.2. Maps to dlPtrsTimeDensity in PdschSendReq message. Maps to PtrsMcsThr in 5GMax."
                }
            },
            "required": [
                "time_density",
                "frequency_density",
                "re_offset"
            ],
            "title": "PdschPtrs",
            "type": "object"
        },
        "PdschResourceAllocation": {
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/$defs/PdschResourceAllocationItem"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "maxItems": 10240,
            "minItems": 1,
            "title": "PdschResourceAllocation",
            "type": "array"
        },
        "PdschResourceAllocationItem": {
            "additionalProperties": false,
            "description": "PDSCH prbs and symbols allocation for a single user. Each array item is for one slot,\nwhole array is cyclically repeated for all slots in test",
            "properties": {
                "dmrs_config": {
                    "$ref": "#/$defs/DmrsConfig"
                },
                "number_of_prbs": {
                    "description": "Number of prbs. Maps to AllocRBs in 5GMax.",
                    "maximum": 273,
                    "minimum": 1,
                    "title": "Number Of Prbs",
                    "type": "integer"
                },
                "number_of_symbols": {
                    "description": "Number of symbols (including dmrs). Maps to AllocDataSymbols in 5GMax.",
                    "maximum": 14,
                    "minimum": 2,
                    "title": "Number Of Symbols",
                    "type": "integer"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize2"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for transmission in PDSCH grant. Map to PdschGrant.patternId.Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive."
                },
                "rach_status": {
                    "$ref": "#/$defs/NrRachStatus"
                },
                "rbg_bitmap": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/AllocatedSubframe"
                            },
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The bitmap indicates resource allocation type 0, null indicates resource allocation type 1. Maps to AllocRBs in 5GMax, used to calculate ResAllocType in 5GMax.",
                    "title": "Rbg Bitmap"
                },
                "start_prb": {
                    "description": "The first prb within current BWP for resource allocation type 1. Maps to AllocRBs in 5GMax.",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                },
                "start_symbol": {
                    "description": "The first symbol. Maps to AllocDataSymbols in 5GMax.",
                    "maximum": 12,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                }
            },
            "required": [
                "start_prb",
                "number_of_prbs",
                "rbg_bitmap",
                "start_symbol",
                "number_of_symbols",
                "dmrs_config",
                "pattern_id",
                "rach_status"
            ],
            "title": "PdschResourceAllocationItem",
            "type": "object"
        },
        "PeriodicSrsConfig": {
            "additionalProperties": false,
            "properties": {
                "beamforming_weight_vector_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BeamformingWeightVectorConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "horizontal_beamforming_sector_weights": {
                    "description": "Precombiner weights for row direction, same precombiner vector for every row. Maps to realPartOfPrecombinerRows, imagPartOfPrecombinerRows in UlCellSetupRequest and HorSectorBfVector in 5GMAX.",
                    "items": {
                        "$ref": "#/$defs/Weight"
                    },
                    "maxItems": 8,
                    "minItems": 0,
                    "title": "Horizontal Beamforming Sector Weights",
                    "type": "array"
                },
                "number_of_srs_streams_per_symbol": {
                    "$ref": "#/$defs/NumberOfSrsStreamsPerSymbol"
                },
                "number_of_trx_columns": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfTrxColumns"
                        }
                    ],
                    "description": "Number of TRX columns in the antenna array. For RFU sharing mode, it indicates the number of TRX columns configured for the (sub)cell. Maps to numOfColumnTRX in UlCellSetupRequest"
                },
                "number_of_trx_rows": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfTrxRows"
                        }
                    ],
                    "description": "Number of TRX rows in the antenna array. For RFU sharing mode, it indicates the number of TRX rows configured for the (sub)cell. Maps to numOfColumnTRX in UlCellSetupRequest"
                },
                "number_prb_per_subband": {
                    "description": "Number of PRBs per subband. Maps to pSRSconfig.numPrbPerSubband in UlCell_SetupReq",
                    "maximum": 272,
                    "minimum": 4,
                    "title": "Number Prb Per Subband",
                    "type": "integer"
                },
                "receiver_delays": {
                    "description": "List of receiver indexes and their respective delays. Maps to StaticRawSrsConf.ReceiverDelays. To be used in RU tests.",
                    "items": {
                        "$ref": "#/$defs/ReceiverDelay"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "title": "Receiver Delays",
                    "type": "array"
                },
                "vertical_beamforming_sector_weights": {
                    "description": "Precombiner weights for column direction, same precombiner vector for every column. Maps to realPartOfPrecombinerColumns, imagPartOfPrecombinerColumns in UlCellSetupRequest and VerSectorBfVector in 5GMAX.",
                    "items": {
                        "$ref": "#/$defs/Weight"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Vertical Beamforming Sector Weights",
                    "type": "array"
                }
            },
            "required": [
                "horizontal_beamforming_sector_weights",
                "vertical_beamforming_sector_weights",
                "number_of_trx_columns",
                "number_of_trx_rows",
                "number_of_srs_streams_per_symbol",
                "beamforming_weight_vector_config",
                "number_prb_per_subband",
                "receiver_delays"
            ],
            "title": "PeriodicSrsConfig",
            "type": "object"
        },
        "Periodicity": {
            "description": "SSB burst transmission periodicity in terms of half frame. Maps to SsbPeriod in 5GMax.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "Periodicity",
            "type": "integer"
        },
        "Periodicity1": {
            "description": "Periodicity of NZP CSI-RS resources, in unit of slots. Maps to Periodicity in 5GMax.",
            "enum": [
                1,
                4,
                5,
                8,
                10,
                16,
                20,
                32,
                40,
                64,
                80,
                160,
                320,
                640,
                1280
            ],
            "title": "Periodicity1",
            "type": "integer"
        },
        "Phich": {
            "additionalProperties": false,
            "description": "PHICH group information",
            "properties": {
                "groups": {
                    "$ref": "#/$defs/PhichGroups"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "groups",
                "timing_advance"
            ],
            "title": "Phich",
            "type": "object"
        },
        "PhichDuration": {
            "description": "PHICH duration according to 3GPP 36.211 Table 6.9.3-1. Maps to phichDur in DlPhysicalChannelSetupReq message.",
            "enum": [
                "normal",
                "extended"
            ],
            "title": "PhichDuration",
            "type": "string"
        },
        "PhichGroup": {
            "additionalProperties": false,
            "properties": {
                "allocated_subframes": {
                    "description": "Subframe allocation map, boolean vector for all subframes in the radio frame defining if PHICH resource is scheduled in the subframe.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Allocated Subframes",
                    "type": "array"
                },
                "harq_ack_indicator": {
                    "$ref": "#/$defs/HarqAckIndicator"
                },
                "sequence_indices": {
                    "description": "Indicates which PHICH sequence of boolean indices is used.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 8,
                    "minItems": 8,
                    "title": "Sequence Indices",
                    "type": "array"
                },
                "tx_power": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TxPower"
                        }
                    ],
                    "description": "Maps to txPower in PhyPhichSendReq message."
                }
            },
            "required": [
                "allocated_subframes",
                "tx_power",
                "sequence_indices",
                "harq_ack_indicator"
            ],
            "title": "PhichGroup",
            "type": "object"
        },
        "PhichGroups": {
            "description": "PHICH groups information. In the case of a null value, PHICH message will not be scheduled.",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/$defs/PhichGroup"
                    },
                    {
                        "type": "null"
                    }
                ]
            },
            "minItems": 1,
            "title": "PhichGroups",
            "type": "array"
        },
        "PhichResourceSize": {
            "description": "PHICH resource size parameter Ng according to 3GPP 36.211 $6.9. Maps to phichRes in DlPhysicalChannelSetupReq\nmessage.",
            "enum": [
                "1/6",
                "1/2",
                "1",
                "2"
            ],
            "title": "PhichResourceSize",
            "type": "string"
        },
        "PhyChannelType": {
            "description": "Physical channel type. Maps to phyChannelType in Api2BbbCreateEaxcReq message.",
            "enum": [
                "Prach",
                "Puxch",
                "Srs",
                "Pdxch",
                "Ssb",
                "Pusch72e",
                "PuschNormFactor72e",
                "Bwv",
                "Pdxch72e",
                "PdschPayload72e"
            ],
            "title": "PhyChannelType",
            "type": "string"
        },
        "PhysCellId": {
            "maximum": 503,
            "minimum": 0,
            "title": "PhysCellId",
            "type": "integer"
        },
        "PolarCeAxcIndex": {
            "maximum": 100,
            "minimum": 0,
            "title": "PolarCeAxcIndex",
            "type": "integer"
        },
        "PolarizationSelection": {
            "description": "Indicates precoding matrix generation method which is used for choosing one of the polarization options.\n It used only when conformanceTestMode from DlCell_SetupReq is set to True.",
            "enum": [
                "firstPolarization",
                "secondPolarization",
                "bothPolarizations"
            ],
            "title": "PolarizationSelection",
            "type": "string"
        },
        "PoolConfiguration": {
            "additionalProperties": false,
            "properties": {
                "is_prb_pooling_enabled": {
                    "description": "Enables PRB pooling feature. Maps directly to isPrbPoolingEnabled in L1Config_SwConfigurationReq.l1PoolConfiguration",
                    "title": "Is Prb Pooling Enabled",
                    "type": "boolean"
                },
                "pool_id": {
                    "description": "Indicates the index of the L1 pool",
                    "minimum": 0,
                    "title": "Pool Id",
                    "type": "integer"
                },
                "subpool_configuration": {
                    "description": "Configuration structure for L1 SW initial l1SubPoolConfiguration. Allowed allocated size is: LTE FDD: 8, LTE TDD: 1, 5G: 1",
                    "items": {
                        "$ref": "#/$defs/SubpoolConfiguration"
                    },
                    "maxItems": 8,
                    "minItems": 1,
                    "title": "Subpool Configuration",
                    "type": "array"
                }
            },
            "required": [
                "pool_id",
                "subpool_configuration",
                "is_prb_pooling_enabled"
            ],
            "title": "PoolConfiguration",
            "type": "object"
        },
        "PoolId": {
            "anyOf": [
                {
                    "maximum": 5,
                    "minimum": 0,
                    "type": "integer"
                },
                {
                    "type": "null"
                }
            ],
            "title": "PoolId"
        },
        "Port": {
            "additionalProperties": false,
            "description": "Configuration for a fronthaul port",
            "properties": {
                "cells": {
                    "items": {
                        "$ref": "#/$defs/FronthoulCell"
                    },
                    "title": "Cells",
                    "type": "array"
                },
                "loopback_mode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/LoopbackMode"
                        }
                    ],
                    "description": "Defines loopback point. Maps to loopbackMode in SApi2BbbSetPortConfigurationReq message, and loopbackEnabled is set as False if null else True."
                },
                "port_id": {
                    "description": "Port id. Maps to portId in Api2BbbSetPortConfigurationReq/Api2BbbCreateEaxcReq/Api2BbbCreateAxcReq messages.",
                    "maximum": 21,
                    "minimum": 1,
                    "title": "Port Id",
                    "type": "integer"
                }
            },
            "required": [
                "port_id",
                "cells",
                "loopback_mode"
            ],
            "title": "Port",
            "type": "object"
        },
        "PositionForTypeA": {
            "description": "Position of the first DM-RS symbol. It has to be set for type A. For TypeB this parameter is ignored.\n See 3GPP 38.211 6.4.1.1.3",
            "enum": [
                2,
                3
            ],
            "title": "PositionForTypeA",
            "type": "integer"
        },
        "PowerOffsetToSsb": {
            "description": "Power offset of NZP CSI-RS RE to SS RE. Value in dB. Refer to 38.214, section 5.2.2.3.1. Maps to PcSS in 5GMAX.",
            "enum": [
                -3,
                0,
                3,
                6
            ],
            "title": "PowerOffsetToSsb",
            "type": "integer"
        },
        "PowerReductionPerSymbItem": {
            "anyOf": [
                {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "title": "PowerReductionPerSymbItem"
        },
        "PrachBandwidth": {
            "description": "Number of REs (subcarriers) occupied by the PRACH. Value represented as a number of PRACH REs.",
            "enum": [
                139,
                839
            ],
            "title": "PrachBandwidth",
            "type": "integer"
        },
        "PrachNumerology": {
            "description": "PRACH numerology. Not used for long formats.",
            "enum": [
                1,
                3,
                null
            ],
            "title": "PrachNumerology"
        },
        "PrachOccasions": {
            "additionalProperties": false,
            "description": "Array of all PRACH occasions in the PRACH pattern.",
            "properties": {
                "frame_offset": {
                    "description": "Offset between the UL frame boundary at RF connector such that [SFN mod patternLength = 0] and the start of CP of the PRACH occasion. Value in UTU.",
                    "maximum": 12582911999,
                    "minimum": 0,
                    "title": "Frame Offset",
                    "type": "integer"
                }
            },
            "required": [
                "frame_offset"
            ],
            "title": "PrachOccasions",
            "type": "object"
        },
        "PrachPattern": {
            "additionalProperties": false,
            "properties": {
                "prach_occasions": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PrachOccasions"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Prach Occasions"
                }
            },
            "required": [
                "prach_occasions"
            ],
            "title": "PrachPattern",
            "type": "object"
        },
        "PrachPreamble": {
            "additionalProperties": false,
            "properties": {
                "freqOffset": {
                    "description": "UE's frequency offset [Hz]",
                    "title": "Freqoffset",
                    "type": "number"
                },
                "signature": {
                    "description": "PRACH preamble signature id",
                    "title": "Signature",
                    "type": "integer"
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                },
                "timeOffset": {
                    "$ref": "#/$defs/TimeOffset"
                },
                "velocity": {
                    "description": "UE's velocity [km/h]",
                    "title": "Velocity",
                    "type": "number"
                }
            },
            "required": [
                "freqOffset",
                "signature",
                "timeOffset",
                "velocity",
                "snrs"
            ],
            "title": "PrachPreamble",
            "type": "object"
        },
        "PrachRu": {
            "additionalProperties": false,
            "description": "PRACH L1 RU (Radio Unit) configuration",
            "properties": {
                "static_prach_configs": {
                    "description": "Set of unique PRACH StaticPrachConfig objects",
                    "items": {
                        "$ref": "#/$defs/StaticPrachConfig"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Static Prach Configs",
                    "type": "array"
                }
            },
            "required": [
                "static_prach_configs"
            ],
            "title": "PrachRu",
            "type": "object"
        },
        "PrachSlotIndex": {
            "enum": [
                0,
                1
            ],
            "title": "PrachSlotIndex",
            "type": "integer"
        },
        "Prb": {
            "additionalProperties": false,
            "properties": {
                "number_of_prbs": {
                    "description": "Number of PRBs",
                    "maximum": 100,
                    "minimum": 1,
                    "title": "Number Of Prbs",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "Start PRB",
                    "maximum": 99,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                }
            },
            "required": [
                "start_prb",
                "number_of_prbs"
            ],
            "title": "Prb",
            "type": "object"
        },
        "Prb1": {
            "additionalProperties": false,
            "description": "PRBs structure",
            "properties": {
                "number_of_prbs": {
                    "description": "Number of PRBs",
                    "minimum": 0,
                    "title": "Number Of Prbs",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "Start PRB",
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                }
            },
            "required": [
                "start_prb",
                "number_of_prbs"
            ],
            "title": "Prb1",
            "type": "object"
        },
        "PrbBlanking": {
            "additionalProperties": false,
            "description": "PRB blanking configuration",
            "properties": {
                "num_of_blanked_prbs": {
                    "description": "Total number of blanked prbs.",
                    "maximum": 268,
                    "minimum": 0,
                    "title": "Num Of Blanked Prbs",
                    "type": "integer"
                },
                "num_of_blanked_prbs_low_edge": {
                    "description": "Number of blanked prbs on the low edge.",
                    "maximum": 268,
                    "minimum": 0,
                    "title": "Num Of Blanked Prbs Low Edge",
                    "type": "integer"
                }
            },
            "required": [
                "num_of_blanked_prbs",
                "num_of_blanked_prbs_low_edge"
            ],
            "title": "PrbBlanking",
            "type": "object"
        },
        "PrbIndex": {
            "maximum": 103,
            "minimum": -4,
            "title": "PrbIndex",
            "type": "integer"
        },
        "PrbOccasionIndex": {
            "maximum": 7,
            "minimum": 0,
            "title": "PrbOccasionIndex",
            "type": "integer"
        },
        "Prbs": {
            "description": "PRBs allocation for slot. Set to an empty array if there is no allocation in a certain slot. To configure\nnoncontiguous PRBs, include mappings of 'start_prb' and 'number_of_prbs' for each contiguous series within\ncomplete noncontinguous series. Example: to configure PRBs [0, 1, 2, 3, 10, 11, 12], extend it with two\nmappings: [{'start_prb': 0, 'number_of_prbs': 4}, {'start_prb': 10, 'number_of_prbs': 3}]",
            "items": {
                "$ref": "#/$defs/Prb"
            },
            "maxItems": 100,
            "minItems": 0,
            "title": "Prbs",
            "type": "array"
        },
        "PrecoderGranularity": {
            "description": "Indicates whether value of reg_bundle_size parameter is used as precoder granularity or number of contiguous RBs\nwithin CORESET is used as precoder granularity. Maps to precoderGranularity in PdcchSendReq message.\nMaps to PrecoderGranuIdx in 5GMax.",
            "enum": [
                "reg_bundle_size",
                "number_of_contiguous_rb"
            ],
            "title": "PrecoderGranularity",
            "type": "string"
        },
        "PrecodingMatrix": {
            "description": "0 FOR IDENTITY MATRIX, 1 FOR DIAGONAL PER BLOCK, THIS FIELD IS ONLY VALID WHEN CONFIG  =  4 or 8 or 18.\nMaps to csiRsPrecodingMatrix in CsiRsSendReq message. Maps to CsiRsPrecodingMatrix in 5GMax.",
            "enum": [
                0,
                1,
                2
            ],
            "title": "PrecodingMatrix",
            "type": "integer"
        },
        "PrecodingOption4x4": {
            "description": "Indicates precoding matrix generation method for 4 antenna ports transmission.\nMaps to pdcchPrecodingOption4x4 in PdcchSendReq message.",
            "enum": [
                "repetition_two_xpol",
                "scdd",
                "repetition_one_xpol",
                "repetition_2nd_xpol"
            ],
            "title": "PrecodingOption4x4",
            "type": "string"
        },
        "PrecodingVectorIndice": {
            "maximum": 3,
            "minimum": 0,
            "title": "PrecodingVectorIndice",
            "type": "integer"
        },
        "PrecodingVectorItem": {
            "maximum": 1,
            "minimum": 0,
            "title": "PrecodingVectorItem",
            "type": "integer"
        },
        "Pucch": {
            "additionalProperties": false,
            "properties": {
                "hoppingInterval": {
                    "$ref": "#/$defs/HoppingInterval"
                }
            },
            "required": [
                "hoppingInterval"
            ],
            "title": "Pucch",
            "type": "object"
        },
        "PucchCatm": {
            "additionalProperties": false,
            "description": "Switch between UE type: when user is legacy then field is set to null, when user is catM, then number of\nrepetitions is defined inside the structure.",
            "properties": {
                "numOfRepetitions": {
                    "$ref": "#/$defs/NumOfRepetitions1"
                }
            },
            "required": [
                "numOfRepetitions"
            ],
            "title": "PucchCatm",
            "type": "object"
        },
        "PucchCqiSize": {
            "items": {},
            "title": "PucchCqiSize",
            "type": "array"
        },
        "PucchF1DemodulationType": {
            "description": "PUCCH demodulation type for format 1. Maps to PucchF1DemodType in 5GMax.",
            "enum": [
                "MRC",
                "JointMld"
            ],
            "title": "PucchF1DemodulationType",
            "type": "string"
        },
        "PucchFormat": {
            "description": "PUCCH format. Available formats: '1', '1a', '1b', '1bCS', '2', '2a', '2b', '2b_Pucch3', '3'.",
            "enum": [
                "1",
                "1a",
                "1b",
                "1bCS",
                "2",
                "2a",
                "2b",
                "2b_Pucch3",
                "3"
            ],
            "title": "PucchFormat",
            "type": "string"
        },
        "PucchPowerTolerance": {
            "additionalProperties": false,
            "properties": {
                "interfPower": {
                    "$ref": "#/$defs/Tolerance"
                },
                "totalPower": {
                    "$ref": "#/$defs/Tolerance"
                }
            },
            "required": [
                "interfPower",
                "totalPower"
            ],
            "title": "PucchPowerTolerance",
            "type": "object"
        },
        "PucchPrbs": {
            "additionalProperties": false,
            "properties": {
                "deltaShift": {
                    "$ref": "#/$defs/DeltaShift"
                },
                "nBlankedPrbs": {
                    "description": "Number of blanked PUCCH PRBs. For Cat-M and bandwidth 5MHz number of blanked prbs should not be greater than 8. Maps to RRC.PUCCH.BlankedPucch in 5GMax.",
                    "maximum": 60,
                    "minimum": 0,
                    "title": "Nblankedprbs",
                    "type": "integer"
                },
                "nF2Prbs": {
                    "description": "Number of PUCCH Format 2 PRBs",
                    "maximum": 24,
                    "minimum": 0,
                    "title": "Nf2Prbs",
                    "type": "integer"
                },
                "nF3Prbs": {
                    "description": "Number of PUCCH Format 3 PRBs",
                    "maximum": 6,
                    "minimum": 0,
                    "title": "Nf3Prbs",
                    "type": "integer"
                },
                "pucchRes": {
                    "description": "Total number of PUCCH resource blocks, including blanked Prbs, PUCCH Formats 1,2,3 and CATM Format 1 Prbs. Denotes the configured maximum value of PUCCH size. Only even values are allowed.",
                    "maximum": 100,
                    "minimum": 0,
                    "multipleOf": 2,
                    "title": "Pucchres",
                    "type": "integer"
                }
            },
            "required": [
                "deltaShift",
                "nBlankedPrbs",
                "nF2Prbs",
                "nF3Prbs",
                "pucchRes"
            ],
            "title": "PucchPrbs",
            "type": "object"
        },
        "PucchTolerances": {
            "additionalProperties": false,
            "properties": {
                "cell": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PucchPowerTolerance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "user": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "User"
                }
            },
            "required": [
                "cell",
                "user"
            ],
            "title": "PucchTolerances",
            "type": "object"
        },
        "PucchUserData": {
            "additionalProperties": false,
            "properties": {
                "anBits": {
                    "$ref": "#/$defs/AnBits"
                },
                "cqiBits": {
                    "description": "Two-dimensional array[subframe][bit] of CQI/RI bits per subframe. Subframe elements are looped until the frame is filled. This is repeated separately for each frame. Leave the bit list empty to make it random bits or if resource is not used in given subframe. This has to be alligned with user allocation field",
                    "items": {
                        "$ref": "#/$defs/CqiBit"
                    },
                    "maxItems": 10,
                    "title": "Cqibits",
                    "type": "array"
                },
                "cqiRepType": {
                    "$ref": "#/$defs/CqiRepType"
                },
                "cqiSizes": {
                    "description": "Two-dimensional array[subframe][ri] of CQI sizes for single serving cell chosen in 'settings'. Subframe elements are looped until the frame is filled. This is repeated separately for each frame. The cqiSize[subframe][0] corresponds to RI=1, cqiSize[subframe][1] corresponds to 1<RI<4 and cqiSize[subframe][2] corresponds to RI=4. To disable cqi resource in given subframe use 0 values for all cqi sizes. This has to be aligned with user allocation field. If field is left empty CQI processing is turned off for this user.",
                    "items": {
                        "$ref": "#/$defs/CqiSize"
                    },
                    "maxItems": 10,
                    "title": "Cqisizes",
                    "type": "array"
                },
                "srValue": {
                    "anyOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates scheduling request value. True - positive, False - negative. Lack of SR should be indicated by setting this field to None",
                    "title": "Srvalue"
                },
                "tddUciSettings": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TddUciSettings"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "TDD specific UCI parameters"
                }
            },
            "required": [
                "anBits",
                "cqiSizes",
                "tddUciSettings",
                "cqiRepType",
                "cqiBits",
                "srValue"
            ],
            "title": "PucchUserData",
            "type": "object"
        },
        "PucchUserResources": {
            "additionalProperties": false,
            "properties": {
                "cqi": {
                    "anyOf": [
                        {
                            "maximum": 1199,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/CqiEnum"
                        }
                    ],
                    "description": "CQI resource index",
                    "title": "Cqi"
                },
                "fmt1bCsAn": {
                    "description": "Ack/Nack resource index(es) for format 1b with channel selection. Resource indexes order: [nPUCCH0 , nPUCCH1 ,nPUCCH2 , nPUCCH3]",
                    "items": {
                        "anyOf": [
                            {
                                "maximum": 3599,
                                "minimum": 0,
                                "type": "integer"
                            },
                            {
                                "$ref": "#/$defs/CqiEnum"
                            }
                        ]
                    },
                    "maxItems": 4,
                    "minItems": 4,
                    "title": "Fmt1Bcsan",
                    "type": "array"
                },
                "fmt3An": {
                    "anyOf": [
                        {
                            "maximum": 499,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/CqiEnum"
                        }
                    ],
                    "description": "Ack/Nack resource index for format 3",
                    "title": "Fmt3An"
                },
                "legacyAn": {
                    "anyOf": [
                        {
                            "maximum": 3599,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/CqiEnum"
                        }
                    ],
                    "description": "Ack/Nack resource index for formats 1a/1b",
                    "title": "Legacyan"
                },
                "sr": {
                    "anyOf": [
                        {
                            "maximum": 3599,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "$ref": "#/$defs/CqiEnum"
                        }
                    ],
                    "description": "Scheduling request resource index",
                    "title": "Sr"
                }
            },
            "required": [
                "cqi",
                "fmt1bCsAn",
                "fmt3An",
                "legacyAn",
                "sr"
            ],
            "title": "PucchUserResources",
            "type": "object"
        },
        "PucchUserSettings": {
            "additionalProperties": false,
            "properties": {
                "anOnCqiRes": {
                    "description": "Indicates if Ack/Nack bits should be conveyed with CQI. Flag for non-CA cases",
                    "title": "Anoncqires",
                    "type": "boolean"
                },
                "cqiOnFmt3Res": {
                    "description": "Indicates if CQI bits should be conveyed with Ack/Nack bits on Format 3 resource",
                    "title": "Cqionfmt3Res",
                    "type": "boolean"
                },
                "cqiServingCell": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CqiServingCell"
                        }
                    ],
                    "description": "Indicates for which serving cell CQI is sent. Available values: 'NotRequested', 'PCell', 'SCell0', ..., 'SCell4', 'SCell5'"
                },
                "cwSchedInfo": {
                    "description": "Field defines number of transport blocks (TBs) scheduled for every DL CC configured for UE. List should be interpreted as: [PCellNumOfTBs, SCell0NumOfTBs, ..., SCell5NumOfTBs]",
                    "items": {
                        "$ref": "#/$defs/CwSchedInfoEnum"
                    },
                    "maxItems": 7,
                    "minItems": 1,
                    "title": "Cwschedinfo",
                    "type": "array"
                },
                "maxUsedRi": {
                    "description": "Indicates maximum used RI by user in its transmission, because it can be lower than it results from RI transmission size",
                    "items": {
                        "$ref": "#/$defs/MaxUsedRiEnum"
                    },
                    "maxItems": 1,
                    "title": "Maxusedri",
                    "type": "array"
                }
            },
            "required": [
                "anOnCqiRes",
                "cqiOnFmt3Res",
                "cqiServingCell",
                "cwSchedInfo",
                "maxUsedRi"
            ],
            "title": "PucchUserSettings",
            "type": "object"
        },
        "PucchUserSimulation": {
            "additionalProperties": false,
            "properties": {
                "channelType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelTypeModel"
                        }
                    ],
                    "description": "Type of simulated channel"
                },
                "frequencyOffset": {
                    "$ref": "#/$defs/FrequencyOffsetModel"
                },
                "maxDopplerFreq": {
                    "description": "Value of maximum Doppler frequency given in Hz",
                    "title": "Maxdopplerfreq",
                    "type": "number"
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                },
                "timeOffset": {
                    "$ref": "#/$defs/TimeOffset"
                },
                "transmissionDelay": {
                    "$ref": "#/$defs/TransmissionDelay"
                },
                "usedResource": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/UsedResource"
                        }
                    ],
                    "description": "Indicates on which PUCCH resource given user should transmit. Available resource types: 'None', 'SR', 'AnLegacy', 'AnCA', 'CQI'"
                }
            },
            "required": [
                "channelType",
                "frequencyOffset",
                "maxDopplerFreq",
                "snrs",
                "timeOffset",
                "usedResource",
                "transmissionDelay"
            ],
            "title": "PucchUserSimulation",
            "type": "object"
        },
        "PuschCsiReport": {
            "additionalProperties": false,
            "description": "CSI report for PUSCH user",
            "properties": {
                "number_of_ri_bits": {
                    "description": "Number of RI bits. Maps to riUsageMap in csiReportStruct and RiBitwidth in 5GMAX.",
                    "minimum": 0,
                    "title": "Number Of Ri Bits",
                    "type": "integer"
                },
                "number_of_wideband_csi_part2_bits_ri1": {
                    "description": "Bit size of wideband CSI part 2 for the current report when RI = 1. Maps to numOfWidebandCsiPart2BitsRi1 in csiReportStruct and Csi2Size in 5GMAX.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Number Of Wideband Csi Part2 Bits Ri1",
                    "type": "integer"
                },
                "number_of_wideband_csi_part2_bits_ri2": {
                    "description": "Bit size of wideband CSI part 2 for the current report when RI = 2. Maps to numOfWidebandCsiPart2BitsRi2 in csiReportStruct and Csi2Size in 5GMAX.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Number Of Wideband Csi Part2 Bits Ri2",
                    "type": "integer"
                },
                "number_of_wideband_csi_part2_bits_ri3": {
                    "description": "Bit size of wideband CSI part 2 for the current report when RI = 3. Maps to numOfWidebandCsiPart2BitsRi3 in csiReportStruct and Csi2Size in 5GMAX.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Number Of Wideband Csi Part2 Bits Ri3",
                    "type": "integer"
                },
                "number_of_wideband_csi_part2_bits_ri4": {
                    "description": "Bit size of wideband CSI part 2 for the current report when RI = 4. Maps to numOfWidebandCsiPart2BitsRi4 in PuschReceiveReq and Csi2Size in 5GMAX.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Number Of Wideband Csi Part2 Bits Ri4",
                    "type": "integer"
                },
                "ri_start_position": {
                    "description": "Position of the first bit of the RI bit sequence in CSI part 1 decoded bits. Maps to riStartPos in csiReportStruct and RiStartPos in 5GMAX.",
                    "minimum": 0,
                    "title": "Ri Start Position",
                    "type": "integer"
                }
            },
            "required": [
                "ri_start_position",
                "number_of_ri_bits",
                "number_of_wideband_csi_part2_bits_ri1",
                "number_of_wideband_csi_part2_bits_ri2",
                "number_of_wideband_csi_part2_bits_ri3",
                "number_of_wideband_csi_part2_bits_ri4"
            ],
            "title": "PuschCsiReport",
            "type": "object"
        },
        "PuschDmrs": {
            "additionalProperties": false,
            "description": "PUSCH DMRS parameters for a single user",
            "properties": {
                "antenna_port_indices": {
                    "description": "Indices of user's antenna ports. Maps to antPort in PuschReceiveReqGrant message. Maps to DMRSPortIndex, PuschRsReIdx and PuschPtrsReIdx in 5GMax.",
                    "items": {},
                    "title": "Antenna Port Indices",
                    "type": "array"
                },
                "length": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Length"
                        }
                    ],
                    "description": "Length of a single DM-RS sequence. DM-RS with length equal to 1 is called single-symbol DM-RS, with length equal to 2 is called double-symbol DM-RS. Maps to ulDmrsLen in UlDataPuschReceiveReq message. Maps to AllocDmrsSymbols in 5GMax."
                },
                "mapping_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/MappingType"
                        }
                    ],
                    "description": "DM-RS mapping type. Maps to ulDmrsMappingType in UlDataPuschReceiveReq message. 3GPP 38.211 6.4.1.1.3. Maps to AllocDmrsSymbols in 5GMax."
                },
                "nsc_id": {
                    "description": "Scrambling code index used in DM-RS scrambling sequence initialization equation. Maps to nscId in PuschReceiveReqGrant and NScid in 5Gmax",
                    "maximum": 1,
                    "minimum": 0,
                    "title": "Nsc Id",
                    "type": "integer"
                },
                "number_of_cdm_groups_without_data": {
                    "description": "Number of CDM groups without data. Maps to numOfDmrsCdmGroupWithoutData in PuschReceiveReqGrant message. Maps to CdmGroupsWithoutData in 5GMax.",
                    "maximum": 3,
                    "minimum": 1,
                    "title": "Number Of Cdm Groups Without Data",
                    "type": "integer"
                },
                "scrambling_sequences": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ScramblingSequence"
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "DMRS Scrambling sequence initialization array. Corresponds to respective scramblingID if set and to physical cell ID otherwise. Maps to NIdDmrs in 5GMax",
                    "title": "Scrambling Sequences"
                }
            },
            "required": [
                "scrambling_sequences",
                "antenna_port_indices",
                "mapping_type",
                "length",
                "number_of_cdm_groups_without_data",
                "nsc_id"
            ],
            "title": "PuschDmrs",
            "type": "object"
        },
        "PuschEcpri": {
            "additionalProperties": false,
            "description": "eCPRI configuration object",
            "properties": {
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pattern_id": {
                    "description": "array[2] of u16beam patternIds to be used for PUSCH reception for this grant, and the eCPRI control message generation. Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive.",
                    "items": {
                        "$ref": "#/$defs/PatternIdItem"
                    },
                    "maxItems": 4,
                    "minItems": 2,
                    "title": "Pattern Id",
                    "type": "array"
                }
            },
            "required": [
                "ce_axc_indices",
                "pattern_id"
            ],
            "title": "PuschEcpri",
            "type": "object"
        },
        "PuschEcpriFcpSectionConfig": {
            "additionalProperties": false,
            "description": "eCPRI Fcp Section configuration object, maps to eCpriFcpSectionConfig in UlData::puschReceiveReqGrant",
            "properties": {
                "fcp_add_section": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/FcpAddSection"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Indicates if additional (second) section is generated to cover allocation of the grant. maps to fcpAddSectionEnable in UlData::eCpriFcpSectionConfig"
                },
                "fcp_num_prbc": {
                    "description": "Number of allocated PRB to be used for generation of the primary eCPRI control section for a given grant. maps to fcpNumPrbc in UlData::eCpriFcpSectionConfig",
                    "maximum": 273,
                    "minimum": 1,
                    "title": "Fcp Num Prbc",
                    "type": "integer"
                },
                "fcp_start_prbc": {
                    "description": "Starting PRB index to be filled directly in the primary eCPRI control section for a given grant, maps to fcpStartPrbc in UlData::eCpriFcpSectionConfig",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Fcp Start Prbc",
                    "type": "integer"
                }
            },
            "required": [
                "fcp_start_prbc",
                "fcp_num_prbc",
                "fcp_add_section"
            ],
            "title": "PuschEcpriFcpSectionConfig",
            "type": "object"
        },
        "PuschHarq": {
            "additionalProperties": false,
            "description": "PUSCH HARQ parameters for a single user",
            "properties": {
                "adaptive_harq_retransmission": {
                    "$ref": "#/$defs/AdaptiveHarqRetransmission"
                },
                "delay_in_transmission": {
                    "description": "Delay between DCI and sending data on PUSCH, measured in slots",
                    "minimum": 0,
                    "title": "Delay In Transmission",
                    "type": "integer"
                },
                "maximum_number_of_harq_transmissions": {
                    "description": "Maximum number of HARQ transmissions, including initial",
                    "minimum": 0,
                    "title": "Maximum Number Of Harq Transmissions",
                    "type": "integer"
                },
                "redundancy_version_index": {
                    "description": "Redundancy version index. If more than one element is set HARQ Incremental Redundancy (IR) is enabled, otherwise chase c, ge=0, le=4ombining (CC) is enabled. Each value in the array corresponds to RV value in the subsequent retransmission. Should be set to 0 for initial transmission. Maps to RvStack1 in 5gmax",
                    "items": {
                        "$ref": "#/$defs/RedundancyVersionIndexItem"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Redundancy Version Index",
                    "type": "array"
                },
                "slot_aggregation_factor": {
                    "$ref": "#/$defs/SlotAggregationFactor"
                }
            },
            "required": [
                "delay_in_transmission",
                "maximum_number_of_harq_transmissions",
                "redundancy_version_index",
                "adaptive_harq_retransmission",
                "slot_aggregation_factor"
            ],
            "title": "PuschHarq",
            "type": "object"
        },
        "PuschPtrs": {
            "additionalProperties": false,
            "description": "PUSCH PTRS parameters for a single user",
            "properties": {
                "frequency_density": {
                    "$ref": "#/$defs/FrequencyDensity"
                }
            },
            "required": [
                "frequency_density"
            ],
            "title": "PuschPtrs",
            "type": "object"
        },
        "PuschSinrSounding": {
            "additionalProperties": false,
            "description": "Potential UE SNR in cell",
            "properties": {
                "phyCellId": {
                    "$ref": "#/$defs/PhysCellId"
                },
                "snr": {
                    "items": {
                        "type": "number"
                    },
                    "minItems": 1,
                    "title": "Snr",
                    "type": "array"
                }
            },
            "required": [
                "phyCellId",
                "snr"
            ],
            "title": "PuschSinrSounding",
            "type": "object"
        },
        "PuschTolerance": {
            "additionalProperties": false,
            "properties": {
                "cell": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CellTolerance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cellAnt": {
                    "$ref": "#/$defs/CellAnt"
                },
                "cellPrb": {
                    "$ref": "#/$defs/CellPrb"
                },
                "ulSinrResp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/UlSinrResp"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "user": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/UserTolerances"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "cell",
                "cellAnt",
                "cellPrb",
                "ulSinrResp",
                "user"
            ],
            "title": "PuschTolerance",
            "type": "object"
        },
        "PuschTransformPrecoder": {
            "additionalProperties": false,
            "properties": {
                "use_dmrs_sequence_low_papr_rel16": {
                    "description": "Allows to enable the Release16 DMRS sequence for a PUSCH UE, that causes an increase in transmitted power, by default the Rel15 DMRS sequence is used. Rel16 DMRS sequence is pi/2-BPSK modulated CGS (computer generated sequence). Maps to dmrsSequenceType in PuschReceiveReqGrant message. Maps to LowPaprSeqTPR16 in 5GMax.",
                    "title": "Use Dmrs Sequence Low Papr Rel16",
                    "type": "boolean"
                }
            },
            "required": [
                "use_dmrs_sequence_low_papr_rel16"
            ],
            "title": "PuschTransformPrecoder",
            "type": "object"
        },
        "PuschTransmissionCoherence": {
            "description": "PUSCH transmission coherence. Used to determine the codebook for computation of the metrics MECG\n(Maximal Effective Channel Gain) and SLP (Sum Layer Power). Maps to puschTransCoherence in\nPuschReceiveReq and to PuschTransCoherence in 5GMAX",
            "enum": [
                "nonCoherent",
                "fullCoherent"
            ],
            "title": "PuschTransmissionCoherence",
            "type": "string"
        },
        "PuschTransmissionCoherence1": {
            "description": "PUSCH transmission coherence. Used to determine the codebook for computation of the metrics MECG (Maximal\n Effective Channel Gain) and SLP (Sum Layer Power). Maps to puschTransCoherence in SRSReceiveReq and to\n PuschTransCoherence in 5GMAX",
            "enum": [
                "nonCoherent",
                "partialCoherent",
                "fullCoherent"
            ],
            "title": "PuschTransmissionCoherence1",
            "type": "string"
        },
        "PuschUserData": {
            "additionalProperties": false,
            "properties": {
                "anBits": {
                    "$ref": "#/$defs/AnBits"
                },
                "cqiAllocSubfr": {
                    "description": "CQI allocation per subframe indicated by 1/0. Elements are looped until the frame is filled. This is repeated separately for each frame. This field must be aligned with user allocation field",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "title": "Cqiallocsubfr",
                    "type": "array"
                },
                "cqiRepType": {
                    "$ref": "#/$defs/CqiRepType"
                },
                "cqiSizes": {
                    "description": "Two-dimensional array[serving_cell][ri] of CQI sizes per serving cell. cqiSizes[serving_cell][x] corresponds to RI equal to x + 1. Fill unused serving cell elements with zeros. Defined CQI size will be sent when CQI transmission is enabled or switched to zeros if CQI transmission is disabled in given subframe. PUSCH CQI bits are random. Use cqiAllocSubfr field to enable/disable CQI transmission per subframe",
                    "items": {
                        "$ref": "#/$defs/CqiSize"
                    },
                    "maxItems": 7,
                    "title": "Cqisizes",
                    "type": "array"
                },
                "modulation": {
                    "$ref": "#/$defs/Modulation1"
                },
                "newUeIndexBitdisable": {
                    "description": "Value of True means useCaseSettings['newUeIndexBit'] = False.",
                    "title": "Newueindexbitdisable",
                    "type": "boolean"
                },
                "resetRiTabledisable": {
                    "description": "Value of True means useCaseSettings['resetRiTable'] = False.",
                    "title": "Resetritabledisable",
                    "type": "boolean"
                },
                "riBits": {
                    "description": "Two-dimensional array[subframe][bit] of RI bits per subframe. Subframe elements are looped until the frame is filled. This is repeated separately for each frame. Subframe element is sum of RI bits for every serving cell defined in RI sizes field (RI sizes = [2;2] means the 4 bits need to be defined). Leave subframe element empty to disable RI transmission in given subframe. This must be alligned with user allocation field",
                    "items": {
                        "$ref": "#/$defs/RiBit"
                    },
                    "maxItems": 10,
                    "title": "Ribits",
                    "type": "array"
                },
                "riSizes": {
                    "description": "RI sizes per serving cell. Defined RI size will be sent when RI transmission is enabled or switched to zero if RI transmission is disabled in given subframe. Use riBits field to enable/disable RI transmission per subframe. Set 0 for not used serving cells. No more than 2 serving cells can receive non-zero values",
                    "items": {
                        "$ref": "#/$defs/RiSize"
                    },
                    "maxItems": 7,
                    "title": "Risizes",
                    "type": "array"
                },
                "tbSize": {
                    "description": "Size of transport block. Maximum available size is 75376. TB pattern in 4GMax should be set to random",
                    "title": "Tbsize",
                    "type": "integer"
                },
                "tddUciSettings": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/TddUciSettings"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "TDD specific UCI parameters"
                }
            },
            "required": [
                "anBits",
                "tddUciSettings",
                "cqiSizes",
                "cqiRepType",
                "riBits",
                "riSizes",
                "modulation",
                "tbSize",
                "cqiAllocSubfr",
                "newUeIndexBitdisable",
                "resetRiTabledisable"
            ],
            "title": "PuschUserData",
            "type": "object"
        },
        "PuschUserFlexComp": {
            "additionalProperties": false,
            "properties": {
                "fftDataReqPattern": {
                    "description": "Determines which cells will deliver post fft data of this user and in which ttis. The first level of this two dimensional array represents ttis and the second one represents phyCellIds of cells. Extended up to the number of subframes while processing in TRX",
                    "items": {
                        "$ref": "#/$defs/FftDataReqPatternItem"
                    },
                    "maxItems": 10,
                    "title": "Fftdatareqpattern",
                    "type": "array"
                },
                "sinrReqPattern": {
                    "description": "Determines which cells will deliver sinr measurement of this user in which ttis. The first level of this two dimensional array represents ttis and the second one represents phyCellIds of cells. Extended up to the number of subframes while processing in TRX",
                    "items": {
                        "items": {
                            "$ref": "#/$defs/PhysCellId"
                        },
                        "type": "array"
                    },
                    "maxItems": 10,
                    "title": "Sinrreqpattern",
                    "type": "array"
                },
                "sinrSoundings": {
                    "description": "Array of SNRs for neighboring cells",
                    "items": {
                        "$ref": "#/$defs/PuschSinrSounding"
                    },
                    "title": "Sinrsoundings",
                    "type": "array"
                }
            },
            "required": [
                "sinrReqPattern",
                "fftDataReqPattern",
                "sinrSoundings"
            ],
            "title": "PuschUserFlexComp",
            "type": "object"
        },
        "PuschUserHarqControl": {
            "additionalProperties": false,
            "properties": {
                "ReTx": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschUserHarqControlReTx"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Mode emulating synchronous non-bundling transmission"
                },
                "TTIB": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschUserHarqControlTtib"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Mode for synchronous or asynchronous TTI bundling"
                }
            },
            "required": [
                "TTIB",
                "ReTx"
            ],
            "title": "PuschUserHarqControl",
            "type": "object"
        },
        "PuschUserHarqControlReTx": {
            "additionalProperties": false,
            "properties": {
                "delay": {
                    "$ref": "#/$defs/Delay"
                },
                "startSubframe": {
                    "description": "Indicates when user transmission is started and which harq process is used. Caution: it is interpreted differently depending on tdd_ul_dl_config. For tdd_ul_dl_config={1,2}, it means the time of DL control channel transmission (ack/nack) which triggers retx at startSubframe+delay. For tdd_ul_dl_config=0, it means directly the start of UL transmission.",
                    "minimum": 0,
                    "title": "Startsubframe",
                    "type": "integer"
                }
            },
            "required": [
                "delay",
                "startSubframe"
            ],
            "title": "PuschUserHarqControlReTx",
            "type": "object"
        },
        "PuschUserHarqControlTtib": {
            "additionalProperties": false,
            "properties": {
                "cyclicProcesses": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CyclicProcesses"
                        }
                    ],
                    "description": "The number of asynchronous harq processes changing cyclically. Bundling legacy UE can have up to 4 processes whereas for CE UEs the currently supported maximum is 3. 0 indicates synchronous harq process (UlStandard)."
                },
                "gap": {
                    "$ref": "#/$defs/Gap"
                },
                "startSubframeConfig0": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/StartSubframeConfig0"
                        }
                    ],
                    "description": "Index of the first transmission in a bundle. Valid only when tdd_uplink_downlink_configuration=0"
                },
                "txCount": {
                    "$ref": "#/$defs/TxCount1"
                }
            },
            "required": [
                "gap",
                "cyclicProcesses",
                "txCount",
                "startSubframeConfig0"
            ],
            "title": "PuschUserHarqControlTtib",
            "type": "object"
        },
        "PuschUserResources": {
            "additionalProperties": false,
            "properties": {
                "ackOffsetIndex": {
                    "description": "Index of PUSCH codeword transmission offset for Ack/Nack",
                    "title": "Ackoffsetindex",
                    "type": "integer"
                },
                "cqiOffsetIndex": {
                    "description": "Index of PUSCH codeword transmission offset for CQI",
                    "title": "Cqioffsetindex",
                    "type": "integer"
                },
                "firstPrbSndSlot": {
                    "description": "PRBs number of the lowest-numbered physical resource block in the second slot. Used for intra-TTI frequency hopping",
                    "title": "Firstprbsndslot",
                    "type": "integer"
                },
                "firstPrbs": {
                    "description": "Each element of the list corresponds to PRBs number of the lowest-numbered physical resource block (RB) in RBs set. Number of RB sets is equal to number of elements of the list",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Firstprbs",
                    "type": "array"
                },
                "initNumPrbs": {
                    "description": "Number of PRBs in initial transmission",
                    "title": "Initnumprbs",
                    "type": "integer"
                },
                "numPrbs": {
                    "description": "Sum of number PRBs value must satisfy following formula (2^a)*(3^b)*(5^c),where a, b, c are natural numbers.The max value is 100",
                    "items": {
                        "$ref": "#/$defs/NumPrb"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Numprbs",
                    "type": "array"
                },
                "riOffsetIndex": {
                    "description": "Index of PUSCH codeword transmission offset for RI",
                    "title": "Rioffsetindex",
                    "type": "integer"
                }
            },
            "required": [
                "firstPrbs",
                "numPrbs",
                "initNumPrbs",
                "firstPrbSndSlot",
                "ackOffsetIndex",
                "riOffsetIndex",
                "cqiOffsetIndex"
            ],
            "title": "PuschUserResources",
            "type": "object"
        },
        "PuschUserSettings": {
            "additionalProperties": false,
            "properties": {
                "demRefSigCs": {
                    "description": "paramNdmrs from PhyData's PuschUeReceiveReq. Defines demodulation reference signal cyclic shift cell specific index for PUSCH.",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Demrefsigcs",
                    "type": "integer"
                },
                "initSimultaneousSrs": {
                    "description": "Indicates whether SRS is scheduled in initial transmission",
                    "title": "Initsimultaneoussrs",
                    "type": "boolean"
                },
                "isMsg3Enabled": {
                    "description": "Indicates whether msg3 reception is enabled. Msg3 is used for snapshot handling",
                    "title": "Ismsg3Enabled",
                    "type": "boolean"
                },
                "maxUsedRi": {
                    "description": "Indicates maximum used RI by user in its transmission, because it can be lower than it results from RI transmission size",
                    "items": {
                        "$ref": "#/$defs/MaxUsedRiEnum"
                    },
                    "maxItems": 2,
                    "title": "Maxusedri",
                    "type": "array"
                },
                "simultaneousSrs": {
                    "description": "Indicates whether SRS is scheduled in the same subframe",
                    "title": "Simultaneoussrs",
                    "type": "boolean"
                },
                "tbSchedInfo": {
                    "$ref": "#/$defs/PuschUserSettingsTbSchedInfo"
                }
            },
            "required": [
                "isMsg3Enabled",
                "simultaneousSrs",
                "initSimultaneousSrs",
                "tbSchedInfo",
                "maxUsedRi",
                "demRefSigCs"
            ],
            "title": "PuschUserSettings",
            "type": "object"
        },
        "PuschUserSettingsTbSchedInfo": {
            "description": "Field defines number of transport blocks (TBs) scheduled for every DL CC configured for UE. List should be\ninterpreted as: [PCellNumOfTBs, SCell0NumOfTBs, ..., SCell5NumOfTBs]",
            "items": {
                "$ref": "#/$defs/CwSchedInfoEnum"
            },
            "maxItems": 7,
            "title": "PuschUserSettingsTbSchedInfo",
            "type": "array"
        },
        "PuschUserSimulation": {
            "additionalProperties": false,
            "properties": {
                "channelType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelTypeModel"
                        }
                    ],
                    "description": "Type of simulated channel"
                },
                "directionOfArrival": {
                    "description": "Angle between incoming signal and antenna",
                    "title": "Directionofarrival",
                    "type": "number"
                },
                "frequencyOffset": {
                    "$ref": "#/$defs/FrequencyOffsetModel"
                },
                "maxDopplerFreq": {
                    "description": "Value of maximum Doppler frequency given in Hz",
                    "title": "Maxdopplerfreq",
                    "type": "number"
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                },
                "timeOffset": {
                    "$ref": "#/$defs/TimeOffset"
                },
                "transmissionDelay": {
                    "$ref": "#/$defs/TransmissionDelay"
                }
            },
            "required": [
                "channelType",
                "directionOfArrival",
                "frequencyOffset",
                "maxDopplerFreq",
                "snrs",
                "timeOffset",
                "transmissionDelay"
            ],
            "title": "PuschUserSimulation",
            "type": "object"
        },
        "RadioFrameAllocationPeriod": {
            "description": "RADIO FRAME FOR MBSFN MEETS SFN MOD RADIOFRAMEALLOCATIONPERIOD  =  radioframeAllocationOffset.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "RadioFrameAllocationPeriod",
            "type": "integer"
        },
        "RateMatchingOverhead": {
            "description": "Overhead of the DM-RS CDM groups without data, in the field configured by higher layer parameter xOverhead\n in PxSCH-ServingCellConfig",
            "enum": [
                0,
                6,
                12,
                18
            ],
            "title": "RateMatchingOverhead",
            "type": "integer"
        },
        "RbgSizeConfiguration": {
            "description": "The configuration to determine RBG size in 38.214 table 5.1.2.2.1-1. It is used to determine rbgSize in\n PdschSendReq message. Maps to RBGsize in 5GMax. Relevant only for RAT0.",
            "enum": [
                1,
                2
            ],
            "title": "RbgSizeConfiguration",
            "type": "integer"
        },
        "ReadCapture": {
            "description": "Switch for handling of antenna buffer and captured samples, which is mapped to ParUnit{}.AntIf.ReadCapture.\nValues: 0 - disabled, 1 - read captured samples from files listed in ParUnit{}.AntIf.CaptureFiles, -1 - store\ncontent of data buffer to specific files listed in ParUnit{}.AntIf.CaptureFiles",
            "enum": [
                -1,
                0,
                1
            ],
            "title": "ReadCapture",
            "type": "integer"
        },
        "Reason": {
            "description": "Maps to reason in AntennaSnapshotConfigurationReq message.",
            "enum": [
                "NotSet",
                "TxPowerFailureSleepingCell",
                "Msg3FailuresSleepingCell",
                "Msg4Msg5FailuresSleepingCell",
                "Reserved"
            ],
            "title": "Reason",
            "type": "string"
        },
        "Receiver": {
            "additionalProperties": false,
            "properties": {
                "actDownSampling": {
                    "description": "Enable downsampling in case of 20MHz bandwidth",
                    "title": "Actdownsampling",
                    "type": "boolean"
                },
                "gainCorrectionPrach": {
                    "anyOf": [
                        {
                            "maximum": 60.0,
                            "minimum": -60.0,
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Valid only for TDD on LF and Loki when actEcpri is true. Defines the UL gain correction of rxPowerScaling for PRACH channel. Format is [dB], step size is 0.01 [dB]. The final rxPowerScaling(Prach) equals (rxPowerScaling[0] + gainCorrectionPrach).",
                    "title": "Gaincorrectionprach"
                },
                "gainCorrectionPuxchSrs": {
                    "anyOf": [
                        {
                            "maximum": 60.0,
                            "minimum": -60.0,
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Valid only for TDD on LF and Loki when actEcpri is true. Defines the UL gain correction of rxPowerScaling for PUSCH, PUCCH and SRS channels. Format is [dB], step size is 0.01 [dB]. The final rxPowerScaling(Puxch/Srs) equals (rxPowerScaling[0] + gainCorrectionPuxchSrs).",
                    "title": "Gaincorrectionpuxchsrs"
                },
                "hsTrainScenario": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/HsTrainScenario"
                        }
                    ],
                    "description": "High speed train scenario setting for PUCCH, PUSCH and SRS. Accepted values are: 'NotApplied', 'Scenario 1', 'Scenario 3'"
                },
                "l2PoolId": {
                    "$ref": "#/$defs/L2PoolId"
                },
                "orderIrc": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/OrderIrcEnum"
                            },
                            "maxItems": 10,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "IRC order selection for all subframes in radio frame (255 - deactivated, 0 - 2IRC, 1 - 4IRC). Valid for TDD + MIMO cases. Maps to OrderIRC in 5gmax and UlReceiveReq. Elements are looped until the frame is filled. This is repeated separately for each frame.",
                    "title": "Orderirc"
                },
                "powerScaling": {
                    "description": "Receiver's antennas power scalings in dBm. Length of this list must be equal to numOfAnts",
                    "items": {
                        "type": "number"
                    },
                    "maxItems": 64,
                    "minItems": 1,
                    "title": "Powerscaling",
                    "type": "array"
                },
                "sectorWeights": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ComplexNumber"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Predefined sector beamforming weights for PUSCH non-allocated PRB. Number of weights can be only 16 or 32 complex numbers.",
                    "title": "Sectorweights"
                }
            },
            "required": [
                "actDownSampling",
                "gainCorrectionPrach",
                "gainCorrectionPuxchSrs",
                "hsTrainScenario",
                "l2PoolId",
                "powerScaling",
                "orderIrc",
                "sectorWeights"
            ],
            "title": "Receiver",
            "type": "object"
        },
        "ReceiverDelay": {
            "additionalProperties": false,
            "properties": {
                "receiver": {
                    "description": "Receiver index. Maps to StaticRawSrsConf.ReceiverDelays[].Receiver",
                    "minimum": 0,
                    "title": "Receiver",
                    "type": "integer"
                },
                "receiver_delay": {
                    "description": "Delay of the receiver. Maps to StaticRawSrsConf.ReceiverDelays[].Delay",
                    "title": "Receiver Delay",
                    "type": "integer"
                }
            },
            "required": [
                "receiver",
                "receiver_delay"
            ],
            "title": "ReceiverDelay",
            "type": "object"
        },
        "ReceiverType": {
            "description": "Receiver type. If set to value other than null will force 5GMax to use given receiver type.\nApplies to all uplink channels. Maps to Equalizer in 5GMax.",
            "enum": [
                "MuMimoMmseIrc",
                "MMSE5GPoC",
                "IRC",
                "MuMimoMmse",
                "MimoMLD",
                null
            ],
            "title": "ReceiverType"
        },
        "RedundancyVersionIndex": {
            "maximum": 3,
            "minimum": 0,
            "title": "RedundancyVersionIndex",
            "type": "integer"
        },
        "RedundancyVersionIndexItem": {
            "maximum": 3,
            "minimum": 0,
            "title": "RedundancyVersionIndexItem",
            "type": "integer"
        },
        "RefSignal": {
            "additionalProperties": false,
            "properties": {
                "groupAssignment": {
                    "description": "Reference signal sequence shift between PUSCH and PUCCH",
                    "title": "Groupassignment",
                    "type": "integer"
                },
                "isGroupHopping": {
                    "description": "Indicates whether reference signal group hopping is enabled",
                    "title": "Isgrouphopping",
                    "type": "boolean"
                },
                "refSigCyclicShift": {
                    "description": "Demodulation reference signal cyclic shift cell specific index for PUSCH",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Refsigcyclicshift",
                    "type": "integer"
                }
            },
            "required": [
                "groupAssignment",
                "isGroupHopping",
                "refSigCyclicShift"
            ],
            "title": "RefSignal",
            "type": "object"
        },
        "RegBundleSize": {
            "description": "INDICATES L PARAMETER AS DEFINED IN 38.211 SECTION 7.3.2.2. L = 6 for non-interleaved CCE-to-REG mapping.\nFOR INTERLEAVED CCE-TO-REG MAPPING, L={2,6} IF CORESET SYMBOL NUMBER IS 1, HERE L = {number_of_symbols,6} if coreset\nsymbol number is {2,3}. For coreset0, L is 6. Maps to regBundleSize in PdcchSendReq message.\nMaps to RegBundleSizeIdx in 5GMax.",
            "enum": [
                2,
                3,
                6
            ],
            "title": "RegBundleSize",
            "type": "integer"
        },
        "RemoteInterference": {
            "additionalProperties": false,
            "properties": {
                "riMode": {
                    "$ref": "#/$defs/RiMode"
                },
                "selectedAntennas": {
                    "items": {
                        "$ref": "#/$defs/SelectedAntenna"
                    },
                    "maxItems": 64,
                    "title": "Selectedantennas",
                    "type": "array"
                },
                "sequenceDetector": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SequenceDetectorItem"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "virtualBts": {
                    "items": {
                        "$ref": "#/$defs/VirtualBt"
                    },
                    "maxItems": 8,
                    "title": "Virtualbts",
                    "type": "array"
                }
            },
            "required": [
                "riMode",
                "sequenceDetector",
                "selectedAntennas",
                "virtualBts"
            ],
            "title": "RemoteInterference",
            "type": "object"
        },
        "RequestType": {
            "description": "Request type. Maps to requestType in AntennaSnapshotReq message.",
            "enum": [
                "LoggingAgent",
                "Testport",
                "SuspiciousEventL1",
                "SuspiciousEventL2"
            ],
            "title": "RequestType",
            "type": "string"
        },
        "Resource": {
            "additionalProperties": false,
            "properties": {
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ecpri_section_id": {
                    "description": "ECPRI section id. Maps to PucchReceiveReq.subcells[].pucchResources[].eCpriSectionId[]",
                    "items": {
                        "$ref": "#/$defs/EcpriSectionIdItem"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Ecpri Section Id",
                    "type": "array"
                },
                "first_symbol": {
                    "description": "The first symbol of the transmitted PUCCH resource. Maps to firstSymbol in PucchReceiveReq message. Maps to DataOfdmSymb in 5GMax.",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "First Symbol",
                    "type": "integer"
                },
                "frequency_hopping": {
                    "description": "PUCCH frequency hopping. true when ENABLED, false when DISABLED. Maps to frequencyHopping in PucchReceiveReq and PucchFreqHopping in 5GMAX.",
                    "title": "Frequency Hopping",
                    "type": "boolean"
                },
                "initial_cyclic_shift": {
                    "description": "Index for an initial cyclic shift for PUCCH CDM for Format 0 and 1. Maps to initialCyclicShift in PucchReceiveReq message.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Initial Cyclic Shift",
                    "type": "integer"
                },
                "number_of_prbs": {
                    "description": "Number of PRBs of current grant. Maps to numOfPrb in PucchReceiveReq message. Maps to NumRB in 5GMax.",
                    "maximum": 16,
                    "minimum": 1,
                    "title": "Number Of Prbs",
                    "type": "integer"
                },
                "number_of_symbols": {
                    "description": "Number of symbols the UE transmits on. Maps to numOfSymbols in PucchReceiveReq message. Maps to DataOfdmSymb in 5GMax.",
                    "maximum": 14,
                    "minimum": 1,
                    "title": "Number Of Symbols",
                    "type": "integer"
                },
                "second_hop_prb": {
                    "description": "Second hop prb. Maps to secondHopPrb in PucchReceiveReq and in 5GMAX.",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Second Hop Prb",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "The first PRB of the grant allocated to the UE. Maps to startPrb in PucchReceiveReq message. Maps to StartPrb in 5GMax.",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                },
                "static_allocation_regions": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StaticAllocationRegion"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Required when static long pucch is enabled. Maps to long pucch resource allocation region defined in static_long_pucch_config_ecpri.{lower/upper common/dedicated}"
                },
                "time_domain_occ": {
                    "description": "Orthogonal cover index i for Format 1 as specified in 38.211, table 6.3.2.4.1-2. Maps to UlData_PucchReceiveReq.subcells.pucchResources.timeDomainOcc in messages and to ParCell.MAC.ULMAP.PucchResourceConfig.OrthSeqIdx in 5gmax.",
                    "maximum": 6,
                    "minimum": 0,
                    "title": "Time Domain Occ",
                    "type": "integer"
                }
            },
            "required": [
                "start_prb",
                "number_of_prbs",
                "first_symbol",
                "number_of_symbols",
                "second_hop_prb",
                "frequency_hopping",
                "initial_cyclic_shift",
                "time_domain_occ",
                "ecpri_section_id",
                "static_allocation_regions",
                "ce_axc_indices"
            ],
            "title": "Resource",
            "type": "object"
        },
        "ResourceGridAllocation": {
            "additionalProperties": false,
            "description": "None if there is no allocation in a certain slot; if a certain slot (slots) are not present in the allocation\narray, they will be allocated and settings will be inherited from the previous allocated slot (i.e. if slot0 is\nallocated in a A way and slot4 is allocated in a B way, then slots 1-3 will also be populated with A way\nallocation. If the UE is meant to transmit in slot0 and slot4, then slot1 shall be allocated with null,\nand then this null will be populated in slots 2-3.",
            "properties": {
                "prbs": {
                    "description": "List of prbs occupied by this channel in this slot",
                    "items": {
                        "$ref": "#/$defs/Prb1"
                    },
                    "minItems": 1,
                    "title": "Prbs",
                    "type": "array"
                },
                "symbols": {
                    "description": "List of symbols",
                    "items": {
                        "$ref": "#/$defs/Symbol"
                    },
                    "minItems": 1,
                    "title": "Symbols",
                    "type": "array"
                }
            },
            "required": [
                "prbs",
                "symbols"
            ],
            "title": "ResourceGridAllocation",
            "type": "object"
        },
        "ResourceUnits": {
            "description": "Number of resource units. Determines length of transmission in time.",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                10
            ],
            "title": "ResourceUnits",
            "type": "integer"
        },
        "RiBit": {
            "items": {},
            "title": "RiBit",
            "type": "array"
        },
        "RiMode": {
            "enum": [
                "Default",
                "LTE5726"
            ],
            "title": "RiMode",
            "type": "string"
        },
        "RiPreamble": {
            "additionalProperties": false,
            "description": "DL remote inference preamble configuration.",
            "properties": {
                "enable_ri_tx": {
                    "description": "The enable flag for the remote interference preamble in Tx part. Maps to ParUnit.RiPreamble.TxEnable in 5GMax.",
                    "title": "Enable Ri Tx",
                    "type": "boolean"
                },
                "tx_signature_id": {
                    "description": "RI sequence ID for first special subframe (3 MSB) and second one (3 LSB). Maps to ParUnit.RiPreamble.TxSignatureId in 5GMax. ",
                    "title": "Tx Signature Id",
                    "type": "integer"
                }
            },
            "required": [
                "enable_ri_tx",
                "tx_signature_id"
            ],
            "title": "RiPreamble",
            "type": "object"
        },
        "RiSize": {
            "maximum": 5,
            "minimum": 0,
            "title": "RiSize",
            "type": "integer"
        },
        "Rim": {
            "additionalProperties": false,
            "description": "RIM send request",
            "properties": {
                "e_cpri_config": {
                    "$ref": "#/$defs/ECpriConfig"
                },
                "msg_count_ctrl": {
                    "description": "Message count control for indicating number of messages sent by 5G-L2-PS. Contains three bit fields, for more information see 5G_L1_IF_113",
                    "title": "Msg Count Ctrl",
                    "type": "integer"
                },
                "rim_allocation_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RimAllocationConfig"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "defining symbols and sub-bands allocated for remote interference management (5G_L1_IF_14749)"
                },
                "rim_rs_detection_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RimRsDetection"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "sfn": {
                    "title": "Sfn",
                    "type": "integer"
                },
                "slot": {
                    "title": "Slot",
                    "type": "integer"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                },
                "unscheduled_region_info": {
                    "items": {
                        "$ref": "#/$defs/UnscheduledRegionInfoItem"
                    },
                    "title": "Unscheduled Region Info",
                    "type": "array"
                }
            },
            "required": [
                "sfn",
                "slot",
                "msg_count_ctrl",
                "e_cpri_config",
                "unscheduled_region_info",
                "timing_advance",
                "rim_allocation_config",
                "rim_rs_detection_config"
            ],
            "title": "Rim",
            "type": "object"
        },
        "RimAllocationConfig": {
            "additionalProperties": false,
            "description": "defining symbols and sub-bands allocated for remote interference management (5G_L1_IF_14749)",
            "properties": {
                "num_of_prb_per_subband": {
                    "description": "Number of PRB for each sub-band. Only 6 PRB per sub-band is supported",
                    "maximum": 6,
                    "minimum": 6,
                    "title": "Num Of Prb Per Subband",
                    "type": "integer"
                },
                "num_of_subbands": {
                    "description": "Number of sub-bands allocated for RIM depending on the cell bandwidth",
                    "maximum": 5,
                    "minimum": 1,
                    "title": "Num Of Subbands",
                    "type": "integer"
                },
                "num_of_symbols": {
                    "description": "Number of symbols allocated for RIM (including NDM-SRS symbols, if any)",
                    "maximum": 14,
                    "minimum": 1,
                    "title": "Num Of Symbols",
                    "type": "integer"
                },
                "start_prb_per_subband": {
                    "description": "Start PRB for each sub-band",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 5,
                    "minItems": 5,
                    "title": "Start Prb Per Subband",
                    "type": "array"
                },
                "start_symbol": {
                    "description": "Starting symbol allocated for RIM",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                }
            },
            "required": [
                "start_symbol",
                "num_of_symbols",
                "num_of_subbands",
                "num_of_prb_per_subband",
                "start_prb_per_subband"
            ],
            "title": "RimAllocationConfig",
            "type": "object"
        },
        "RimRs": {
            "additionalProperties": false,
            "description": "RIMRS channel parameters for a single cell",
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/$defs/RimRsResource"
                    },
                    "minItems": 1,
                    "title": "Resources",
                    "type": "array"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvance"
                }
            },
            "required": [
                "resources",
                "timing_advance"
            ],
            "title": "RimRs",
            "type": "object"
        },
        "RimRsDetection": {
            "additionalProperties": false,
            "description": "RIM_RS 5GMax detection configuration",
            "properties": {
                "candidate_start_prb": {
                    "description": "UlData_RimReceiveReq::startPrb array",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Candidate Start Prb",
                    "type": "array"
                },
                "rim_rs_sequences": {
                    "items": {
                        "$ref": "#/$defs/RimRsSequence"
                    },
                    "maxItems": 8,
                    "minItems": 1,
                    "title": "Rim Rs Sequences",
                    "type": "array"
                },
                "rx_sc_offset": {
                    "description": "Uplink Subcarrier Offset for RIM-RS. Mapped to ParUnit{}.RX.RimRsDet.RxScOffset",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Rx Sc Offset",
                    "type": "integer"
                }
            },
            "required": [
                "candidate_start_prb",
                "rim_rs_sequences",
                "rx_sc_offset"
            ],
            "title": "RimRsDetection",
            "type": "object"
        },
        "RimRsResource": {
            "additionalProperties": false,
            "description": "Properties of single RIMRS sequence to be generated by 5GMAX",
            "properties": {
                "ce_axc_index": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "integer"
                            },
                            "maxItems": 4,
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Virtual port indices. Mapped to MAC.XLMAP{}.Resource{}.VPort",
                    "title": "Ce Axc Index"
                },
                "delta": {
                    "description": "Offset of RIM-RS sequence seed, used for sequence generation. Mapped to MAC.XLMAP{}.Resource{}.Delta",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "title": "Delta",
                    "type": "integer"
                },
                "num_of_prbs": {
                    "$ref": "#/$defs/NumOfPrbs"
                },
                "offsets": {
                    "description": "Time-domain offset, in unit of slot. Mapped to MAC.XLMAP{}.Resource{}.Offsets",
                    "title": "Offsets",
                    "type": "integer"
                },
                "pattern_id": {
                    "description": "Digital beamforming RimRs pattern id. Mapped to patternId in RimRsSendReq",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 2,
                    "minItems": 1,
                    "title": "Pattern Id",
                    "type": "array"
                },
                "periodicity": {
                    "description": "Time-domain periodicity, in unit of slot. Mapped to MAC.XLMAP{}.Resource{}.Periodicity",
                    "title": "Periodicity",
                    "type": "integer"
                },
                "relative_power": {
                    "description": "Relative power of RIM-RS resource connection in dB. Maps to  ParCell.MAC.ULMAP.Resource.RelPowDb. It is used in downlink to calculate the rimRsTransmitPower in RimRsSendReq",
                    "title": "Relative Power",
                    "type": "number"
                },
                "sequence_seed": {
                    "description": "Sequence seed value (n_scid). Mapped to MAC.XLMAP{}.Resource{}.SeqSeed.",
                    "maximum": 1023,
                    "minimum": 0,
                    "title": "Sequence Seed",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "Resource block to start rim_rs sequence. Used to calculate MAC.XLMAP{}.Resource{}.AllocRBs",
                    "maximum": 225,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                },
                "start_symbol": {
                    "description": "Start symbol locations witin a slot. Mapped to MAC.XLMAP{}.Resource{}.StartSymb",
                    "maximum": 14,
                    "minimum": 1,
                    "title": "Start Symbol",
                    "type": "integer"
                },
                "tx_sc_offset": {
                    "description": "Downlink Subcarrier Offset for RIM-RS. Mapped to ParCell{}.MAC.XLMAP{}.Resource{}.TxScOffset",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Tx Sc Offset",
                    "type": "integer"
                }
            },
            "required": [
                "sequence_seed",
                "delta",
                "periodicity",
                "offsets",
                "start_symbol",
                "start_prb",
                "num_of_prbs",
                "ce_axc_index",
                "pattern_id",
                "relative_power",
                "tx_sc_offset"
            ],
            "title": "RimRsResource",
            "type": "object"
        },
        "RimRsSend": {
            "additionalProperties": false,
            "properties": {
                "number_of_prbs_per_subband": {
                    "$ref": "#/$defs/NumberOfPrbsPerSubband"
                },
                "resources": {
                    "description": "Definition of RimRs sequences to be sent by aggressor cell",
                    "items": {
                        "$ref": "#/$defs/RimRsResource"
                    },
                    "minItems": 1,
                    "title": "Resources",
                    "type": "array"
                },
                "rim_rs_beamforming_vports": {
                    "description": "(5GMax) Rx virtual port indices used by each DBF enabled MS units, maps to DigitalBeamformingRimRs.RxVPorts",
                    "items": {
                        "type": "integer"
                    },
                    "maxItems": 4,
                    "minItems": 0,
                    "title": "Rim Rs Beamforming Vports",
                    "type": "array"
                },
                "virtual_bts": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/VirtualBts"
                        }
                    ],
                    "description": "RIM_RS aggressor cell"
                }
            },
            "required": [
                "resources",
                "virtual_bts",
                "rim_rs_beamforming_vports",
                "number_of_prbs_per_subband"
            ],
            "title": "RimRsSend",
            "type": "object"
        },
        "RimRsSequence": {
            "additionalProperties": false,
            "description": "UlData_RimReceiveReq::rimRsSeq structure",
            "properties": {
                "detection_units": {
                    "items": {
                        "$ref": "#/$defs/DetectionUnit"
                    },
                    "maxItems": 56,
                    "minItems": 1,
                    "title": "Detection Units",
                    "type": "array"
                },
                "sequence_id": {
                    "description": "::rimRsSeq::nScId value",
                    "title": "Sequence Id",
                    "type": "integer"
                }
            },
            "required": [
                "sequence_id",
                "detection_units"
            ],
            "title": "RimRsSequence",
            "type": "object"
        },
        "Rnti": {
            "minimum": 0,
            "title": "Rnti",
            "type": "integer"
        },
        "RtBeamformingPattersSet": {
            "additionalProperties": false,
            "description": "Specifies beamforming weight vectors that can be used for beamforming in 5G.",
            "properties": {
                "cache_number": {
                    "description": "Identifies cache memory in radio module.",
                    "title": "Cache Number",
                    "type": "integer"
                },
                "rt_pid_range": {
                    "$ref": "#/$defs/RtPidRange"
                }
            },
            "required": [
                "cache_number",
                "rt_pid_range"
            ],
            "title": "RtBeamformingPattersSet",
            "type": "object"
        },
        "RtBeamformingWeights": {
            "additionalProperties": false,
            "description": "Real-time Beamforming weights. Sending different beamforming weights for different PRBs.",
            "properties": {
                "beamforming_weights_transmission_configuration": {
                    "$ref": "#/$defs/BeamformingWeightsTransmissionConfiguration"
                },
                "subband_size": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SubbandSize"
                        }
                    ],
                    "description": "Size of the subband (in PRBs) for the calculation of the beam-weight-vectors. Maps to pSRSBwvConfig.bwvSubbandSize in UlCell_SetupReq and to ParUnit{1}.DigitalBeamforming.PRBGroupSize in 5GMAX"
                }
            },
            "required": [
                "subband_size",
                "beamforming_weights_transmission_configuration"
            ],
            "title": "RtBeamformingWeights",
            "type": "object"
        },
        "RtPidRange": {
            "additionalProperties": false,
            "description": "Defines range of pattern identifiers.",
            "properties": {
                "highest_rt_pid": {
                    "description": "Indicates the highest boundary of PID range.",
                    "title": "Highest Rt Pid",
                    "type": "integer"
                },
                "lowest_rt_pid": {
                    "description": "Indicates the lowest boundary of PID range.",
                    "title": "Lowest Rt Pid",
                    "type": "integer"
                }
            },
            "required": [
                "lowest_rt_pid",
                "highest_rt_pid"
            ],
            "title": "RtPidRange",
            "type": "object"
        },
        "RuPatternIdSize": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/PatternIdSize4"
                    },
                    "maxItems": 4,
                    "minItems": 4,
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "title": "RuPatternIdSize"
        },
        "RuSctConfiguration": {
            "additionalProperties": false,
            "description": "If null, then the scenario is considered a DU one, otherwise it's for RU (L1 Radio Unit).",
            "properties": {
                "beamforming_patterns_set_conf": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BeamformingPatternsSetConf"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "passthrough": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PassthroughMode"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ru_type": {
                    "$ref": "#/$defs/RuType"
                },
                "snapshot_trigger_conf": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SnapshotTriggerConf"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "switching_points": {
                    "items": {
                        "$ref": "#/$defs/SwitchingPoints"
                    },
                    "minItems": 3,
                    "title": "Switching Points",
                    "type": "array"
                },
                "trigger_manual_type_snapshot": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RuSnapshotParams"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ul_rshiftbits_for_arxe4": {
                    "$ref": "#/$defs/UlRshiftBitsForArxe4"
                }
            },
            "required": [
                "beamforming_patterns_set_conf",
                "passthrough",
                "snapshot_trigger_conf",
                "switching_points",
                "ul_rshiftbits_for_arxe4",
                "ru_type",
                "trigger_manual_type_snapshot"
            ],
            "title": "RuSctConfiguration",
            "type": "object"
        },
        "RuSnapshotParams": {
            "description": "See in DOORS/GATES the up-to-date definition how params map to bits in `AACONFIG_RAD_CHANGE_NOTIF_MSG`\nhttps://gates.nsn-net.net/view/0001f126#o=3383&hlt (BTSC_L1_Req_10795)",
            "properties": {
                "capture_data": {
                    "$ref": "#/$defs/CaptureDataSource"
                },
                "cc_id": {
                    "description": "Component Carrier ID",
                    "maximum": 7,
                    "minimum": 0,
                    "title": "Cc Id",
                    "type": "integer"
                },
                "direction": {
                    "$ref": "#/$defs/CaptureDirection"
                },
                "mars_id": {
                    "description": "Mars Id. This option is valid when capture_data is set to FD. 0 means NA",
                    "maximum": 5,
                    "minimum": 0,
                    "title": "Mars Id",
                    "type": "integer"
                },
                "sxc": {
                    "description": "Link Id. This option is valid when capture_data is set to FH, 0 means NA",
                    "maximum": 16,
                    "minimum": 0,
                    "title": "Sxc",
                    "type": "integer"
                }
            },
            "required": [
                "direction",
                "capture_data",
                "sxc",
                "mars_id",
                "cc_id"
            ],
            "title": "RuSnapshotParams",
            "type": "object"
        },
        "RuType": {
            "description": "Name of radio type",
            "enum": [
                "AVQL",
                "AVQC",
                "AVHQB"
            ],
            "title": "RuType",
            "type": "string"
        },
        "RxFlowNumFullEbb": {
            "description": "Output flow number of full EBB algorithm. Mapped to ParUnit.RX.UlAntPreComb.RxFlowNumFullEBB for Loki and Thor\nMMIMO cases",
            "enum": [
                2,
                4
            ],
            "title": "RxFlowNumFullEbb",
            "type": "integer"
        },
        "RxScalingFactor": {
            "maximum": 0,
            "minimum": -1300,
            "title": "RxScalingFactor",
            "type": "integer"
        },
        "SatisfiedFftDataFwdReq": {
            "minimum": 0,
            "title": "SatisfiedFftDataFwdReq",
            "type": "integer"
        },
        "SchemaVersion": {
            "description": "Version of SCT definition schema.",
            "enum": [
                "v149_5g",
                "latest_5g"
            ],
            "title": "SchemaVersion",
            "type": "string"
        },
        "ScmDoaModel": {
            "additionalProperties": false,
            "description": "User SCM Doa coordinates - massive Mimo related simulation parameters",
            "properties": {
                "ScmDoaModelRx": {
                    "items": {
                        "$ref": "#/$defs/ScmDoaModelRxItem"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "Scmdoamodelrx",
                    "type": "array"
                },
                "ScmDoaModelTx": {
                    "items": {
                        "$ref": "#/$defs/ScmDoaModelTxItem"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "Scmdoamodeltx",
                    "type": "array"
                },
                "ThetaBs": {
                    "items": {
                        "$ref": "#/$defs/ThetaB"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "Thetabs",
                    "type": "array"
                },
                "ThetaMs": {
                    "items": {
                        "$ref": "#/$defs/ThetaM"
                    },
                    "maxItems": 2,
                    "minItems": 2,
                    "title": "Thetams",
                    "type": "array"
                }
            },
            "required": [
                "ScmDoaModelTx",
                "ScmDoaModelRx",
                "ThetaMs",
                "ThetaBs"
            ],
            "title": "ScmDoaModel",
            "type": "object"
        },
        "ScmDoaModelRxItem": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "ScmDoaModelRxItem",
            "type": "number"
        },
        "ScmDoaModelTxItem": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "ScmDoaModelTxItem",
            "type": "number"
        },
        "ScramblingId": {
            "description": "Scrambling id, for sequence generation. Maps to nscId in  message. Maps to NscIdx in 5GMax.",
            "enum": [
                0,
                1
            ],
            "title": "ScramblingId",
            "type": "integer"
        },
        "ScramblingSequence": {
            "maximum": 65535,
            "minimum": 0,
            "title": "ScramblingSequence",
            "type": "integer"
        },
        "ScramblingSequenceId": {
            "description": "Maps to bit 4 of tbFlags in PhyPdschSendReq and ParCell.MAC.DLMAP.UeSpecRs.ScrambleID in 5Gmax.",
            "enum": [
                0,
                1
            ],
            "title": "ScramblingSequenceId",
            "type": "integer"
        },
        "SctConfiguration": {
            "additionalProperties": false,
            "properties": {
                "activate_per_prb_noise_measurements": {
                    "description": "When set to true, trx-5g will perform comparisons between the reference model and the noisePerPrb values from PUCCH and PUSCH ReceiveRespPs messages.",
                    "title": "Activate Per Prb Noise Measurements",
                    "type": "boolean"
                },
                "bb_resource_reconfiguration": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/BbResourceReconfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Each object defines message sent to target for reconfiguration of BB pools to allow for PRB pooling.",
                    "title": "Bb Resource Reconfiguration"
                },
                "bs_architecture": {
                    "$ref": "#/$defs/BsArchitecture"
                },
                "capture_partial_cell": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CapturePartialCell"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "compare_delays_of_responses": {
                    "description": "Compare delays of responses with UL Timing requirements given in specification",
                    "title": "Compare Delays Of Responses",
                    "type": "boolean"
                },
                "debug_mode_model_path": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Path to root directory of 5gmax repository. If not null, trx-5g will work in debug mode",
                    "title": "Debug Mode Model Path"
                },
                "decoder_configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/DecoderConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "dump_vars": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Optional list of additional dump vars names",
                    "title": "Dump Vars"
                },
                "hlapi_options": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/HlapiOptions"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                },
                "l1ru": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RuSctConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "number_of_realtime_loops": {
                    "description": "Represents the number of real-time part of the tests repetitions e.g. if number_of_realtime_loops = 2, then SctAgent transmits all events from input blobs twice (two loops). The output blob contains only the last loop responses",
                    "minimum": 1,
                    "title": "Number Of Realtime Loops",
                    "type": "integer"
                },
                "number_of_subframes": {
                    "description": "Length of the test case in subframes.",
                    "maximum": 10240,
                    "minimum": 1,
                    "title": "Number Of Subframes",
                    "type": "integer"
                },
                "oran_compression_disabled_debug": {
                    "description": "Force disables oran compression for VRAN TDD. DEBUG MODE ONLY, THIS IS INVALID FROM SPECS POV.",
                    "title": "Oran Compression Disabled Debug",
                    "type": "boolean"
                },
                "rad_params": {
                    "anyOf": [
                        {
                            "items": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "List of R&D parameters and their values used to configure/enable/disable specific features of L1BB(DU) or L1Radio(RU) applications.\nEach element of the array has three following values: 'domain'- which domain it applies to, 'key' - name of rad parameter to be changed, 'value' - new value of rad parameter.\nSo far for RU, only one domain is accepted - 'ERadSwDomain_L1low' and following RAD keys: FcpLessMode, ruTrxEnabled, CheckReceptionWindow, ExtendedLogging, FcpTrace, FcpErrLog, ThorBfCtrlWeightUpdateLoggingLevel, ThorConsoleLogging, pmCounterLogPeriod, dlebBufferSize, ecpriAlarmPeriod, smemHwErrorTestingEnabled. For RU, domain and key values are sent as enumerators and TRX will throw an error if given value is not supported. For DU, all three values (domain, key, value) are sent as strings so they are not validated in TRX, only at the recipient - l1 app - and supported values should be checked in l1 documentation/source code.",
                    "title": "Rad Params"
                },
                "sct_agent_response_timeout": {
                    "description": "SCT agent test response timeout in seconds.",
                    "minimum": 1,
                    "title": "Sct Agent Response Timeout",
                    "type": "integer"
                },
                "seed_offset": {
                    "description": "Offset for seed generator",
                    "title": "Seed Offset",
                    "type": "integer"
                },
                "snapshot_configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SnapshotConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "start_frame_constraint_remainder": {
                    "description": "For PUSCH CEModeB, Enables AIF simulator's start frame adjustment. It has to be set to keep in sync scrambling sequence between model and target(value should be 0 or 1). For LTE Downlink and NR PBCH Downlink, Defines offset of frames after which sct should be started. Maps to T0FrameConstraint in sct_agent_test_request, Mac.StartSubframe in 5gmax for LTE DL, and ParCell{1}.StartFrame in 5gmax for NR DL, value can be (0~1023), for LTE Uplink, NR Uplink and NR Downlink channels which are not PBCH, value should be 0.",
                    "maximum": 1023,
                    "minimum": 0,
                    "title": "Start Frame Constraint Remainder",
                    "type": "integer"
                },
                "sw_configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/SwConfiguration"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "use_iq_analysis_checksum_optimization": {
                    "description": "Set to true to skip the IQ test analysis if a hash from sct_agent_test_resp matches the one stored in cache. Please note that for DU the field takes effect only when there are just DL cells provided.",
                    "title": "Use Iq Analysis Checksum Optimization",
                    "type": "boolean"
                }
            },
            "required": [
                "seed_offset",
                "number_of_subframes",
                "sct_agent_response_timeout",
                "bs_architecture",
                "dump_vars",
                "snapshot_configuration",
                "sw_configuration",
                "debug_mode_model_path",
                "decoder_configuration",
                "compare_delays_of_responses",
                "rad_params",
                "oran_compression_disabled_debug",
                "start_frame_constraint_remainder",
                "number_of_realtime_loops",
                "activate_per_prb_noise_measurements",
                "bb_resource_reconfiguration",
                "use_iq_analysis_checksum_optimization",
                "capture_partial_cell",
                "l1ru"
            ],
            "title": "SctConfiguration",
            "type": "object"
        },
        "SctMetadata": {
            "additionalProperties": false,
            "properties": {
                "feature_ids": {
                    "description": "Feature ids covered by SCT.",
                    "items": {
                        "type": "string"
                    },
                    "title": "Feature Ids",
                    "type": "array"
                },
                "requirement_ids": {
                    "description": "Requirement ids covered by SCT.",
                    "items": {
                        "type": "string"
                    },
                    "title": "Requirement Ids",
                    "type": "array"
                },
                "sct_description": {
                    "description": "Information about case which is tested by JSON schema.",
                    "title": "Sct Description",
                    "type": "string"
                }
            },
            "required": [
                "feature_ids",
                "requirement_ids",
                "sct_description"
            ],
            "title": "SctMetadata",
            "type": "object"
        },
        "SecondHop": {
            "enum": [
                "lower_dedicated",
                "upper_dedicated",
                "lower_common",
                "upper_common",
                null
            ],
            "title": "SecondHop"
        },
        "SelectedAntenna": {
            "maximum": 64,
            "minimum": 1,
            "title": "SelectedAntenna",
            "type": "integer"
        },
        "SequenceDetectorItem": {
            "additionalProperties": false,
            "properties": {
                "detectionPeriod": {
                    "title": "Detectionperiod",
                    "type": "integer"
                },
                "detectionThreshold": {
                    "title": "Detectionthreshold",
                    "type": "integer"
                }
            },
            "required": [
                "detectionPeriod",
                "detectionThreshold"
            ],
            "title": "SequenceDetectorItem",
            "type": "object"
        },
        "SequenceRepetitions": {
            "description": "Number of PRACH sequence repetitions of the PRACH. Value represented as a number of PRACH preambles.",
            "enum": [
                1,
                2,
                4,
                6,
                12
            ],
            "title": "SequenceRepetitions",
            "type": "integer"
        },
        "SequenceType": {
            "description": "Sequence type, can be unrestricted, restricted type A or restricted type B.\nRestricted Type B might not be fully supported. Maps to prachSequenceType in UlCellSetupRequest message.",
            "enum": [
                "3gpp_UnrestrictedSet",
                "3gpp_RestrictedSet",
                "3gpp_RestrictedSetTypeB"
            ],
            "title": "SequenceType",
            "type": "string"
        },
        "ServingCellTypeEnum": {
            "enum": [
                "tdd",
                "fdd"
            ],
            "title": "ServingCellTypeEnum",
            "type": "string"
        },
        "ServingSubcellId": {
            "maximum": 6,
            "minimum": 0,
            "title": "ServingSubcellId",
            "type": "integer"
        },
        "ShortFormatEcpriStreamSplitAlgorithm": {
            "description": "Method of splitting packets for PRACH short format. For SingleRepetition there's single SymbolEvent per repetition,\nfor AllRepetitions all repetitions in occasions are put into one SymbolEvent.",
            "enum": [
                "AllRepetitions",
                "SingleRepetition"
            ],
            "title": "ShortFormatEcpriStreamSplitAlgorithm",
            "type": "string"
        },
        "SimpleFrequencyOffset": {
            "additionalProperties": false,
            "description": "Frequency offset is used only for simulation",
            "properties": {
                "initialValue": {
                    "description": "Expressed in Hz",
                    "title": "Initialvalue",
                    "type": "integer"
                }
            },
            "required": [
                "initialValue"
            ],
            "title": "SimpleFrequencyOffset",
            "type": "object"
        },
        "SlantTypeItem": {
            "pattern": "^(/\\\\)+$",
            "title": "SlantTypeItem",
            "type": "string"
        },
        "SlotAggregationFactor": {
            "description": "Number of aggregated slots",
            "enum": [
                1,
                2,
                3,
                4,
                7,
                8,
                12,
                16,
                20,
                24,
                28,
                32
            ],
            "title": "SlotAggregationFactor",
            "type": "integer"
        },
        "SlotsAllocation": {
            "description": "List of prbs allocation settings for consecutive slots.\nSettings for not defined slot are inherited from last defined slot,\ndetails: http://ul-phy.pages.gitlab.l1.nsn-net.net/trx-5g/master/sct_definition/slots_allocation.html",
            "items": {
                "$ref": "#/$defs/SlotsAllocationItem"
            },
            "maxItems": 20,
            "minItems": 1,
            "title": "SlotsAllocation",
            "type": "array"
        },
        "SlotsAllocationItem": {
            "additionalProperties": false,
            "properties": {
                "prbs": {
                    "$ref": "#/$defs/Prbs"
                },
                "slot_number": {
                    "maximum": 19,
                    "minimum": 0,
                    "title": "Slot Number",
                    "type": "integer"
                }
            },
            "required": [
                "prbs",
                "slot_number"
            ],
            "title": "SlotsAllocationItem",
            "type": "object"
        },
        "SlotsAllocationItem1": {
            "additionalProperties": false,
            "properties": {
                "dmrs_config": {
                    "$ref": "#/$defs/DmrsConfig"
                },
                "num_of_uci_ack_bits": {
                    "description": "Number of HARQ-ACK bits. Maps to numOfUciAckBits in PuschReceiveReq and to HarqAckSize in 5GMAX.",
                    "maximum": 23,
                    "minimum": 0,
                    "title": "Num Of Uci Ack Bits",
                    "type": "integer"
                },
                "num_of_uci_csi_part1_bits": {
                    "description": "Number of CSI bits (part 1) in UCI report. Maps to numOfUciCsiPart1Bits in PuschReceiveReq and Csi1Size in 5GMAX.",
                    "maximum": 50,
                    "minimum": 0,
                    "title": "Num Of Uci Csi Part1 Bits",
                    "type": "integer"
                },
                "resource_grid_allocation": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ResourceGridAllocation"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "None if there is no allocation in a certain slot; if a certain slot (slots) are not present in the allocation array, they will be allocated and settings will be inherited from the previous allocated slot (i.e. if slot0 is allocated in a A way and slot4 is allocated in a B way, then slots 1-3 will also be populated with A way allocation. If the UE is meant to transmit in slot0 and slot4, then slot1 shall be allocated with null, and then this null will be populated in slots 2-3."
                },
                "slot_number": {
                    "description": "Slot number (non-negative values)",
                    "minimum": 0,
                    "title": "Slot Number",
                    "type": "integer"
                }
            },
            "required": [
                "slot_number",
                "resource_grid_allocation",
                "num_of_uci_ack_bits",
                "num_of_uci_csi_part1_bits",
                "dmrs_config"
            ],
            "title": "SlotsAllocationItem1",
            "type": "object"
        },
        "SlotsAllocationModel": {
            "description": "Slot allocations",
            "items": {
                "$ref": "#/$defs/SlotsAllocationItem1"
            },
            "minItems": 1,
            "title": "SlotsAllocationModel",
            "type": "array"
        },
        "SlowPrbPoolingParameters": {
            "additionalProperties": false,
            "properties": {
                "l1_sp_max_num_layer_prb": {
                    "description": "Maximum stream PRB capacity of layer for the subpool. CB007113-73146 for UL and CB008940-G for DL",
                    "title": "L1 Sp Max Num Layer Prb",
                    "type": "integer"
                },
                "l1_sp_max_num_stream_prb": {
                    "description": "Maximum stream PRB capacity of stream for the subpool. CB007113-73146 for UL and CB008940-G for DL",
                    "title": "L1 Sp Max Num Stream Prb",
                    "type": "integer"
                }
            },
            "required": [
                "l1_sp_max_num_stream_prb",
                "l1_sp_max_num_layer_prb"
            ],
            "title": "SlowPrbPoolingParameters",
            "type": "object"
        },
        "SnapshotConfiguration": {
            "additionalProperties": false,
            "description": "Configuration for antenna snapshot. Snapshot will not be captured if set to null.",
            "properties": {
                "configuration_req": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AntennaSnapshotConfigurationReq"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "dl_fast_snapshot_reqs": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/FastAntennaSnapshotReq"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Dl Fast Snapshot Reqs"
                },
                "snapshot_req": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AntennaSnapshotReq"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ul_fast_snapshot_reqs": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/FastAntennaSnapshotReq"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Ul Fast Snapshot Reqs"
                }
            },
            "required": [
                "configuration_req",
                "snapshot_req",
                "ul_fast_snapshot_reqs",
                "dl_fast_snapshot_reqs"
            ],
            "title": "SnapshotConfiguration",
            "type": "object"
        },
        "SnapshotTriggerConf": {
            "additionalProperties": false,
            "description": "Configuration of FCP section type 240 message",
            "properties": {
                "event_trigger": {
                    "description": "ID of the suspicious event",
                    "minimum": 0,
                    "title": "Event Trigger",
                    "type": "integer"
                },
                "history_frame_id": {
                    "description": "Indicates for which frame UL IQ data shall be captured.",
                    "maximum": 1023,
                    "minimum": 0,
                    "title": "History Frame Id",
                    "type": "integer"
                },
                "history_num_of_slots": {
                    "description": "Indicates how many consecutive slots of UL IQ data starting from historySlotId 6 shall be captured.",
                    "maximum": 2,
                    "minimum": 0,
                    "title": "History Num Of Slots",
                    "type": "integer"
                },
                "history_slot_id": {
                    "description": "Indicates for which slot UL IQ data shall be captured.",
                    "maximum": 79,
                    "minimum": 0,
                    "title": "History Slot Id",
                    "type": "integer"
                }
            },
            "required": [
                "history_num_of_slots",
                "history_frame_id",
                "history_slot_id",
                "event_trigger"
            ],
            "title": "SnapshotTriggerConf",
            "type": "object"
        },
        "Snr": {
            "title": "Snr",
            "type": "number"
        },
        "SnrItem": {
            "additionalProperties": false,
            "description": "Snr sweep defined from start_snr to end_snr changing each change_interval_slots",
            "properties": {
                "change_interval_slots": {
                    "description": "Interval of the snr change",
                    "minimum": 3.0,
                    "title": "Change Interval Slots",
                    "type": "number"
                },
                "end_snr": {
                    "description": "End value of the snr sweep",
                    "title": "End Snr",
                    "type": "number"
                },
                "start_snr": {
                    "description": "Starting value of the snr sweep",
                    "title": "Start Snr",
                    "type": "number"
                }
            },
            "required": [
                "start_snr",
                "end_snr",
                "change_interval_slots"
            ],
            "title": "SnrItem",
            "type": "object"
        },
        "Snrs": {
            "description": "Array contains SNRs for each subcell",
            "items": {
                "$ref": "#/$defs/Snr"
            },
            "maxItems": 6,
            "minItems": 1,
            "title": "Snrs",
            "type": "array"
        },
        "SpatialMode": {
            "description": "Maps to spatialMode in PhyPdschSendReq.",
            "enum": [
                "SingleTx",
                "TxDiversity",
                "SpatialMultiplexing",
                "SingleStreamBF",
                "TM8_Port7",
                "TM8_Port8",
                "TM8_Port78",
                "TM9_Port7",
                "TM9_Port8",
                "TM9_UpTo8LayersTx"
            ],
            "title": "SpatialMode",
            "type": "string"
        },
        "SrsBeamformingWeightVector": {
            "additionalProperties": false,
            "description": "Single User Beamforming weight vector. If nulled srsBwvEnable is disabled.",
            "properties": {
                "bf_subband_index": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/BfSubbandIndex"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "long_term_coma": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LongTermComa"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "number_of_srs_tx_ports": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/NumberOfSrsTxPorts"
                        }
                    ],
                    "description": "Number of antenna ports used for SRS signal transmission NSRSap. Defined in 3GPP 38.211 (version 15.8.0) section 6.4.1.4.1. Maps to numSrsPorts in SrsReceiveReq and to MAC.ULMAP{ULMAPIdx}.SrsNumTxPorts in 5GMAX."
                },
                "operation": {
                    "description": "Bitmap indicating action(s) and next state(s) for each slot of the overall computation: {Start, Store, Compute, FirstBwvReport}. LSB: Reset. LSB+1: Store. LSB+2: Calculate. LSB+3: FirstBwvReport. Maps to operation in SrsReceiveReq.",
                    "items": {
                        "maximum": 15,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "title": "Operation",
                    "type": "array"
                },
                "rank_indicator": {
                    "description": "Expect Rank value for the slot, should be same for one bwv calculation. Maps to numBwvPerSubband in SrsReceiveReq and to RankIndicator in 5GMAX.",
                    "items": {
                        "maximum": 4,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "title": "Rank Indicator",
                    "type": "array"
                },
                "report_id": {
                    "description": "Bwv UE report ID.Maps to bwvReportId in SrsReceiveReq",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Report Id",
                    "type": "integer"
                },
                "rho": {
                    "description": "Scaling factor for MMSE algorithm.Maps to rho in SrsReceiveReq, Maps to BetaScaling in 5GMAX",
                    "maximum": 0.1,
                    "minimum": 0.0001,
                    "title": "Rho",
                    "type": "number"
                },
                "sinr_diff": {
                    "description": "Signal-plus-interference-to-noise ratio difference for each slot (cyclically repeated in whole test), only used in CodeRate power balancing method when operation=Compute. Maps to sinr in SrsReceiveReq and to SinrDiff in 5GMax.",
                    "items": {
                        "type": "number"
                    },
                    "title": "Sinr Diff",
                    "type": "array"
                },
                "start_pattern": {
                    "description": "Starting PatternID to be used in current SrsBwv Report. Maps to startPatternId in SrsReceiveReq.",
                    "items": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "title": "Start Pattern",
                    "type": "array"
                }
            },
            "required": [
                "operation",
                "number_of_srs_tx_ports",
                "bf_subband_index",
                "long_term_coma",
                "rank_indicator",
                "start_pattern",
                "rho",
                "sinr_diff",
                "report_id"
            ],
            "title": "SrsBeamformingWeightVector",
            "type": "object"
        },
        "SrsMimo": {
            "additionalProperties": false,
            "description": "Single User Multiple Input Multiple Output. If nulled srsSuMimoEnable is disabled.",
            "properties": {
                "frequency_hopping": {
                    "description": "Parameter b_hop from 3GPP 38.211 6.4.1.4.3. Maps to SRSFreqHopping in 5GMAX. If b_hop >= B_SRS, frequency hopping is disabled.",
                    "maximum": 3,
                    "minimum": 0,
                    "title": "Frequency Hopping",
                    "type": "integer"
                },
                "power_offset_srs_to_pusch_per_allocated_re": {
                    "description": "Corresponds to the P_boost (P_SRS_boost) value in the PMI selection algorithm. Gives the linear ratio of SRS EPRE and PUSCH EPRE in the power domain, but only where SRS REs are actually allocated. Maps to powerOffsetSrsToPuschPerAllocatedRe in SRSReceiveReq and SrsPc in 5GMAX after converting to dB",
                    "maximum": 16384.0,
                    "minimum": 0.0,
                    "title": "Power Offset Srs To Pusch Per Allocated Re",
                    "type": "number"
                },
                "pusch_transmission_coherence": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PuschTransmissionCoherence1"
                        }
                    ],
                    "description": "PUSCH transmission coherence. Used to determine the codebook for computation of the metrics MECG (Maximal Effective Channel Gain) and SLP (Sum Layer Power). Maps to puschTransCoherence in SRSReceiveReq and to PuschTransCoherence in 5GMAX"
                },
                "start_prb": {
                    "anyOf": [
                        {
                            "maximum": 268,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Start PRB of the subband. Used for pSRS (IE is needed because frequency hopping might be configured in the SRS resource).",
                    "title": "Start Prb"
                },
                "ue_type": {
                    "$ref": "#/$defs/UeType"
                }
            },
            "required": [
                "power_offset_srs_to_pusch_per_allocated_re",
                "pusch_transmission_coherence",
                "ue_type",
                "frequency_hopping",
                "start_prb"
            ],
            "title": "SrsMimo",
            "type": "object"
        },
        "SrsSimulation": {
            "additionalProperties": false,
            "description": "SRS user's simulation settings",
            "properties": {
                "channelType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/ChannelTypeModel"
                        }
                    ],
                    "description": "Type of simulated channel"
                },
                "frequencyOffset": {
                    "$ref": "#/$defs/SimpleFrequencyOffset"
                },
                "maxDopplerFreq": {
                    "description": "Value of maximum Doppler frequency given in Hz",
                    "title": "Maxdopplerfreq",
                    "type": "number"
                },
                "snrs": {
                    "$ref": "#/$defs/Snrs"
                },
                "timeOffset": {
                    "$ref": "#/$defs/TimeOffset"
                }
            },
            "required": [
                "channelType",
                "frequencyOffset",
                "maxDopplerFreq",
                "snrs",
                "timeOffset"
            ],
            "title": "SrsSimulation",
            "type": "object"
        },
        "SrsTdd": {
            "additionalProperties": false,
            "description": "SRS TDD settings",
            "properties": {
                "bf_measurement": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/BfMeasurement"
                        }
                    ],
                    "description": "This is TDD BF specific parameter, indicates whether the beamforming measurement is needed and short-term beamforming coefficients should be reset."
                },
                "configIndex": {
                    "description": "SRS config index, allowed range 0 to 644, 645 to 1023 are reserved.",
                    "maximum": 644,
                    "minimum": 0,
                    "title": "Configindex",
                    "type": "integer"
                }
            },
            "required": [
                "configIndex",
                "bf_measurement"
            ],
            "title": "SrsTdd",
            "type": "object"
        },
        "Ssb": {
            "additionalProperties": false,
            "description": "SSB parameters for a single cell. This field should be set to null if SSB is disabled.",
            "properties": {
                "active_indices": {
                    "description": "Active SSB indices. Maps to SsbMapper in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/ActiveIndice"
                    },
                    "maxItems": 64,
                    "minItems": 1,
                    "title": "Active Indices",
                    "type": "array"
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "configurable_payload": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/ConfigurablePayloadItem"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Configurable payload of SSB, total 16 bits, including ssb-SubcarrierOffset (4 bits), dmrs-TypeA-Position (1 bit), pdcch-ConfigSIB1 (8 bits), cellBarred (1 bit), intraFreqReselection(1 bit), spare (1 bit), refer to 3GPP 38.331 6.2.2-MIB.",
                    "title": "Configurable Payload"
                },
                "pattern_id_du": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize4"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Used for DU tests. Specifies beam patternIds to be used for transmission in SSB cell. Maps to patternId in SsBlockSendReq.patternId."
                },
                "pattern_id_ru": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RuPatternIdSize"
                        }
                    ],
                    "description": "Used for RU tests. Specifies beam patternIds to be used for transmission in SSB cell. Maps to patternId in DlDataFh_SsBlockSendReq.patternId. Subsequent arrays correspond to subsequent slots, e.g. first array contains pattern ids for the first slot. Note that only first 2 pattern ids of each slot will be used to configure 5GMax, as 5GMax only supports SSB case A/B/C at the moment."
                },
                "periodicity": {
                    "$ref": "#/$defs/Periodicity"
                },
                "prb_offset": {
                    "description": "SS Block PRB offset, the offset is expressed in terms of number of PRBs using cell SCS. Maps to ssBlockPrbOffset in DlCellSetupRequest message. Maps to ScOffset in 5GMax.",
                    "maximum": 253,
                    "minimum": 0,
                    "title": "Prb Offset",
                    "type": "integer"
                },
                "precoding_vector_indices": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PrecodingVectorIndice"
                            },
                            "minItems": 1,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Each element represents a precoding vector index, corresponding to a precoding vector (PV), which will be applied on a sync burst. First PV will be applied on first sync burst, second PVwill be applied on next sync burst, and so on. For 2 antennas, the maximum value is 1; for 4 antennas,the maximum value is 3. If null, will use precoding vector index 0 as default value. For RU tests,only one element can be provided (assuming a value of 0 or 1) or it should be set to None. Used to calculate precodingVectorIndex in SsBlockSendReq message.",
                    "title": "Precoding Vector Indices"
                },
                "relative_power": {
                    "description": "Relative power of SSB in dB. It is used to calculate the `ssBlockPower` from `DlCellSetupRequest`.",
                    "maximum": 23.9,
                    "minimum": -66.4,
                    "title": "Relative Power",
                    "type": "number"
                },
                "ssb_puncturing": {
                    "description": "Flag which enables SSB puncturing. Puncture 1st PRB of 2nd OFDM symbol of SSB.",
                    "title": "Ssb Puncturing",
                    "type": "boolean"
                },
                "subcarrier_offset": {
                    "description": "SS Block subcarrier offset, the offset is expressed in terms of subcarriers using cell SCS. Maps to ssBlockSubcarrierOffset in DlCellSetupRequest message.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Subcarrier Offset",
                    "type": "integer"
                },
                "timing_advance": {
                    "$ref": "#/$defs/TimingAdvancePerSlot"
                }
            },
            "required": [
                "prb_offset",
                "subcarrier_offset",
                "active_indices",
                "periodicity",
                "configurable_payload",
                "precoding_vector_indices",
                "timing_advance",
                "ce_axc_indices",
                "pattern_id_du",
                "pattern_id_ru",
                "relative_power",
                "ssb_puncturing"
            ],
            "title": "Ssb",
            "type": "object"
        },
        "SsbConfiguration": {
            "description": "SS/PBCH block symbol indexes configuration in 3GPP 38.213 section 4.1.\n Maps to ssBlockConfiguration in DlCellSetupRequest message.",
            "enum": [
                "CaseA",
                "CaseB",
                "CaseC",
                "CaseD",
                "CaseE"
            ],
            "title": "SsbConfiguration",
            "type": "string"
        },
        "Standard": {
            "enum": [
                "LTE",
                "NR"
            ],
            "title": "Standard",
            "type": "string"
        },
        "StartSubframeConfig0": {
            "description": "INDEX OF THE FIRST TRANSMISSION IN A BUNDLE. VALID ONLY WHEN TDD_UPLINK_DOWNLINK_CONFIGURATION = 0",
            "enum": [
                null,
                2,
                3,
                4,
                7,
                8,
                9
            ],
            "title": "StartSubframeConfig0"
        },
        "StartTimeSubfr": {
            "description": "NBPRACH subframe start time",
            "enum": [
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                1024
            ],
            "title": "StartTimeSubfr",
            "type": "integer"
        },
        "StaticAllocationRegion": {
            "additionalProperties": false,
            "description": "Define static_long_pucch_config_ecpri regions.",
            "properties": {
                "first_hop": {
                    "$ref": "#/$defs/FirstHop"
                },
                "second_hop": {
                    "$ref": "#/$defs/SecondHop"
                }
            },
            "required": [
                "first_hop",
                "second_hop"
            ],
            "title": "StaticAllocationRegion",
            "type": "object"
        },
        "StaticLongPucchConfigEcpri": {
            "additionalProperties": false,
            "description": "Static long pucch configuration. If non-empty, then UlCellSetupRequest.staticLongPucch will be true,\notherwise - false. Maps to PucchReceiveReq.subcells.staticLongPucchConfigEcpri",
            "properties": {
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "lower_common": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StaticLongPucchResourceAllocation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "lower_dedicated": {
                    "$ref": "#/$defs/StaticLongPucchResourceAllocation"
                },
                "number_of_symbols": {
                    "description": "Indicates number of symbols for long pucch for resources with static ecpri config.",
                    "maximum": 14,
                    "minimum": 1,
                    "title": "Number Of Symbols",
                    "type": "integer"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize4"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for transmission in PUCCH grant. Maps to PucchReceiveReq.pucchResources[].pattern_id"
                },
                "start_symbol": {
                    "description": "Indicates long pucch start symbol in a slot for resources with static ecpri config.",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                },
                "upper_common": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StaticLongPucchResourceAllocation"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "upper_dedicated": {
                    "$ref": "#/$defs/StaticLongPucchResourceAllocation"
                }
            },
            "required": [
                "ce_axc_indices",
                "pattern_id",
                "start_symbol",
                "number_of_symbols",
                "lower_dedicated",
                "upper_dedicated",
                "lower_common",
                "upper_common"
            ],
            "title": "StaticLongPucchConfigEcpri",
            "type": "object"
        },
        "StaticLongPucchResourceAllocation": {
            "additionalProperties": false,
            "description": "Long pucch resource allocation region.",
            "properties": {
                "ecpri_section_id": {
                    "anyOf": [
                        {
                            "maximum": 4095,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": 4095,
                    "description": "ECPRI section id. Maps to PucchReceiveReq.subcells.pucchResource[].eCpriSectionId, for resources with static long pucch",
                    "title": "Ecpri Section Id"
                },
                "num_of_prbs": {
                    "anyOf": [
                        {
                            "maximum": 16,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": 1,
                    "description": "Number of PRBs of current PUCCH grant, for resources with static long pucch",
                    "title": "Num Of Prbs"
                },
                "start_prb": {
                    "anyOf": [
                        {
                            "maximum": 272,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": 1,
                    "description": "The first PRB of the grant allocated to the UE, for resources with static long pucch",
                    "title": "Start Prb"
                }
            },
            "title": "StaticLongPucchResourceAllocation",
            "type": "object"
        },
        "StaticPrachConfig": {
            "additionalProperties": false,
            "description": "Single StaticPrachObject with assigned ce_axc_indices.",
            "properties": {
                "cp_duration": {
                    "description": "Duration of Cyclic Prefix of the PRACH. Value in UTU.",
                    "maximum": 840960,
                    "minimum": 1080,
                    "title": "Cp Duration",
                    "type": "integer"
                },
                "gt_high_bandwidth": {
                    "$ref": "#/$defs/GtHighBandwidth"
                },
                "gt_low_bandwidth": {
                    "$ref": "#/$defs/GtLowBandwidth"
                },
                "pattern_id": {
                    "description": "It is used by TRX to compute multiple fields for 5GMax, for example DigitalBeamformingPrach.FixBeamId, DigitalBeamformingPrach.NumCoarseBeam, DigitalBeamformingPrach.NumBeam, DigitalBeamformingPrach.BeamMethod, DigitalBeamformingPrach.SsbBeamSetSel, DigitalBeamformingPrach.FineBeamSetSel. Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive.",
                    "maximum": 950,
                    "minimum": 1,
                    "title": "Pattern Id",
                    "type": "integer"
                },
                "pattern_length": {
                    "$ref": "#/$defs/PatternLength"
                },
                "polar_0_ce_axc_index": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PolarCeAxcIndex"
                        }
                    ],
                    "description": "This number represents an index of stream for the polarisation of -45 degrees"
                },
                "polar_1_ce_axc_index": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PolarCeAxcIndex"
                        }
                    ],
                    "description": "This number represents an index of stream for the polarisation of +45 degrees"
                },
                "prach_bandwidth": {
                    "$ref": "#/$defs/PrachBandwidth"
                },
                "prach_pattern": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PrachPattern"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "sequence_duration": {
                    "description": "Duration of Sequence of the PRACH. Value in UTU.",
                    "maximum": 983040,
                    "minimum": 10240,
                    "title": "Sequence Duration",
                    "type": "integer"
                },
                "sequence_repetitions": {
                    "$ref": "#/$defs/SequenceRepetitions"
                }
            },
            "required": [
                "polar_0_ce_axc_index",
                "polar_1_ce_axc_index",
                "pattern_id",
                "pattern_length",
                "gt_low_bandwidth",
                "gt_high_bandwidth",
                "prach_bandwidth",
                "cp_duration",
                "sequence_duration",
                "sequence_repetitions",
                "prach_pattern"
            ],
            "title": "StaticPrachConfig",
            "type": "object"
        },
        "Stream": {
            "additionalProperties": false,
            "description": "Configuration for a FH stream",
            "properties": {
                "cpri": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Cpri"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ecpri": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Ecpri"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "phy_channel_type": {
                    "$ref": "#/$defs/PhyChannelType"
                }
            },
            "required": [
                "phy_channel_type",
                "cpri",
                "ecpri"
            ],
            "title": "Stream",
            "type": "object"
        },
        "StreamPassthroughConfiguration": {
            "additionalProperties": false,
            "description": "For passthrough configuration defines streams and for each stream list of ints defines:\n- use port/antenna numbers >=0, using list of ports\n- use [-1] meaning that data is routed to/from all antennas of correct polarity\n- use null if given stream should not be defined",
            "properties": {
                "sxc0": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughStreamIndex"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughSpecialIndex"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Sxc0"
                },
                "sxc1": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughStreamIndex"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughSpecialIndex"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Sxc1"
                },
                "sxc2": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughStreamIndex"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughSpecialIndex"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Sxc2"
                },
                "sxc3": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughStreamIndex"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/$defs/PassthroughSpecialIndex"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Sxc3"
                }
            },
            "required": [
                "sxc0",
                "sxc1",
                "sxc2",
                "sxc3"
            ],
            "title": "StreamPassthroughConfiguration",
            "type": "object"
        },
        "SubbandSize": {
            "description": "Size of the subband (in PRBs) for the calculation of the beam-weight-vectors. Maps to pSRSBwvConfig.bwvSubbandSize\nin UlCell_SetupReq and to ParUnit{1}.DigitalBeamforming.PRBGroupSize in 5GMAX",
            "enum": [
                2,
                4,
                8,
                16,
                24,
                32,
                36,
                48,
                64,
                76,
                104,
                128,
                132,
                160,
                184,
                216,
                240,
                272
            ],
            "title": "SubbandSize",
            "type": "integer"
        },
        "SubbandWhitening": {
            "description": "Maps to SubbandWhitening in 5Gmax. Only for LOKI.",
            "enum": [
                "off",
                "on",
                "fdagc",
                null
            ],
            "title": "SubbandWhitening"
        },
        "SubcarrierOffset": {
            "description": "Offset for the first subcarrier in a given NBPRACH configuration, maps with numOfSubcarriers based on\nhttps://sharenet-ims.int.net.nokia.com/Overview/D543844987",
            "enum": [
                0,
                2,
                12,
                18,
                24,
                34,
                36
            ],
            "title": "SubcarrierOffset",
            "type": "integer"
        },
        "SubcellId": {
            "anyOf": [
                {
                    "maximum": 5,
                    "minimum": 0,
                    "type": "integer"
                },
                {
                    "type": "null"
                }
            ],
            "title": "SubcellId"
        },
        "SubcellIdModel": {
            "maximum": 31,
            "minimum": 0,
            "title": "SubcellIdModel",
            "type": "integer"
        },
        "SubcellType": {
            "description": "Specifies subcell types represented by Cx_y, where x is the number\nof spatial streams and y is the number of MIMO layers.",
            "enum": [
                "C4_2",
                "C16_2",
                "C16_4"
            ],
            "title": "SubcellType",
            "type": "string"
        },
        "SubframeAllocation": {
            "additionalProperties": false,
            "properties": {
                "subframe_allocation_bitmap": {
                    "description": "10 bits of bitmap indicates corresponding subframe #0 to 9# from left. MBSFN subframe sequences are #1, #2, #3, #6, #7, #8. '1' denotes that the corresponding subframe is allocated for MBSFN.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Subframe Allocation Bitmap",
                    "type": "array"
                },
                "subframe_allocation_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SubframeAllocationType"
                        }
                    ],
                    "description": "It's defined oneFrame and fourFrame for subframe_allocation. Only radioframeAllocationPeriod = 4 and radioframeAllocationOffset = 0 is supported for fourFrames configuration."
                }
            },
            "required": [
                "subframe_allocation_type",
                "subframe_allocation_bitmap"
            ],
            "title": "SubframeAllocation",
            "type": "object"
        },
        "SubframeAllocationType": {
            "description": "IT'S DEFINED ONEFRAME AND FOURFRAME FOR SUBFRAME_ALLOCATION. ONLY RADIOFRAMEALLOCATIONPERIOD  =  4 and\nRADIOFRAMEALLOCATIONOFFSET  =  0 is supported for fourFrames configuration.",
            "enum": [
                "oneFrame",
                "fourFrames"
            ],
            "title": "SubframeAllocationType",
            "type": "string"
        },
        "SubframesForAllocatedPrbItem": {
            "items": {},
            "title": "SubframesForAllocatedPrbItem",
            "type": "array"
        },
        "SubframesInPeriod": {
            "maximum": 19,
            "minimum": 0,
            "title": "SubframesInPeriod",
            "type": "integer"
        },
        "SubpoolConfiguration": {
            "additionalProperties": false,
            "properties": {
                "cell_slot_configuration": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/CellSlotConfiguration"
                        }
                    ],
                    "description": "Required cell slot configuration with amount of cell slots and lowest slot. If ratMode in subpoolId is \u201cNR\u201d then structure is ignored by L1 SW."
                },
                "domain": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__sct_configuration__sw_configuration__Domain"
                },
                "frequency_range": {
                    "$ref": "#/$defs/FrequencyRange"
                },
                "fronthaul_mode": {
                    "$ref": "#/$defs/FronthaulModeSubpool"
                },
                "max_num_of_data_layers_per_cell": {
                    "description": "Required maximum number of data layers per cell/per subcell",
                    "minimum": 0,
                    "title": "Max Num Of Data Layers Per Cell",
                    "type": "integer"
                },
                "max_num_of_data_streams_per_cell": {
                    "description": "Required maximum number of data streams per cell/per subcell",
                    "minimum": 0,
                    "title": "Max Num Of Data Streams Per Cell",
                    "type": "integer"
                },
                "rat_mode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Standard"
                        }
                    ],
                    "description": "Required standard"
                },
                "subpool_id": {
                    "description": "Indicates the index of the L1 sub-pool",
                    "minimum": 0,
                    "title": "Subpool Id",
                    "type": "integer"
                }
            },
            "required": [
                "subpool_id",
                "rat_mode",
                "fronthaul_mode",
                "domain",
                "frequency_range",
                "max_num_of_data_streams_per_cell",
                "max_num_of_data_layers_per_cell",
                "cell_slot_configuration"
            ],
            "title": "SubpoolConfiguration",
            "type": "object"
        },
        "SuperCellItem": {
            "additionalProperties": false,
            "properties": {
                "numberOfSubcells": {
                    "$ref": "#/$defs/NumberOfSubcells"
                }
            },
            "required": [
                "numberOfSubcells"
            ],
            "title": "SuperCellItem",
            "type": "object"
        },
        "Supercell": {
            "additionalProperties": false,
            "description": "Supercell's parameters",
            "properties": {
                "combined_supercell": {
                    "description": "Defines combined supercell, must be true if number_of_subcells is greater than 2. Maps to actCombSuperCell in PhyDlCellSetupReq.",
                    "title": "Combined Supercell",
                    "type": "boolean"
                },
                "number_of_subcells": {
                    "description": "Sets how many subcells with this cell configuration makes up supercell",
                    "maximum": 6,
                    "minimum": 2,
                    "title": "Number Of Subcells",
                    "type": "integer"
                }
            },
            "required": [
                "number_of_subcells",
                "combined_supercell"
            ],
            "title": "Supercell",
            "type": "object"
        },
        "SwConfiguration": {
            "additionalProperties": false,
            "description": "Definition of a SwConfigurationReq. This message is used in setting up L1 and is sent before cell setups.\n It flags required stream forwarding and configures available pools and subpools.",
            "properties": {
                "is_cpri_iq_forwarding_enabled": {
                    "description": "CPRI IQ forwarding required",
                    "title": "Is Cpri Iq Forwarding Enabled",
                    "type": "boolean"
                },
                "is_ecpri_iq_forwarding_enabled": {
                    "description": "eCPRI IQ forwarding required",
                    "title": "Is Ecpri Iq Forwarding Enabled",
                    "type": "boolean"
                },
                "pool_configuration": {
                    "description": "Configuration structure for L1 SW initial l1PoolConfiguration",
                    "items": {
                        "$ref": "#/$defs/PoolConfiguration"
                    },
                    "maxItems": 4,
                    "minItems": 1,
                    "title": "Pool Configuration",
                    "type": "array"
                }
            },
            "required": [
                "is_ecpri_iq_forwarding_enabled",
                "is_cpri_iq_forwarding_enabled",
                "pool_configuration"
            ],
            "title": "SwConfiguration",
            "type": "object"
        },
        "Switch": {
            "enum": [
                "On",
                "Off"
            ],
            "title": "Switch",
            "type": "string"
        },
        "SwitchOperationMode": {
            "description": "Defines the mode of time period that starts at the given frame_offset.\nMap to switch_operation_mode in switching_point",
            "enum": [
                "DL",
                "UL",
                "GP"
            ],
            "title": "SwitchOperationMode",
            "type": "string"
        },
        "SwitchingPoints": {
            "additionalProperties": false,
            "description": "Contains list of switching points. Map to switching_points in TddSwitchingConf.",
            "properties": {
                "frame_offset": {
                    "description": "Offset from DL air frame boundary to the switching time instance. Unit is UTU. Map to frame_offset in switching_point",
                    "minimum": 0,
                    "title": "Frame Offset",
                    "type": "integer"
                },
                "switch_operation_mode": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SwitchOperationMode"
                        }
                    ],
                    "description": "Defines the mode of time period that starts at the given frame_offset. Map to switch_operation_mode in switching_point"
                }
            },
            "required": [
                "switch_operation_mode",
                "frame_offset"
            ],
            "title": "SwitchingPoints",
            "type": "object"
        },
        "Symbol": {
            "maximum": 13,
            "minimum": 0,
            "title": "Symbol",
            "type": "integer"
        },
        "SymbolIndexItem": {
            "maximum": 13,
            "minimum": 0,
            "title": "SymbolIndexItem",
            "type": "integer"
        },
        "SymbolPowerCorrection": {
            "maximum": 600.0,
            "minimum": -6000.0,
            "title": "SymbolPowerCorrection",
            "type": "number"
        },
        "SymbolRateMatchingPositions": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/AllocatedSymbols"
                    },
                    "maxItems": 14,
                    "minItems": 14,
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "title": "SymbolRateMatchingPositions"
        },
        "SyncSigTxMode": {
            "description": "0 - sync signal will be transmitted on one antenna only, 1 - sync signal will be transmitted on two antennas,\nusing Precoding Vector Switching (PVS) TX diversity mode. Used to calculate ParCell.RRC.NbIot.NbSyncMode.",
            "enum": [
                0,
                1
            ],
            "title": "SyncSigTxMode",
            "type": "integer"
        },
        "SyncSignalTxMode": {
            "description": "TX mode for synchronisation signals. Maps to syncSigTxMode in PhyDlCellSetupReq message.",
            "enum": [
                "SingleTx",
                "TxDiversity"
            ],
            "title": "SyncSignalTxMode",
            "type": "string"
        },
        "TargetBoard": {
            "description": "Name of target board.",
            "enum": [
                "ABIL",
                "ABIN",
                "VRAN2",
                "ABIP",
                "ABIQ",
                "ABIO",
                "ASOE",
                "RINLINE1",
                "RINLINE2"
            ],
            "title": "TargetBoard",
            "type": "string"
        },
        "TargetIqBitWidth": {
            "description": "Determines I/Q compression bitwidth. Mapped to ParUnit.[ RX|TX ].Compression.IQComp.TargetIqBitWidth",
            "enum": [
                9,
                12
            ],
            "title": "TargetIqBitWidth",
            "type": "integer"
        },
        "TbPowerBoostVal": {
            "description": "Power boost value of the entire TB for each slot (cyclically repeated in whole test), for rank3/rank4 PDSCH or\n 4-port CSI-RS. Maps to TbPowerBoostVal in 5GMax.",
            "items": {
                "$ref": "#/$defs/TbPowerBoostValItem"
            },
            "minItems": 1,
            "title": "TbPowerBoostVal",
            "type": "array"
        },
        "TbPowerBoostValItem": {
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "TbPowerBoostValItem",
            "type": "number"
        },
        "TbSize": {
            "description": "Size of transport block for nbPUSCH user in bits. 3GPP 36.213.v14 Table 16.5.1.2-2.",
            "enum": [
                16,
                24,
                32,
                40,
                56,
                72,
                88,
                104,
                120,
                136,
                144,
                152,
                176,
                208,
                224,
                256,
                296,
                328,
                344,
                376,
                392,
                408,
                424,
                440,
                456,
                472,
                488,
                504,
                536,
                552,
                568,
                584,
                600,
                616,
                680,
                712,
                744,
                776,
                808,
                872,
                936,
                1000,
                1032,
                1096,
                1128,
                1192,
                1224,
                1256,
                1352,
                1384,
                1544,
                1608,
                1736,
                1800,
                2024,
                2280,
                2536
            ],
            "title": "TbSize",
            "type": "integer"
        },
        "TbSizeItem": {
            "maximum": 195816,
            "minimum": 16,
            "title": "TbSizeItem",
            "type": "integer"
        },
        "Tdd": {
            "additionalProperties": false,
            "description": "TDD specific configuration. This field should be set to null if duplex mode is FDD",
            "properties": {
                "special_subframe_configuration": {
                    "description": "TDD special subframe configuration according to 36.211 $4.2. Maps to tddSpecialSubframeConf in PhyDlCellSetupReq message.",
                    "maximum": 9,
                    "minimum": 0,
                    "title": "Special Subframe Configuration",
                    "type": "integer"
                },
                "uplink_downlink_configuration": {
                    "description": "TDD uplink downlink configuration according to 36.211 $4.2. Maps to tddUplinkDownlinkConf in PhyDlCellSetupReq message.",
                    "maximum": 6,
                    "minimum": 0,
                    "title": "Uplink Downlink Configuration",
                    "type": "integer"
                }
            },
            "required": [
                "uplink_downlink_configuration",
                "special_subframe_configuration"
            ],
            "title": "Tdd",
            "type": "object"
        },
        "TddSettings": {
            "additionalProperties": false,
            "properties": {
                "tddHighCapacity": {
                    "description": "Defines if the cell is an high capacity one (over 400 PUCCH ues) in order to adapt latency thresholds, UlPhyData Table 9",
                    "title": "Tddhighcapacity",
                    "type": "boolean"
                },
                "tddSpecialSubframeConf": {
                    "description": "TDD special subframe configuration according to 36.211 Table 4.2-1",
                    "maximum": 9,
                    "minimum": 0,
                    "title": "Tddspecialsubframeconf",
                    "type": "integer"
                },
                "tddUplinkDownlinkConf": {
                    "description": "Defines which subframes are DL/UL or S(Special, needed when switching from DL to UL) as per 36.211 Table 4.2-2",
                    "title": "Tdduplinkdownlinkconf",
                    "type": "integer"
                }
            },
            "required": [
                "tddSpecialSubframeConf",
                "tddUplinkDownlinkConf",
                "tddHighCapacity"
            ],
            "title": "TddSettings",
            "type": "object"
        },
        "TddUciSettings": {
            "additionalProperties": false,
            "properties": {
                "anBitsTdd": {
                    "description": "List of bits sets for TDD CA - bit set is represented by list of integers. Each bit set could be empty or contain up to 10 Ack/Nack bits. List elements (bit sets) should be interpreted as: [[PCell bits] [SCell0 bits], ..., [SCell3 bits]]",
                    "items": {
                        "$ref": "#/$defs/AnBitsTddItem"
                    },
                    "maxItems": 5,
                    "title": "Anbitstdd",
                    "type": "array"
                },
                "cqiBits": {
                    "description": "Two-dimensional array[subframe][bit] of CQI bits per subframe. Subframe elements are looped until the frame is filled.",
                    "items": {
                        "$ref": "#/$defs/CqiBit"
                    },
                    "maxItems": 10,
                    "title": "Cqibits",
                    "type": "array"
                },
                "cwSchedInfoTdd": {
                    "description": "Field defines the number of transport blocks (TBs) scheduled for every DL CC with DL_Subframe (TDD) configured for UE. There are 2 CWs for each one of maximum 5 DL_Subframes. List should be interpreted as: [PCellNumOfTBs, SCell0NumOfTBs, ..., SCell3NumOfTBs]",
                    "items": {
                        "$ref": "#/$defs/CwSchedInfoTddItem"
                    },
                    "maxItems": 5,
                    "title": "Cwschedinfotdd",
                    "type": "array"
                },
                "harqAckSize": {
                    "description": "Harq-Ack feedback parameters. Indicate the number of DL codeword configured for UE per cell.",
                    "items": {
                        "$ref": "#/$defs/HarqAckSizeItem"
                    },
                    "maxItems": 5,
                    "title": "Harqacksize",
                    "type": "array"
                },
                "harqAckType": {
                    "$ref": "#/$defs/HarqAckType"
                },
                "harqProcessesInfoPacked": {
                    "description": "Two-dimensional array[cell][codeword]. This field defines the number of bundled downlink subframes which relates to HARQ_ACK bits and shall be used by LTE PHY for descrambling sequence selection for ACK/NACK bundling on PUSCH. [[PCellCW0, PCellCW1], [SCell1CW0, SCell1CW1]...[SCell4CW0, SCell4CW1]]",
                    "items": {
                        "$ref": "#/$defs/HarqProcessesInfoPackedItem"
                    },
                    "maxItems": 5,
                    "title": "Harqprocessesinfopacked",
                    "type": "array"
                },
                "isSpsEnabled": {
                    "description": "Indicates whether SPS transmission is enabled. ",
                    "title": "Isspsenabled",
                    "type": "boolean"
                },
                "numberOfDlHarqSubframesPacked": {
                    "description": "Indicates the number of downlink subframes per cell to feedback HARQ ACK. [[PCell number] [SCell1 number], ..., [SCell4 number]].",
                    "items": {
                        "$ref": "#/$defs/NumberOfDlHarqSubframesPackedItem"
                    },
                    "maxItems": 5,
                    "title": "Numberofdlharqsubframespacked",
                    "type": "array"
                },
                "numberOfDlHarqSubframesPackedScell": {
                    "description": "Indicates the number of downlink subframes per serving cell (in Carrier Aggregation mode) to feedback HARQ ACK. [[SCell1 number], ..., [SCell4 number]]. This parameter is only valid for PUCCH format 3. Otherwise, set them to 0.",
                    "items": {
                        "$ref": "#/$defs/NumberOfDlHarqSubframesPackedScellItem"
                    },
                    "maxItems": 4,
                    "title": "Numberofdlharqsubframespackedscell",
                    "type": "array"
                },
                "pucchCqiSizes": {
                    "description": "TDD Two-dimensional array[subframe][ri] of CQI sizes for single serving cell chosen in 'settings'. Subframe elements are looped until the frame is filled. This is repeated separately for each frame. The cqiSize[subframe][0], ... , cqiSize[subframe][3] corresponds to RI=1, ..., 4. To disable cqi resource in given subframe use 0 values for all cqi sizes. This has to be aligned with user allocation field. If field is left empty CQI processing is turned off for this user.",
                    "items": {
                        "$ref": "#/$defs/PucchCqiSize"
                    },
                    "maxItems": 10,
                    "title": "Pucchcqisizes",
                    "type": "array"
                },
                "servingCellType": {
                    "description": "Field defines type of serving cell fdd or tdd. List should be interpreted as: [PCellType, SCell0Type, ..., SCell3Type]",
                    "items": {
                        "$ref": "#/$defs/ServingCellTypeEnum"
                    },
                    "maxItems": 5,
                    "title": "Servingcelltype",
                    "type": "array"
                }
            },
            "required": [
                "anBitsTdd",
                "cwSchedInfoTdd",
                "servingCellType",
                "harqAckType",
                "harqProcessesInfoPacked",
                "harqAckSize",
                "numberOfDlHarqSubframesPacked",
                "numberOfDlHarqSubframesPackedScell",
                "cqiBits",
                "pucchCqiSizes",
                "isSpsEnabled"
            ],
            "title": "TddUciSettings",
            "type": "object"
        },
        "ThetaB": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "ThetaB",
            "type": "number"
        },
        "ThetaM": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "ThetaM",
            "type": "number"
        },
        "ThresholdMethod": {
            "description": "Method to obtain DTX threshold. Maps to PucchDtxDet.ThrMethod in 5GMax.",
            "enum": [
                "LUT",
                "Analytical",
                "TargetSet"
            ],
            "title": "ThresholdMethod",
            "type": "string"
        },
        "ThresholdScalerItem": {
            "maximum": 500,
            "minimum": 5,
            "title": "ThresholdScalerItem",
            "type": "integer"
        },
        "Time": {
            "additionalProperties": false,
            "properties": {
                "delay": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Delay1"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "delay"
            ],
            "title": "Time",
            "type": "object"
        },
        "TimeDensity": {
            "description": "Parameter L(PT-RS) in 38.211 section 7.4.1.2.2. Maps to dlPtrsTimeDensity in PdschSendReq message.\n Maps to PtrsMcsThr in 5GMax.",
            "enum": [
                1,
                2,
                4
            ],
            "title": "TimeDensity",
            "type": "integer"
        },
        "TimeOffset": {
            "title": "TimeOffset",
            "type": "number"
        },
        "TimingAdvance": {
            "maximum": 17000,
            "minimum": 0,
            "title": "TimingAdvance",
            "type": "integer"
        },
        "TimingAdvancePerSlot": {
            "description": "Timing advance in microseconds for real time messages, it should be determined regarding to different combination\nof duplex_mode/carrier_frequency(FR1/FR2)/cpri_type/message_type. Timing advance can be an array of single element\napplicable to all slots of a subframe or can be an array of size equal to the number of slots per subframe and the\nindex of the array represents the slot number and value represents the timing advance of the corresponding slot.\nIt is from BB L1 synchronization for ABIO/ABIN L1 5G_20B and 5G_RAN_UP_25383",
            "items": {
                "$ref": "#/$defs/TimingAdvancePerSlotItem"
            },
            "maxItems": 32,
            "minItems": 1,
            "title": "TimingAdvancePerSlot",
            "type": "array"
        },
        "TimingAdvancePerSlotItem": {
            "maximum": 17000,
            "minimum": 0,
            "title": "TimingAdvancePerSlotItem",
            "type": "integer"
        },
        "TimingDelay": {
            "maximum": 17000,
            "minimum": 0,
            "title": "TimingDelay",
            "type": "integer"
        },
        "TimingOffsets": {
            "additionalProperties": false,
            "properties": {
                "PHY_RemoteInterferenceSeqDetectReq": {
                    "description": "timing offset for PHY_RemoteInterferenceSeqDetectReq",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Remoteinterferenceseqdetectreq",
                    "type": "integer"
                },
                "PHY_UlBfUeWeightsUpdateInd": {
                    "description": "timing offset for PHY_UlBfUeWeightsUpdateInd",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Ulbfueweightsupdateind",
                    "type": "integer"
                },
                "PHY_UlCompReq": {
                    "description": "timing offset for PHY_UlCompReq",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Ulcompreq",
                    "type": "integer"
                },
                "PHY_UlFftDataFwdReq": {
                    "description": "timing offset for PHY_UlFftDataFwdReq",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Ulfftdatafwdreq",
                    "type": "integer"
                },
                "PHY_UlNbReceiveReq": {
                    "description": "timing offset for PHY_UlNbReceiveReq",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Ulnbreceivereq",
                    "type": "integer"
                },
                "PHY_UlReceiveReq": {
                    "description": "timing offset for PHY_UlReceiveReq",
                    "maximum": 100,
                    "minimum": -100,
                    "title": "Phy Ulreceivereq",
                    "type": "integer"
                }
            },
            "required": [
                "PHY_RemoteInterferenceSeqDetectReq",
                "PHY_UlReceiveReq",
                "PHY_UlNbReceiveReq",
                "PHY_UlFftDataFwdReq",
                "PHY_UlBfUeWeightsUpdateInd",
                "PHY_UlCompReq"
            ],
            "title": "TimingOffsets",
            "type": "object"
        },
        "Tm9CellMode": {
            "description": "TM9 cell mode. Maps to tm9CellMode in PhyDlCellSetupReq message.",
            "enum": [
                "NotDefined",
                "LiquidCell",
                "SingleCell"
            ],
            "title": "Tm9CellMode",
            "type": "string"
        },
        "TocMode": {
            "description": "Toc mode. Maps to ParUnit{1}.RX.CE.TocModeSRS in 5GMAX.",
            "enum": [
                "Fixed",
                "AdaptivePeak"
            ],
            "title": "TocMode",
            "type": "string"
        },
        "Tolerance": {
            "additionalProperties": false,
            "properties": {
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "violations": {
                    "title": "Violations",
                    "type": "integer"
                }
            },
            "required": [
                "value",
                "violations"
            ],
            "title": "Tolerance",
            "type": "object"
        },
        "Tolerances": {
            "additionalProperties": false,
            "description": "Tolerances configuration for comparator. Default values will be used if set to null.",
            "properties": {
                "dl_evm": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Max allowed error vector magnitude for DL antenna comparator",
                    "title": "Dl Evm"
                },
                "lte_ul_tolerances": {
                    "anyOf": [
                        {
                            "patternProperties": {
                                "^\\d+$": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/$defs/TolerancesLteUl"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ]
                                }
                            },
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Lte Ul Tolerances"
                }
            },
            "required": [
                "dl_evm",
                "lte_ul_tolerances"
            ],
            "title": "Tolerances",
            "type": "object"
        },
        "TolerancesLteUl": {
            "additionalProperties": false,
            "description": "4G UL message tolerances",
            "properties": {
                "NbTolerances": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Nbtolerances"
                },
                "cellSetup": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Cellsetup"
                },
                "nbPrach": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Nbprach"
                },
                "nbPusch": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Nbpusch"
                },
                "prach": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Prach"
                },
                "pucch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PucchTolerances"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "pusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PuschTolerance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "srs": {
                    "anyOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Srs"
                },
                "time": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Time"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "NbTolerances",
                "cellSetup",
                "nbPrach",
                "nbPusch",
                "prach",
                "pucch",
                "pusch",
                "srs",
                "time"
            ],
            "title": "TolerancesLteUl",
            "type": "object"
        },
        "TransComb": {
            "description": "Indicates transmission combination",
            "enum": [
                0,
                1
            ],
            "title": "TransComb",
            "type": "integer"
        },
        "TransmissionComb": {
            "description": "Transmission comb. Maps to CombNum in 5GMAX. Introduced by B008322-SR-D feature for Loki NR.",
            "enum": [
                2,
                4
            ],
            "title": "TransmissionComb",
            "type": "integer"
        },
        "TransmissionCombId": {
            "description": "UE transmits SRS on one of the 2 or 4 possible SRS combs. Maps to TxComb in 5GMAX.",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "title": "TransmissionCombId",
            "type": "integer"
        },
        "TransmissionDelay": {
            "description": "Represents delay between user and base station units. Values are given in microseconds",
            "items": {
                "$ref": "#/$defs/TransmissionDelayItem"
            },
            "maxItems": 6,
            "minItems": 1,
            "title": "TransmissionDelay",
            "type": "array"
        },
        "TransmissionDelayItem": {
            "maximum": 10000.0,
            "minimum": 0.0,
            "title": "TransmissionDelayItem",
            "type": "number"
        },
        "TxCount": {
            "description": "Define number of transmission for each TB. The first transmission is a new transmission, the remaining txCount - 1\n transmissions are re-tx.",
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "title": "TxCount",
            "type": "integer"
        },
        "TxCount1": {
            "description": "Number of transmission bundles for a single transport block. Applies to asynchronous Harq process only.",
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "title": "TxCount1",
            "type": "integer"
        },
        "TxPower": {
            "maximum": 6000,
            "minimum": -6000,
            "title": "TxPower",
            "type": "integer"
        },
        "Type": {
            "description": "Type of the CSI-RS resource. Maps to CsiRsType in 5GMax.",
            "enum": [
                "NZP-CSI-RS",
                "ZP-CSI-RS",
                "CSI-IM"
            ],
            "title": "Type",
            "type": "string"
        },
        "UciOnPuschScale": {
            "description": "UCI on PUSCH scaling. Maps to UciOnPuschScale parameter in 5GMAX.",
            "enum": [
                0.5,
                0.65,
                0.8,
                1.0
            ],
            "title": "UciOnPuschScale",
            "type": "numeric"
        },
        "UeIndex": {
            "maximum": 8191,
            "minimum": 0,
            "title": "UeIndex",
            "type": "integer"
        },
        "UeType": {
            "description": "Bitmask used to identify different SRS usages and BF type.",
            "enum": [
                0,
                1,
                3
            ],
            "title": "UeType",
            "type": "integer"
        },
        "UlDlDataSlotRatio": {
            "description": "UL/DL slot ratio. Maps to ulDlDataSlotRatio in UlCellSetupRequest.",
            "enum": [
                0,
                3,
                5,
                6
            ],
            "title": "UlDlDataSlotRatio",
            "type": "integer"
        },
        "UlNarrowband": {
            "additionalProperties": false,
            "properties": {
                "cell_slot_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CellSlotConfig"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "cyclicPrefix": {
                    "$ref": "#/$defs/CyclicPrefix"
                },
                "ln_cell_id": {
                    "$ref": "#/$defs/LnCellId"
                },
                "multi_purpose_field": {
                    "$ref": "#/$defs/MultiPurposeField"
                },
                "nbPrach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPrach"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "nbPusch": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/NbPusch"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Definition of nbPusch channel. This field should be set to null if the channel is disabled."
                },
                "phys_cell_id": {
                    "description": "PhyCellId of the nested narrowband cell",
                    "title": "Phys Cell Id",
                    "type": "integer"
                },
                "prbIndex": {
                    "$ref": "#/$defs/PrbIndex"
                }
            },
            "required": [
                "cyclicPrefix",
                "nbPrach",
                "nbPusch",
                "phys_cell_id",
                "ln_cell_id",
                "prbIndex",
                "cell_slot_config",
                "multi_purpose_field"
            ],
            "title": "UlNarrowband",
            "type": "object"
        },
        "UlNarrowbandsModel": {
            "items": {
                "$ref": "#/$defs/UlNarrowband"
            },
            "title": "UlNarrowbandsModel",
            "type": "array"
        },
        "UlRiSelectionThreshold": {
            "anyOf": [
                {
                    "maximum": 10.0,
                    "minimum": 0.05,
                    "type": "number"
                },
                {
                    "type": "null"
                }
            ],
            "title": "UlRiSelectionThreshold"
        },
        "UlRshiftBitsForArxe4": {
            "description": "Number of right shift inside ARXE mode4 to avoid BF overflow, used for Thor both 7-2a and 7-2e (CB007595-SR-B-B1).\nMaps to ArxeRshiftBit in ParUnit{}.DigitalBeamforming.ArxeMode4 in 5GMAX.",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "title": "UlRshiftBitsForArxe4",
            "type": "integer"
        },
        "UlSinrResp": {
            "additionalProperties": false,
            "properties": {
                "sinr": {
                    "$ref": "#/$defs/Tolerance"
                }
            },
            "required": [
                "sinr"
            ],
            "title": "UlSinrResp",
            "type": "object"
        },
        "UnlicensedPesfMode": {
            "description": "Enables/disables random data padding during DRS transmission. Maps to PHY_DlCellSetupReq.unlicensedPesfMode\nand ParCell{1}.RRC.Type3.EndSubfrConfig.",
            "enum": [
                0,
                6,
                9,
                10
            ],
            "title": "UnlicensedPesfMode",
            "type": "integer"
        },
        "UnscheduledPrbRange": {
            "additionalProperties": false,
            "properties": {
                "num_of_prb": {
                    "description": "Number of consecutive unscheduled PRB",
                    "maximum": 273,
                    "minimum": 1,
                    "title": "Num Of Prb",
                    "type": "integer"
                },
                "start_prb": {
                    "description": "Start PRB of consecutive unscheduled PRB range",
                    "maximum": 272,
                    "minimum": 0,
                    "title": "Start Prb",
                    "type": "integer"
                }
            },
            "required": [
                "start_prb",
                "num_of_prb"
            ],
            "title": "UnscheduledPrbRange",
            "type": "object"
        },
        "UnscheduledRegionInfoItem": {
            "additionalProperties": false,
            "properties": {
                "e_cpri_section_id": {
                    "description": "12-bit eCPRI section ID containing the Uplink Beamforming Region Id that is relevant for MADE RU implementation. Only bits [11:0] are valid. Remaining 4 bits are not used. This parameter is used directly to populate sectionId fields of eCPRI UL FCP. For details refer to 5G_UP_ALG_5163 and BTSC_L1_Req_7047.",
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "E Cpri Section Id",
                    "type": "integer"
                },
                "num_of_symbols": {
                    "description": "Number of symbols of the unscheduled region",
                    "maximum": 14,
                    "minimum": 1,
                    "title": "Num Of Symbols",
                    "type": "integer"
                },
                "start_symbol": {
                    "description": "Start symbol of unscheduled region",
                    "maximum": 13,
                    "minimum": 0,
                    "title": "Start Symbol",
                    "type": "integer"
                },
                "unscheduled_prb_ranges": {
                    "items": {
                        "$ref": "#/$defs/UnscheduledPrbRange"
                    },
                    "maxItems": 30,
                    "minItems": 1,
                    "title": "Unscheduled Prb Ranges",
                    "type": "array"
                }
            },
            "required": [
                "start_symbol",
                "num_of_symbols",
                "e_cpri_section_id",
                "unscheduled_prb_ranges"
            ],
            "title": "UnscheduledRegionInfoItem",
            "type": "object"
        },
        "UplinkCellRadioUnit": {
            "additionalProperties": false,
            "description": "Radio Unit configuration",
            "properties": {
                "ecpri_sfn_n1_offset": {
                    "description": "N1 part of SFN timing offset which counts 10 ms frames",
                    "maximum": 32768,
                    "minimum": -32769,
                    "title": "Ecpri Sfn N1 Offset",
                    "type": "integer"
                },
                "ecpri_sfn_n2_offset": {
                    "description": "N2 part of SFN timing offset which counts clock cycles within 10 ms frame",
                    "maximum": 12287999,
                    "minimum": 0,
                    "title": "Ecpri Sfn N2 Offset",
                    "type": "integer"
                },
                "fcp": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/Fcp"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "iq_sample_format": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__cell__nr__radio_unit__IqSampleFormat"
                },
                "number_of_prach_streams": {
                    "anyOf": [
                        {
                            "maximum": 4,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "number of prach streams in radio_unit for7_2e",
                    "title": "Number Of Prach Streams"
                },
                "number_of_pucch_streams": {
                    "anyOf": [
                        {
                            "maximum": 8,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "number of pucch streams in radio_unit for7_2e",
                    "title": "Number Of Pucch Streams"
                },
                "number_of_srs_streams": {
                    "anyOf": [
                        {
                            "maximum": 16,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "number of prach streams in radio_unit for7_2e",
                    "title": "Number Of Srs Streams"
                },
                "prach": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PrachRu"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "rt_beamforming_patterns_set": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/RtBeamformingPattersSet"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "start_frame_n2": {
                    "description": "Start instant of the frame in UTUs. UTU = Universal Time Unit. Maps to start_frame_n2 in ECpriLowLevelRxAxcState.",
                    "minimum": 0,
                    "title": "Start Frame N2",
                    "type": "integer"
                },
                "subcell_type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/SubcellType"
                        }
                    ],
                    "description": "Defines the subcell_type. Maps to subcell_type in combinelinkConf"
                }
            },
            "required": [
                "fcp",
                "prach",
                "subcell_type",
                "rt_beamforming_patterns_set",
                "iq_sample_format",
                "number_of_pucch_streams",
                "number_of_prach_streams",
                "number_of_srs_streams",
                "start_frame_n2",
                "ecpri_sfn_n1_offset",
                "ecpri_sfn_n2_offset"
            ],
            "title": "UplinkCellRadioUnit",
            "type": "object"
        },
        "UsedResource": {
            "description": "Indicates on which PUCCH resource given user should transmit. Available resource types: 'None', 'SR', 'AnLegacy',\n 'AnCA', 'CQI'",
            "enum": [
                "None",
                "SR",
                "AnLegacy",
                "AnCA",
                "CQI"
            ],
            "title": "UsedResource",
            "type": "string"
        },
        "UserCe": {
            "additionalProperties": false,
            "properties": {
                "mode": {
                    "$ref": "#/$defs/CeMode"
                },
                "numOfRepetitions": {
                    "$ref": "#/$defs/NumOfRepetitions2"
                },
                "txInterval": {
                    "description": "Interval (counting in TTIs) between subsequent CATM user transmissions.",
                    "minimum": 0,
                    "title": "Txinterval",
                    "type": "integer"
                }
            },
            "required": [
                "mode",
                "numOfRepetitions",
                "txInterval"
            ],
            "title": "UserCe",
            "type": "object"
        },
        "UserDefinedModelConfig": {
            "description": "Raw model configuration lines. Each line must be valid model statement/expresion. Only for debugging new model\nconfigurations not supported by trx. Note that for each cell trx runs individual simulation",
            "items": {
                "type": "string"
            },
            "title": "UserDefinedModelConfig",
            "type": "array"
        },
        "UserPdsch": {
            "additionalProperties": false,
            "description": "PDSCH parameters for a single user",
            "properties": {
                "alternative_bwp_index": {
                    "anyOf": [
                        {
                            "maximum": 2,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Index of alternative bwps in cell downlink, null indicates using default whole carrier bandwidth. Maps to DlBwpIdx (2-4) in 5GMax.",
                    "title": "Alternative Bwp Index"
                },
                "best_beam_power_offset": {
                    "$ref": "#/$defs/BestBeamPowerOffset"
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Set of stream indices to be used for transmission on both eCPRI and CPRI Fronthaul. 4 antennas tests may have an issue with the indices order. They pass with [0,2,1,3]. The reference data changes according to the indices, but the l1sw IQ samples do not (always remain on the same antennas). TRX passes the indices unmodified."
                },
                "closedloop_3gpp_codebook": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Closedloop3gppCodebook"
                        }
                    ],
                    "description": "Type of codebook for closed loop transmission. Value XportTypeICodebook means Type I Single-Panel codebook for X ports. Maps to closedLoop3gppCodebook in PdschSendReq message."
                },
                "custom_resource_allocations_order": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PdschCustomResourceAllocationsOrder"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Overrides order present in resource_allocations field, allows for shorter and easier to read SCT filesin long tests. For example check documentation /sct_definition/schema_processing."
                },
                "data_source": {
                    "$ref": "#/$defs/DataSource2"
                },
                "diversity_scheme": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/DiversityScheme"
                        }
                    ],
                    "description": "Antenna diversity scheme and MIMO scheme. For values other than LCDD, SCDD, IdenPrec, it maps to INVALID (255) value. Maps to openLoopScheme in PdschSendReq message. IdenPrec is mapped to INVALID (255) in case of CL_4x4_or_4x2_MIMO or CL_8x4_MIMO"
                },
                "dmrs": {
                    "$ref": "#/$defs/PdschDmrs"
                },
                "enable_pdsch_shared_symbol_with_pdcch": {
                    "description": "Enable pdsch shared symbol with pdcch, introduced from CB008370. Map to NrPdcchRmPunc in 5GMAX",
                    "title": "Enable Pdsch Shared Symbol With Pdcch",
                    "type": "boolean"
                },
                "encoder": {
                    "$ref": "#/$defs/PdschEncoderModel"
                },
                "harq": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PdschHarq"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "lte_crs_option": {
                    "$ref": "#/$defs/LteCrsOption"
                },
                "open_loop_scheme": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/OpenLoopScheme"
                        }
                    ],
                    "description": "Parameter to indicate the open loop scheme when dlMimoMode is open loop. Value INVALID is set by L2 when spatialMode is closed loop/singleTx. Value IdentityCodebook is only used when subbandBF is enabled"
                },
                "polarization_selection": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PolarizationSelection"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "precoding": {
                    "$ref": "#/$defs/PdschPrecoding"
                },
                "ptrs": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/PdschPtrs"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "rbg_size_configuration": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RbgSizeConfiguration"
                        }
                    ],
                    "description": "The configuration to determine RBG size in 38.214 table 5.1.2.2.1-1. It is used to determine rbgSize in PdschSendReq message. Maps to RBGsize in 5GMax. Relevant only for RAT0."
                },
                "relative_power": {
                    "description": "UE specific PDSCH relative power in dB. Calculated as following relative_power = (-100*log10(12*bw) - pdschTbTransmitPower)*0.1. Maps to RelPowDb in 5GMAX. Maps to pdschTbTransmitPower in PdschSendReq message.",
                    "title": "Relative Power",
                    "type": "number"
                },
                "resource_allocations": {
                    "$ref": "#/$defs/PdschResourceAllocation"
                },
                "scrambling_id": {
                    "anyOf": [
                        {
                            "maximum": 1007,
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Data scrambling identity as n_ID which defined in 3GPP 38.211 $7.3.1.1, phys_cell_id will be used if set as null. Allowed range in Multi is not align with 3GPP. Maps to pdschScramblingSeqInit in PdschSendReq message.",
                    "title": "Scrambling Id"
                },
                "sib1_transmission": {
                    "description": "SIB1 transmission. Maps to Sib1Flag in 5GMax. Needed to set offsetRbDmrs in PdschSendReq message",
                    "title": "Sib1 Transmission",
                    "type": "boolean"
                },
                "start_pattern": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Starting PatternID to be set in the case of enabling FCP extension type 11 beamforming weights.",
                    "title": "Start Pattern"
                },
                "tb_power_boost_val": {
                    "$ref": "#/$defs/TbPowerBoostVal"
                }
            },
            "required": [
                "relative_power",
                "diversity_scheme",
                "open_loop_scheme",
                "rbg_size_configuration",
                "resource_allocations",
                "encoder",
                "precoding",
                "dmrs",
                "ptrs",
                "lte_crs_option",
                "scrambling_id",
                "data_source",
                "polarization_selection",
                "ce_axc_indices",
                "sib1_transmission",
                "alternative_bwp_index",
                "closedloop_3gpp_codebook",
                "best_beam_power_offset",
                "tb_power_boost_val",
                "harq",
                "start_pattern",
                "enable_pdsch_shared_symbol_with_pdcch",
                "custom_resource_allocations_order"
            ],
            "title": "UserPdsch",
            "type": "object"
        },
        "UserTolerances": {
            "additionalProperties": false,
            "properties": {
                "ackBits": {
                    "description": "Maximum allowable number of mismatched Ack/Nack bits",
                    "minimum": 0,
                    "title": "Ackbits",
                    "type": "integer"
                },
                "ackResults": {
                    "description": "Maximum allowable number of mismatched Ack results",
                    "minimum": 0,
                    "title": "Ackresults",
                    "type": "integer"
                },
                "compUsage": {
                    "description": "Maximum allowable number of mismatched CoMP usage indicators",
                    "minimum": 0,
                    "title": "Compusage",
                    "type": "integer"
                },
                "cqiBits": {
                    "description": "Maximum allowable number of mismatched CQI bits",
                    "minimum": 0,
                    "title": "Cqibits",
                    "type": "integer"
                },
                "cqiResults": {
                    "description": "Maximum allowable number of mismatched CQI results",
                    "minimum": 0,
                    "title": "Cqiresults",
                    "type": "integer"
                },
                "crcResult": {
                    "description": "Maximum allowable number of mismatched results of data block reception",
                    "minimum": 0,
                    "title": "Crcresult",
                    "type": "integer"
                },
                "crcResultGrouped": {
                    "description": "Maximum allowable number of mismatched SPuschUeReceiveRespU's crcResults in PuschReceiveGroupedRespU",
                    "minimum": 0,
                    "title": "Crcresultgrouped",
                    "type": "integer"
                },
                "crnti": {
                    "description": "Maximum allowable number of mismatched results of crntis",
                    "minimum": 0,
                    "title": "Crnti",
                    "type": "integer"
                },
                "freqOffset": {
                    "$ref": "#/$defs/FreqOffset"
                },
                "harqType": {
                    "description": "Maximum number of mismatched harqTypes",
                    "minimum": 0,
                    "title": "Harqtype",
                    "type": "integer"
                },
                "modeSpecificInfo": {
                    "description": "Maximum number of mismatched modeSpecificInfo from UlPwrMeasResp message",
                    "minimum": 0,
                    "title": "Modespecificinfo",
                    "type": "integer"
                },
                "numOfAllocPrbs": {
                    "description": "Maximum allowable number of mismatched numbers of PRBs allocated for UEs",
                    "minimum": 0,
                    "title": "Numofallocprbs",
                    "type": "integer"
                },
                "postCombSinr": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "Maximum allowable number of mismatched Ue's SINR in dB after combining"
                },
                "pwrFormat": {
                    "description": "Maximum number of mismatched formats from UlPwrMeasResps",
                    "minimum": 0,
                    "title": "Pwrformat",
                    "type": "integer"
                },
                "riBits": {
                    "description": "Maximum allowable number of mismatched RI bits",
                    "minimum": 0,
                    "title": "Ribits",
                    "type": "integer"
                },
                "riResults": {
                    "description": "Maximum allowable number of mismatched RI quality results",
                    "minimum": 0,
                    "title": "Riresults",
                    "type": "integer"
                },
                "rssi": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "Maximum allowable number of mismatched RSSI measurements"
                },
                "signalPower": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "PUSCH user signal power tolerance [dBm]"
                },
                "sinr": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "Maximum allowable number of mismatched SINR results"
                },
                "tbSize": {
                    "description": "Size of transport block. Maximum available size is 75376. TB pattern in 4GMax should be set to random",
                    "minimum": 0,
                    "title": "Tbsize",
                    "type": "integer"
                },
                "timingAdv": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/Tolerance"
                        }
                    ],
                    "description": "PUSCH user timing advance tolerance [TS] (TS=1/30720000 s)"
                },
                "transportBlock": {
                    "description": "Maximum allowable number of mismatched results of transportBlocks. Transport block is missing when crc fails, so usually transportBlock is supposed to be set to the same number as crcResult",
                    "minimum": 0,
                    "title": "Transportblock",
                    "type": "integer"
                },
                "txCount": {
                    "description": "Maximum allowable number of mismatched HARQ transmission counters",
                    "minimum": 0,
                    "title": "Txcount",
                    "type": "integer"
                },
                "ulReliability": {
                    "description": "Type of simulated channel",
                    "minimum": 0,
                    "title": "Ulreliability",
                    "type": "integer"
                },
                "ulReliabilityMeas": {
                    "description": "Maximum allowable number of mismatched reliabilities coded in 4 LSB bits of SPwrMeasResp's status field in UlPwrMeasResp",
                    "minimum": 0,
                    "title": "Ulreliabilitymeas",
                    "type": "integer"
                }
            },
            "required": [
                "ackBits",
                "ackResults",
                "compUsage",
                "cqiBits",
                "cqiResults",
                "crcResult",
                "crcResultGrouped",
                "crnti",
                "freqOffset",
                "harqType",
                "modeSpecificInfo",
                "numOfAllocPrbs",
                "postCombSinr",
                "pwrFormat",
                "riBits",
                "riResults",
                "rssi",
                "signalPower",
                "sinr",
                "tbSize",
                "timingAdv",
                "transportBlock",
                "txCount",
                "ulReliability",
                "ulReliabilityMeas"
            ],
            "title": "UserTolerances",
            "type": "object"
        },
        "Variant": {
            "description": "Customer specific setting.",
            "enum": [
                "DefaultUe",
                "5GUe19",
                "5GUe19A",
                "5GUe19B",
                "5GUe20A",
                "5GUe20B",
                "5GUe21A",
                "5GUe21B",
                "Ue22R1",
                "Ue22R2",
                "Ue22R3",
                "Ue22R4"
            ],
            "title": "Variant",
            "type": "string"
        },
        "VirtualBt": {
            "additionalProperties": false,
            "properties": {
                "attenuation": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Attenuation"
                },
                "numOfSymbolTransmissionDelay": {
                    "anyOf": [
                        {
                            "maximum": 26,
                            "minimum": 1,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Numofsymboltransmissiondelay"
                },
                "signatureId": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Signatureid"
                },
                "symbolIndex": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/$defs/SymbolIndexItem"
                            },
                            "maxItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Symbolindex"
                }
            },
            "required": [
                "attenuation"
            ],
            "title": "VirtualBt",
            "type": "object"
        },
        "VirtualBts": {
            "additionalProperties": false,
            "properties": {
                "attenuation": {
                    "description": "Attenuation in dB. Maps to RX.Attenuation in 5GMax",
                    "title": "Attenuation",
                    "type": "number"
                },
                "num_of_symbol_transmission_delay": {
                    "description": "Number of symbols of transmission delay. Used to calculate TransmissionDelay in 5GMax",
                    "maximum": 26,
                    "minimum": 0,
                    "title": "Num Of Symbol Transmission Delay",
                    "type": "integer"
                },
                "user_allocated_rbs": {
                    "description": "Virtual cell's user's allocated RBs. Maps to DLMAP.AllocRBs in 5GMax",
                    "items": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "title": "User Allocated Rbs",
                    "type": "array"
                },
                "user_allocated_symbols": {
                    "description": "Virtual cell's user's allocated symbols. Maps to DLMAP.AllocDataSymbols in 5GMax",
                    "items": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "title": "User Allocated Symbols",
                    "type": "array"
                }
            },
            "required": [
                "num_of_symbol_transmission_delay",
                "attenuation",
                "user_allocated_rbs",
                "user_allocated_symbols"
            ],
            "title": "VirtualBts",
            "type": "object"
        },
        "Weight": {
            "description": "Weight configuration, 2-element list representing a complex number - real part on the zeroth index and imaginary\npart on the first index. They are expressed in a Q1.0.15 format.",
            "items": {
                "$ref": "#/$defs/WeightItem"
            },
            "maxItems": 2,
            "minItems": 2,
            "title": "Weight",
            "type": "array"
        },
        "WeightItem": {
            "maximum": 32767,
            "minimum": -32768,
            "title": "WeightItem",
            "type": "integer"
        },
        "ZeroPowerResources": {
            "additionalProperties": false,
            "description": "Zero power CSI-RS specific configuration.",
            "properties": {
                "configurations": {
                    "description": "Bit map of zero-power CSI-RS resource configurations. Maps to zeroTxPowerResourceConfigList in DlCellSetupReq message and to ParCell.RRC.CsiRs.Configuration in 5gmax. Setting 1 in the array set the corresponding index as configuration index; eg. [0, 0, 1, 0, 1] results in configurations 2 & 4",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 16,
                    "title": "Configurations",
                    "type": "array"
                },
                "subframe_configuration": {
                    "description": "Subframe Configuration for the zero-power CSI-RS. Maps to zeroTxPowerSubframeConfig in DlCellSetupReq message and to ParCell.RRC.CsiRs.SubframeConfig in 5gmax.",
                    "maximum": 154,
                    "minimum": 0,
                    "title": "Subframe Configuration",
                    "type": "integer"
                }
            },
            "required": [
                "configurations",
                "subframe_configuration"
            ],
            "title": "ZeroPowerResources",
            "type": "object"
        },
        "trx5g__l1_sct_definition__cell__lte__interferer_cell__NumberOfRxAntennas": {
            "description": "Number of antennas",
            "enum": [
                2,
                4,
                6,
                8,
                10,
                12
            ],
            "title": "NumberOfRxAntennas",
            "type": "integer"
        },
        "trx5g__l1_sct_definition__cell__lte__uplink__NumberOfRxAntennas": {
            "description": "Number of antennas",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                10,
                12,
                32,
                64
            ],
            "title": "NumberOfRxAntennas",
            "type": "integer"
        },
        "trx5g__l1_sct_definition__cell__nr__radio_unit__IqSampleFormat": {
            "description": "Defines the IQ data encoding format. Maps to iq_sample_format in ECpriLowLevelRxLinkConf.",
            "enum": [
                "UNKNOWN",
                "BFPC_IQ9",
                "BFPC_IQ14",
                "BFPC_IQ9_E7"
            ],
            "title": "IqSampleFormat",
            "type": "string"
        },
        "trx5g__l1_sct_definition__fronthaul__IqSampleFormat": {
            "description": "Maps to iqSampleFormat in Api2BbbCreateAxcReq message.",
            "enum": [
                9,
                12,
                15,
                16
            ],
            "title": "IqSampleFormat",
            "type": "integer"
        },
        "trx5g__l1_sct_definition__sct_configuration__bb_resource_reconfiguration__Domain": {
            "enum": [
                "UL",
                "DL"
            ],
            "title": "Domain",
            "type": "string"
        },
        "trx5g__l1_sct_definition__sct_configuration__sw_configuration__Domain": {
            "description": "Required domain",
            "enum": [
                "UL",
                "DL",
                "SRS"
            ],
            "title": "Domain",
            "type": "string"
        },
        "trx5g__l1_sct_definition__user__lte_user__AggregationLevel": {
            "description": "Number of CCE occupied by DCI. Maps to NumCCE in 5GMax.",
            "enum": [
                1,
                2,
                4,
                8,
                24
            ],
            "title": "AggregationLevel",
            "type": "integer"
        },
        "trx5g__l1_sct_definition__user__lte_user__DciItem": {
            "additionalProperties": false,
            "properties": {
                "aggregation_level": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__user__lte_user__AggregationLevel"
                },
                "allocated_subframes": {
                    "description": "Indicates whether DCI is allocated in given subframe. The i-th entry in the array corresponds to the i-th subframe, counting from zero. Maps to AllocSubfr in 5GMax.",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "maxItems": 10,
                    "minItems": 10,
                    "title": "Allocated Subframes",
                    "type": "array"
                },
                "format_type": {
                    "$ref": "#/$defs/FormatType"
                },
                "start_cce": {
                    "description": "Index of the 1st CCE that is used by DCI. Maps to StartCCE in 5GMax.",
                    "maximum": 86,
                    "minimum": 0,
                    "title": "Start Cce",
                    "type": "integer"
                },
                "tb_size": {
                    "description": "DCI payload size in bits. Maps to Mcs.Tbs in 5GMax.",
                    "maximum": 64,
                    "minimum": 1,
                    "title": "Tb Size",
                    "type": "integer"
                }
            },
            "required": [
                "aggregation_level",
                "start_cce",
                "tb_size",
                "allocated_subframes",
                "format_type"
            ],
            "title": "DciItem",
            "type": "object"
        },
        "trx5g__l1_sct_definition__user__nr_user_pdcch__AggregationLevel": {
            "description": "Indicates CCE aggregation levels. Maps to aggregationLevel in PdcchSendReq message. Maps to NumCCE in 5GMax.",
            "enum": [
                1,
                2,
                4,
                8,
                16
            ],
            "title": "AggregationLevel",
            "type": "integer"
        },
        "trx5g__l1_sct_definition__user__nr_user_pdcch__DciItem": {
            "additionalProperties": false,
            "properties": {
                "aggregation_level": {
                    "$ref": "#/$defs/trx5g__l1_sct_definition__user__nr_user_pdcch__AggregationLevel"
                },
                "allocated_slots": {
                    "description": "Indicates slot allocation as boolean vector which defining if PDCCH is transmitted(cyclically repeated in whole test)",
                    "items": {
                        "$ref": "#/$defs/AllocatedSubframe"
                    },
                    "minItems": 1,
                    "title": "Allocated Slots",
                    "type": "array"
                },
                "ce_axc_indices": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/CeAxcIndices"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "coreset_index": {
                    "description": "Indicates the control resource set of pdcch resource blocks, it must be one of coreset_index in downlink cell coreset, one user can be provided with no more than 3 coresets. Used to calculate startSymbolNumber, numOfSymbols from PdcchSendReq. Maps to IdxCORESET in 5GMax.",
                    "maximum": 11,
                    "minimum": 0,
                    "title": "Coreset Index",
                    "type": "integer"
                },
                "dci_index": {
                    "description": "Indicates how many DCIs are sent for given user. Maps to DciIdx in 5GMAX",
                    "minimum": 0,
                    "title": "Dci Index",
                    "type": "integer"
                },
                "dci_scrambling_rnti": {
                    "description": "Used for scrambling in PDCCH. Maps to DciScramblingRnti in 5GMAX",
                    "minimum": 0,
                    "title": "Dci Scrambling Rnti",
                    "type": "integer"
                },
                "dci_size": {
                    "description": "Indicates Dci payload size. Maps to dciSize in PdcchSendReq message.",
                    "maximum": 86,
                    "minimum": 25,
                    "title": "Dci Size",
                    "type": "integer"
                },
                "pattern_id": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/PatternIdSize2"
                        }
                    ],
                    "description": "Specifies beam patternIds to be used for transmission in PDCCH grant. Maps to DciInfo.patternId. Currently supported values for RU tests by 5GMax are: 6-10 and 171-210, inclusive."
                },
                "payload": {
                    "description": "Configurable DCI payload. Number of elements in array should be equal to ceil(dci_size / 8).",
                    "items": {
                        "$ref": "#/$defs/PayloadItem"
                    },
                    "maxItems": 11,
                    "minItems": 4,
                    "title": "Payload",
                    "type": "array"
                },
                "rach_status_allocation": {
                    "description": "Indicates slot allocation as NrRachStatus(Enum) vector which defining if PDCCH slot should be traced.(cyclically repeated in whole test, the cycle is dependent on the length of rach_status_allocation)",
                    "items": {
                        "$ref": "#/$defs/NrRachStatus"
                    },
                    "minItems": 1,
                    "title": "Rach Status Allocation",
                    "type": "array"
                },
                "relative_power": {
                    "description": "Relative power of PDCCH connection in dB. It is used to calculate the pdcchDciTransmitPower, according to following equation:\n -(100*log10(12*bw) - 10*relative_power)\n,where\nbw - bandwidth (PRBs)",
                    "maximum": 35.2,
                    "minimum": -60.4,
                    "title": "Relative Power",
                    "type": "number"
                },
                "request_index": {
                    "description": "Indicates in which pdcch send request this DCI should be sent, up to 2 pdcch send requests are supported per slot.",
                    "maximum": 1,
                    "minimum": 0,
                    "title": "Request Index",
                    "type": "integer"
                },
                "start_cce": {
                    "description": "Indicates starting CCE index. Maps to startCce in PdcchSendReq message. Maps to StartCCE in 5GMax.",
                    "maximum": 134,
                    "minimum": 0,
                    "title": "Start Cce",
                    "type": "integer"
                }
            },
            "required": [
                "request_index",
                "coreset_index",
                "start_cce",
                "aggregation_level",
                "dci_size",
                "relative_power",
                "allocated_slots",
                "ce_axc_indices",
                "rach_status_allocation",
                "payload",
                "pattern_id",
                "dci_scrambling_rnti",
                "dci_index"
            ],
            "title": "DciItem",
            "type": "object"
        }
    },
    "additionalProperties": false,
    "properties": {
        "cells": {
            "items": {
                "discriminator": {
                    "mapping": {
                        "LTE": "#/$defs/LteCell",
                        "NR": "#/$defs/NrCell"
                    },
                    "propertyName": "standard"
                },
                "oneOf": [
                    {
                        "$ref": "#/$defs/LteCell"
                    },
                    {
                        "$ref": "#/$defs/NrCell"
                    }
                ]
            },
            "title": "Cells",
            "type": "array"
        },
        "fronthaul": {
            "anyOf": [
                {
                    "$ref": "#/$defs/Fronthaul"
                },
                {
                    "type": "null"
                }
            ]
        },
        "interferer_cells": {
            "items": {
                "$ref": "#/$defs/InterfererCell"
            },
            "title": "Interferer Cells",
            "type": "array"
        },
        "schema_version": {
            "$ref": "#/$defs/SchemaVersion"
        },
        "sct_configuration": {
            "$ref": "#/$defs/SctConfiguration"
        },
        "sct_metadata": {
            "$ref": "#/$defs/SctMetadata"
        },
        "tolerances": {
            "anyOf": [
                {
                    "$ref": "#/$defs/Tolerances"
                },
                {
                    "type": "null"
                }
            ]
        },
        "users": {
            "items": {
                "discriminator": {
                    "mapping": {
                        "LTE": "#/$defs/LteUser",
                        "NR": "#/$defs/NrUser"
                    },
                    "propertyName": "standard"
                },
                "oneOf": [
                    {
                        "$ref": "#/$defs/LteUser"
                    },
                    {
                        "$ref": "#/$defs/NrUser"
                    }
                ]
            },
            "title": "Users",
            "type": "array"
        }
    },
    "required": [
        "cells",
        "interferer_cells",
        "users",
        "fronthaul",
        "tolerances",
        "sct_configuration",
        "sct_metadata",
        "schema_version"
    ],
    "title": "SctDefinition",
    "type": "object"
}